//add dependencies for plugins needed to run the build
buildscript {
    repositories {
        maven { url 'http://download.osgeo.org/webdav/geotools/' }
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.4.0'
    }
}

//apply base plugins to the root, so we can run all the server
//webapps in a single gretty/jetty server
apply plugin: 'idea'

//define repositories needed for all builds
//(this is different than the buildscript block.
//  The buildscript repositories are for RUNNING the build script,
//  This is for repositories needed to find dependencies of the projects)
repositories {
    maven { url 'http://download.osgeo.org/webdav/geotools/' }
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "http://repo.boundlessgeo.com/main/" }
}


apply plugin: 'war'

if (!project.plugins.findPlugin(org.akhikhl.gretty.GrettyPlugin))
    project.apply(plugin: org.akhikhl.gretty.GrettyPlugin)

//a "farm" is the gretty term for multiple webapps that can be run
//in the same webapp service.
farm {
    webapp ':fragility-server'
    webapp ':fragility-mapping'
    webapp ':repo'
    webapp ':hazard-service'
}

//For now, all subprojects are java projects. Later this might change.
//Until then, give them all a basic java build
subprojects {

    apply plugin: 'java'

    repositories {
        maven { url 'http://download.osgeo.org/webdav/geotools/' }
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "http://repo.boundlessgeo.com/main/" }
    }

    dependencies {
        compile "log4j:log4j:1.2.16"
    }
}

//All of our service plugins have some common configuration.
// (war and gretty builds, some basic jersey and mongo dependencies, etc)
// Common configuration between them can be specified here like this.
["fragility-server","fragility-mapping", "repo", "hazard-service"].each { name ->
  project(":$name") {

        apply plugin: 'war'
        if (!project.plugins.findPlugin(org.akhikhl.gretty.GrettyPlugin))
            project.apply(plugin: org.akhikhl.gretty.GrettyPlugin)



        gretty {
            httpPort 8080
        }


        dependencies {

        }
    }
}
