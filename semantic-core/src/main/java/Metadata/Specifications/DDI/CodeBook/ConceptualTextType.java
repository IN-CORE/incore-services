//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.05 at 03:37:15 PM CST 
//


package Metadata.Specifications.DDI.CodeBook;

import java.util.ArrayList;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.xHTML.*;


/**
 * <pre>
 * &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;xhtml:div xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns="ddi:codebook:2_5" xmlns:dc="http://purl.org/dc/terms/" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:saxon="http://xml.apache.org/xslt" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;&lt;xhtml:h1 class="element_title"&gt;Conceptual Text SystemType&lt;/xhtml:h1&gt;&lt;xhtml:div&gt;&lt;xhtml:h2 class="section_header"&gt;Description&lt;/xhtml:h2&gt;&lt;xhtml:div class="description"&gt;This type forms this basis for a textual element which may also provide for a conceptual (see concept) description of the element a longer description (see txt). If the concept and/or txt elements are used, then the element should contain no other child elements or text. Note that if elements from the PHRASE and FORM groups must not be used with elements from the xhtml:BlkNoForm.mix group; one can use either elements from xhtml:BlkNoForm.mix or elements from the PHRASE and FORM groups.&lt;/xhtml:div&gt;&lt;/xhtml:div&gt;&lt;/xhtml:div&gt;
 * </pre>
 * <p>
 * <p>
 * <p>Java class for conceptualTextType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="conceptualTextType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:codebook:2_5}abstractTextType"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;group ref="{ddi:codebook:2_5}PHRASE"/&gt;
 *           &lt;group ref="{ddi:codebook:2_5}FORM"/&gt;
 *           &lt;group ref="{http://www.w3.org/1999/xhtml}BlkNoForm.mix"/&gt;
 *           &lt;element ref="{ddi:codebook:2_5}concept"/&gt;
 *           &lt;element ref="{ddi:codebook:2_5}txt"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "conceptualTextType", propOrder = {
        "extLinksAndLinksAndDivs"
})
@XmlSeeAlso({
        ResInstru.class,
        TimeMeth.class,
        DataKind.class,
        Universe.class,
        Nation.class,
        AnlyUnit.class
})
public class ConceptualTextType
        extends AbstractTextType {

    @XmlElements({
            @XmlElement(name = "ExtLink", type = ExtLink.class),
            @XmlElement(name = "Link", type = Link.class),
            @XmlElement(name = "div", type = Div.class),
            @XmlElement(name = "emph", type = Emph.class),
            @XmlElement(name = "head", type = Head.class),
            @XmlElement(name = "hi", type = Hi.class),
            @XmlElement(name = "list", type = List.class),
            @XmlElement(name = "p", type = P.class),
            @XmlElement(name = "h1", namespace = "http://www.w3.org/1999/xhtml", type = H1Type.class),
            @XmlElement(name = "h2", namespace = "http://www.w3.org/1999/xhtml", type = H2Type.class),
            @XmlElement(name = "h3", namespace = "http://www.w3.org/1999/xhtml", type = H3Type.class),
            @XmlElement(name = "h4", namespace = "http://www.w3.org/1999/xhtml", type = H4Type.class),
            @XmlElement(name = "h5", namespace = "http://www.w3.org/1999/xhtml", type = H5Type.class),
            @XmlElement(name = "h6", namespace = "http://www.w3.org/1999/xhtml", type = H6Type.class),
            @XmlElement(name = "ul", namespace = "http://www.w3.org/1999/xhtml", type = UlType.class),
            @XmlElement(name = "ol", namespace = "http://www.w3.org/1999/xhtml", type = OlType.class),
            @XmlElement(name = "dl", namespace = "http://www.w3.org/1999/xhtml", type = DlType.class),
            @XmlElement(name = "p", namespace = "http://www.w3.org/1999/xhtml", type = PType.class),
            @XmlElement(name = "div", namespace = "http://www.w3.org/1999/xhtml", type = DivType.class),
            @XmlElement(name = "pre", namespace = "http://www.w3.org/1999/xhtml", type = PreType.class),
            @XmlElement(name = "blockquote", namespace = "http://www.w3.org/1999/xhtml", type = BlockquoteType.class),
            @XmlElement(name = "address", namespace = "http://www.w3.org/1999/xhtml", type = AddressType.class),
            @XmlElement(name = "hr", namespace = "http://www.w3.org/1999/xhtml", type = HrType.class),
            @XmlElement(name = "table", namespace = "http://www.w3.org/1999/xhtml", type = TableType.class),
            @XmlElement(name = "concept", type = Concept.class),
            @XmlElement(name = "txt", type = Txt.class)
    })
    protected java.util.List<Object> extLinksAndLinksAndDivs;

    /**
     * Gets the value of the extLinksAndLinksAndDivs property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extLinksAndLinksAndDivs property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtLinksAndLinksAndDivs().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExtLink }
     * {@link Link }
     * {@link Div }
     * {@link Emph }
     * {@link Head }
     * {@link Hi }
     * {@link List }
     * {@link P }
     * {@link H1Type }
     * {@link H2Type }
     * {@link H3Type }
     * {@link H4Type }
     * {@link H5Type }
     * {@link H6Type }
     * {@link UlType }
     * {@link OlType }
     * {@link DlType }
     * {@link PType }
     * {@link DivType }
     * {@link PreType }
     * {@link BlockquoteType }
     * {@link AddressType }
     * {@link HrType }
     * {@link TableType }
     * {@link Concept }
     * {@link Txt }
     */
    public java.util.List<Object> getExtLinksAndLinksAndDivs() {
        if (extLinksAndLinksAndDivs == null) {
            extLinksAndLinksAndDivs = new ArrayList<Object>();
        }
        return this.extLinksAndLinksAndDivs;
    }

}
