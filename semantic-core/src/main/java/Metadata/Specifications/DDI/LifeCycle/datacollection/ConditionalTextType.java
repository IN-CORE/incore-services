//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.datacollection;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CommandCodeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;


/**
 * Text which has a changeable value depending on a stated condition, response to earlier questions, or as input from a set of metrics (pre-supplied data).
 * <p>
 * <p>Java class for ConditionalTextType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ConditionalTextType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:datacollection:3_2}TextContentType"&gt;
 *       &lt;choice&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}Expression" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}SourceParameterReference" minOccurs="0"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConditionalTextType", propOrder = {
        "expression",
        "sourceParameterReference"
})
public class ConditionalTextType
        extends TextContentType {

    @XmlElement(name = "Expression")
    protected CommandCodeType expression;
    @XmlElement(name = "SourceParameterReference", namespace = "ddi:reusable:3_2")
    protected ReferenceType sourceParameterReference;

    /**
     * The condition on which the associated text varies expressed by a command code. For example, a command that inserts an age by calculating the difference between today�s date and a previously defined date of birth.
     *
     * @return possible object is
     * {@link CommandCodeType }
     */
    public CommandCodeType getExpression() {
        return expression;
    }

    /**
     * Sets the value of the expression property.
     *
     * @param value allowed object is
     *              {@link CommandCodeType }
     */
    public void setExpression(CommandCodeType value) {
        this.expression = value;
    }

    /**
     * This allows for the simple insert of a piece of information from another specified parameter. For example, if the text of the item using conditional text included the respondent�s name use SourceParameterReference to reference the InParameter of the question that is bound to the OutParameter of the question: �What is your name?�
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getSourceParameterReference() {
        return sourceParameterReference;
    }

    /**
     * Sets the value of the sourceParameterReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setSourceParameterReference(ReferenceType value) {
        this.sourceParameterReference = value;
    }

}
