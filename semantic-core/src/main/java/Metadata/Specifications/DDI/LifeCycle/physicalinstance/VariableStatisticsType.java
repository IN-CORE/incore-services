//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.physicalinstance;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.VersionableType;


/**
 * Contains summary and category level statistics for the referenced variable. Includes information on the total number of responses, the weights in calculating the statistics, variable level summary statistics, and category statistics. The category statistics may be provided as unfiltered values or filtered through a single variable. For example the category statistics for Sex filtered by the variable Country for a multi-national data file. Note that if no weighting factor is identified, all of the statistics provided are unweighted.
 * <p>
 * <p>Java class for VariableStatisticsType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="VariableStatisticsType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}VersionableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}VariableReference"/&gt;
 *         &lt;element name="TotalResponses" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/&gt;
 *         &lt;choice minOccurs="0"&gt;
 *           &lt;element ref="{ddi:physicalinstance:3_2}StandardWeightReference"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}WeightVariableReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{ddi:physicalinstance:3_2}MissingValuesReference" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:physicalinstance:3_2}SummaryStatistic" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:physicalinstance:3_2}UnfilteredCategoryStatistics" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:physicalinstance:3_2}FilteredCategoryStatistics" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VariableStatisticsType", propOrder = {
        "variableReference",
        "totalResponses",
        "standardWeightReference",
        "weightVariableReference",
        "missingValuesReference",
        "summaryStatistic",
        "unfilteredCategoryStatistics",
        "filteredCategoryStatistics"
})
public class VariableStatisticsType extends VersionableType {
    @XmlElement(name = "VariableReference", namespace = "ddi:reusable:3_2", required = true)
    protected ReferenceType variableReference;

    @XmlElement(name = "TotalResponses")
    protected BigInteger totalResponses;

    @XmlElement(name = "StandardWeightReference")
    protected ReferenceType standardWeightReference;

    @XmlElement(name = "WeightVariableReference", namespace = "ddi:reusable:3_2")
    protected ReferenceType weightVariableReference;

    @XmlElement(name = "MissingValuesReference")
    protected ReferenceType missingValuesReference;

    @XmlElement(name = "SummaryStatistic")
    protected List<SummaryStatisticType> summaryStatistic;

    @XmlElement(name = "UnfilteredCategoryStatistics")
    protected List<UnfilteredCategoryStatisticsType> unfilteredCategoryStatistics;

    @XmlElement(name = "FilteredCategoryStatistics")
    protected List<FilteredCategoryStatisticsType> filteredCategoryStatistics;

    /**
     * Reference to the variable to which the statistics apply.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getVariableReference() {
        return variableReference;
    }

    /**
     * Sets the value of the variableReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setVariableReference(ReferenceType value) {
        this.variableReference = value;
    }

    /**
     * Gets the value of the totalResponses property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getTotalResponses() {
        return totalResponses;
    }

    /**
     * Sets the value of the totalResponses property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setTotalResponses(BigInteger value) {
        this.totalResponses = value;
    }

    /**
     * Reference to the StandardWeight value provided in Weighting.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getStandardWeightReference() {
        return standardWeightReference;
    }

    /**
     * Sets the value of the standardWeightReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setStandardWeightReference(ReferenceType value) {
        this.standardWeightReference = value;
    }

    /**
     * Reference to a variable to use for weight in calculating the statistic.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getWeightVariableReference() {
        return weightVariableReference;
    }

    /**
     * Sets the value of the weightVariableReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setWeightVariableReference(ReferenceType value) {
        this.weightVariableReference = value;
    }

    /**
     * Indicates the missing values that were excluded from the statistic by referencing the ManagedMissingValuesRepresentation used by the Variable.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getMissingValuesReference() {
        return missingValuesReference;
    }

    /**
     * Sets the value of the missingValuesReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setMissingValuesReference(ReferenceType value) {
        this.missingValuesReference = value;
    }

    /**
     * A summary statistic for the referenced variable.Gets the value of the summaryStatistic property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the summaryStatistic property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSummaryStatistic().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SummaryStatisticType }
     */
    public List<SummaryStatisticType> getSummaryStatistic() {
        if (summaryStatistic == null) {
            summaryStatistic = new ArrayList<SummaryStatisticType>();
        }
        return this.summaryStatistic;
    }

    /**
     * The unfiltered values of any number of statistics by category value representing the full response distribution of the variable.Gets the value of the unfilteredCategoryStatistics property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the unfilteredCategoryStatistics property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUnfilteredCategoryStatistics().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UnfilteredCategoryStatisticsType }
     */
    public List<UnfilteredCategoryStatisticsType> getUnfilteredCategoryStatistics() {
        if (unfilteredCategoryStatistics == null) {
            unfilteredCategoryStatistics = new ArrayList<UnfilteredCategoryStatisticsType>();
        }
        return this.unfilteredCategoryStatistics;
    }

    /**
     * Includes category-level statistic for the referenced variable using another variable to filter the categories through. For example, the Eurobarometer may filter its category statistics by country as represented in a variable "CountryCode".Gets the value of the filteredCategoryStatistics property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the filteredCategoryStatistics property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFilteredCategoryStatistics().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FilteredCategoryStatisticsType }
     */
    public List<FilteredCategoryStatisticsType> getFilteredCategoryStatistics() {
        if (filteredCategoryStatistics == null) {
            filteredCategoryStatistics = new ArrayList<FilteredCategoryStatisticsType>();
        }
        return this.filteredCategoryStatistics;
    }

}
