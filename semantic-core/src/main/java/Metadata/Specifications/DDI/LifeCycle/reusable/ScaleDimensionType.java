//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Defines a dimension of a scale providing it with a label, a numeric or character based range, the attachment of a category label at one or more of the scale values, the frequency of increment markers, and the frequency of value labels on marked or unmarked increments.
 * <p>
 * <p>Java class for ScaleDimensionType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ScaleDimensionType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice minOccurs="0"&gt;
 *           &lt;element ref="{ddi:reusable:3_2}NumberRange"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}Range"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Anchor" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}MarkedIncrement" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ValueIncrement" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="dimensionNumber" type="{http://www.w3.org/2001/XMLSchema}integer" default="1" /&gt;
 *       &lt;attribute name="degreeSlopeFromHorizontal" type="{http://www.w3.org/2001/XMLSchema}integer" default="0" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ScaleDimensionType", propOrder = {
        "label",
        "numberRange",
        "range",
        "anchor",
        "markedIncrement",
        "valueIncrement"
})
public class ScaleDimensionType {

    @XmlElement(name = "Label")
    protected List<LabelType> label;
    @XmlElement(name = "NumberRange")
    protected NumberRangeType numberRange;
    @XmlElement(name = "Range")
    protected RangeType range;
    @XmlElement(name = "Anchor")
    protected List<AnchorType> anchor;
    @XmlElement(name = "MarkedIncrement")
    protected BasicIncrementType markedIncrement;
    @XmlElement(name = "ValueIncrement")
    protected BasicIncrementType valueIncrement;
    @XmlAttribute(name = "dimensionNumber")
    protected BigInteger dimensionNumber;
    @XmlAttribute(name = "degreeSlopeFromHorizontal")
    protected BigInteger degreeSlopeFromHorizontal;

    /**
     * A display label for the scale. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * Indicates the high and low values (endpoints) of a numeric scale.
     *
     * @return possible object is
     * {@link NumberRangeType }
     */
    public NumberRangeType getNumberRange() {
        return numberRange;
    }

    /**
     * Sets the value of the numberRange property.
     *
     * @param value allowed object is
     *              {@link NumberRangeType }
     */
    public void setNumberRange(NumberRangeType value) {
        this.numberRange = value;
    }

    /**
     * Indicates the high and low values (endpoints) of a non-numeric scale.
     *
     * @return possible object is
     * {@link RangeType }
     */
    public RangeType getRange() {
        return range;
    }

    /**
     * Sets the value of the range property.
     *
     * @param value allowed object is
     *              {@link RangeType }
     */
    public void setRange(RangeType value) {
        this.range = value;
    }

    /**
     * Allows for the attachment of a category label at any anchor point.Gets the value of the anchor property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the anchor property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAnchor().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AnchorType }
     */
    public List<AnchorType> getAnchor() {
        if (anchor == null) {
            anchor = new ArrayList<AnchorType>();
        }
        return this.anchor;
    }

    /**
     * Identifies the frequency for increment markers (with or without value attachments).
     *
     * @return possible object is
     * {@link BasicIncrementType }
     */
    public BasicIncrementType getMarkedIncrement() {
        return markedIncrement;
    }

    /**
     * Sets the value of the markedIncrement property.
     *
     * @param value allowed object is
     *              {@link BasicIncrementType }
     */
    public void setMarkedIncrement(BasicIncrementType value) {
        this.markedIncrement = value;
    }

    /**
     * Identifies the frequency for value labels on marked or unmarked increments.
     *
     * @return possible object is
     * {@link BasicIncrementType }
     */
    public BasicIncrementType getValueIncrement() {
        return valueIncrement;
    }

    /**
     * Sets the value of the valueIncrement property.
     *
     * @param value allowed object is
     *              {@link BasicIncrementType }
     */
    public void setValueIncrement(BasicIncrementType value) {
        this.valueIncrement = value;
    }

    /**
     * Gets the value of the dimensionNumber property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getDimensionNumber() {
        if (dimensionNumber == null) {
            return new BigInteger("1");
        } else {
            return dimensionNumber;
        }
    }

    /**
     * Sets the value of the dimensionNumber property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setDimensionNumber(BigInteger value) {
        this.dimensionNumber = value;
    }

    /**
     * Gets the value of the degreeSlopeFromHorizontal property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getDegreeSlopeFromHorizontal() {
        if (degreeSlopeFromHorizontal == null) {
            return new BigInteger("0");
        } else {
            return degreeSlopeFromHorizontal;
        }
    }

    /**
     * Sets the value of the degreeSlopeFromHorizontal property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setDegreeSlopeFromHorizontal(BigInteger value) {
        this.degreeSlopeFromHorizontal = value;
    }

}
