//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.logicalproduct;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.IdentifiableType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ValueType;


/**
 * A structure that links a unique value of a code to a specified category and provides information as to the location of the code within a hierarchy, whether it is discrete, represents a total for the CodeList contents, and if its sub-elements represent a comprehensive coverage of the code. The Code is identifiable, but the value within the code must also be unique within the CodeList.
 * <p>
 * <p>Java class for CodeType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="CodeType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}IdentifiableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}CategoryReference"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ValueRange"/&gt;
 *         &lt;element ref="{ddi:logicalproduct:3_2}Code" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="isDiscrete" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" /&gt;
 *       &lt;attribute name="levelNumber" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 *       &lt;attribute name="isComprehensive" type="{ddi:logicalproduct:3_2}IsComprehensiveType" default="Unknown" /&gt;
 *       &lt;attribute name="isTotal" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CodeType", propOrder = {
        "categoryReference",
        "value",
        "code"
})
public class CodeType
        extends IdentifiableType {

    @XmlElement(name = "CategoryReference", namespace = "ddi:reusable:3_2", required = true)
    protected ReferenceType categoryReference;
    @XmlElement(name = "ValueRange", namespace = "ddi:reusable:3_2", required = true)
    protected ValueType value;
    @XmlElement(name = "Code")
    protected List<CodeType> code;
    @XmlAttribute(name = "isDiscrete")
    protected Boolean isDiscrete;
    @XmlAttribute(name = "levelNumber")
    protected BigInteger levelNumber;
    @XmlAttribute(name = "isComprehensive")
    protected IsComprehensiveType isComprehensive;
    @XmlAttribute(name = "isTotal")
    protected Boolean isTotal;

    /**
     * Reference to the category that the code value represents.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getCategoryReference() {
        return categoryReference;
    }

    /**
     * Sets the value of the categoryReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setCategoryReference(ReferenceType value) {
        this.categoryReference = value;
    }

    /**
     * The value of the code. In a microdata file this would be the value found in the data file. If used as the description of an NCube dimension the value provides the coordinate value for that dimension. Note that r:ValueRange has an attribute xml:space with the default value of "default". If white space is critical to the understanding of this code value (such as critical leading or tailing spaces, or multiple spaces within the code) change the value of xml:space to "preserve".
     *
     * @return possible object is
     * {@link ValueType }
     */
    public ValueType getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     *
     * @param value allowed object is
     *              {@link ValueType }
     */
    public void setValue(ValueType value) {
        this.value = value;
    }

    /**
     * Allows for nesting of codes.Gets the value of the code property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the code property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCode().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodeType }
     */
    public List<CodeType> getCode() {
        if (code == null) {
            code = new ArrayList<CodeType>();
        }
        return this.code;
    }

    /**
     * Gets the value of the isDiscrete property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsDiscrete() {
        if (isDiscrete == null) {
            return true;
        } else {
            return isDiscrete;
        }
    }

    /**
     * Sets the value of the isDiscrete property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsDiscrete(Boolean value) {
        this.isDiscrete = value;
    }

    /**
     * Gets the value of the levelNumber property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getLevelNumber() {
        return levelNumber;
    }

    /**
     * Sets the value of the levelNumber property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setLevelNumber(BigInteger value) {
        this.levelNumber = value;
    }

    /**
     * Gets the value of the isComprehensive property.
     *
     * @return possible object is
     * {@link IsComprehensiveType }
     */
    public IsComprehensiveType getIsComprehensive() {
        if (isComprehensive == null) {
            return IsComprehensiveType.UNKNOWN;
        } else {
            return isComprehensive;
        }
    }

    /**
     * Sets the value of the isComprehensive property.
     *
     * @param value allowed object is
     *              {@link IsComprehensiveType }
     */
    public void setIsComprehensive(IsComprehensiveType value) {
        this.isComprehensive = value;
    }

    /**
     * Gets the value of the isTotal property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsTotal() {
        if (isTotal == null) {
            return false;
        } else {
            return isTotal;
        }
    }

    /**
     * Sets the value of the isTotal property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsTotal(Boolean value) {
        this.isTotal = value;
    }

}
