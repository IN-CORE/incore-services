//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * A means of capturing a managed representation of a numbers (item that are analyzed as numbers) which can be referenced by a variable or question and used as a value representation or response domain. In addition to the name, label, and description of the managed numeric representation, the structure defines the number range of valid values, plus information on the format, scale, number of decimals, and intervals between valid responses within the range.
 * <p>
 * <p>Java class for ManagedNumericRepresentationType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ManagedNumericRepresentationType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}VersionableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ManagedNumericRepresentationName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}RecommendedDataType" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}GenericOutputFormat" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}NumberRange" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}NumericTypeCode" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="format" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="scale" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 *       &lt;attribute name="decimalPositions" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 *       &lt;attribute name="interval" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 *       &lt;attribute name="classificationLevel" type="{ddi:reusable:3_2}CategoryRelationCodeType" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ManagedNumericRepresentationType", propOrder = {
        "managedNumericRepresentationName",
        "label",
        "description",
        "recommendedDataType",
        "genericOutputFormat",
        "numberRange",
        "numericTypeCode"
})
public class ManagedNumericRepresentationType
        extends VersionableType {

    @XmlElement(name = "ManagedNumericRepresentationName")
    protected List<NameType> managedNumericRepresentationName;
    @XmlElement(name = "Label")
    protected List<LabelType> label;
    @XmlElement(name = "Description")
    protected StructuredStringType description;
    @XmlElement(name = "RecommendedDataType")
    protected CodeValueType recommendedDataType;
    @XmlElement(name = "GenericOutputFormat")
    protected CodeValueType genericOutputFormat;
    @XmlElement(name = "NumberRange")
    protected List<NumberRangeType> numberRange;
    @XmlElement(name = "NumericTypeCode")
    protected CodeValueType numericTypeCode;
    @XmlAttribute(name = "format")
    protected String format;
    @XmlAttribute(name = "scale")
    protected BigInteger scale;
    @XmlAttribute(name = "decimalPositions")
    protected BigInteger decimalPositions;
    @XmlAttribute(name = "interval")
    protected BigInteger interval;
    @XmlAttribute(name = "classificationLevel")
    protected CategoryRelationCodeType classificationLevel;

    /**
     * A name for the ManagedNumericRepresentation. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the managedNumericRepresentationName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the managedNumericRepresentationName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getManagedNumericRepresentationName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getManagedNumericRepresentationName() {
        if (managedNumericRepresentationName == null) {
            managedNumericRepresentationName = new ArrayList<NameType>();
        }
        return this.managedNumericRepresentationName;
    }

    /**
     * A display label for the representation. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the content and purpose of the representation. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * This field provides the recommended treatment of the data within an application. The value should come from a controlled vocabulary - recommended values include the set found in W3C XML Schema Part 2, but excluding string sub-types, QNAME, and NOTATION.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getRecommendedDataType() {
        return recommendedDataType;
    }

    /**
     * Sets the value of the recommendedDataType property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setRecommendedDataType(CodeValueType value) {
        this.recommendedDataType = value;
    }

    /**
     * This field provides a recommended generic treatment of the data for display by an application. The value should come from a controlled vocabulary.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getGenericOutputFormat() {
        return genericOutputFormat;
    }

    /**
     * Sets the value of the genericOutputFormat property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setGenericOutputFormat(CodeValueType value) {
        this.genericOutputFormat = value;
    }

    /**
     * Defines the valid number range or number values for the representation.Gets the value of the numberRange property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the numberRange property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNumberRange().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NumberRangeType }
     */
    public List<NumberRangeType> getNumberRange() {
        if (numberRange == null) {
            numberRange = new ArrayList<NumberRangeType>();
        }
        return this.numberRange;
    }

    /**
     * Identification of the numeric type such as integer, decimal, etc. supports the use of an external controlled vocabulary.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getNumericTypeCode() {
        return numericTypeCode;
    }

    /**
     * Sets the value of the numericTypeCode property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setNumericTypeCode(CodeValueType value) {
        this.numericTypeCode = value;
    }

    /**
     * Gets the value of the format property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getFormat() {
        return format;
    }

    /**
     * Sets the value of the format property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setFormat(String value) {
        this.format = value;
    }

    /**
     * Gets the value of the scale property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getScale() {
        return scale;
    }

    /**
     * Sets the value of the scale property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setScale(BigInteger value) {
        this.scale = value;
    }

    /**
     * Gets the value of the decimalPositions property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getDecimalPositions() {
        return decimalPositions;
    }

    /**
     * Sets the value of the decimalPositions property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setDecimalPositions(BigInteger value) {
        this.decimalPositions = value;
    }

    /**
     * Gets the value of the interval property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getInterval() {
        return interval;
    }

    /**
     * Sets the value of the interval property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setInterval(BigInteger value) {
        this.interval = value;
    }

    /**
     * Gets the value of the classificationLevel property.
     *
     * @return possible object is
     * {@link CategoryRelationCodeType }
     */
    public CategoryRelationCodeType getClassificationLevel() {
        return classificationLevel;
    }

    /**
     * Sets the value of the classificationLevel property.
     *
     * @param value allowed object is
     *              {@link CategoryRelationCodeType }
     */
    public void setClassificationLevel(CategoryRelationCodeType value) {
        this.classificationLevel = value;
    }

}
