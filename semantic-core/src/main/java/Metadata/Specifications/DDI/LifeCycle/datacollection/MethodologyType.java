//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.datacollection;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SoftwareType;
import Metadata.Specifications.DDI.LifeCycle.reusable.VersionableType;


/**
 * Metadata regarding the methodologies used concerning data collection, determining the timing and repetition patterns for data collection, and sampling procedures. Identifies areas where there were deviations from the planned sampling approach, the software used for data collection, and references to any quality standards or statements regarding the processes surrounding the planning and implementation of data collection.
 * <p>
 * <p>Java class for MethodologyType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="MethodologyType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}VersionableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}DataCollectionMethodology" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}TimeMethod" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}SamplingProcedure" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}DeviationFromSampleDesign" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}DataCollectionSoftware" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}QualityStatementReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "MethodologyType", propOrder = {
        "dataCollectionMethodology",
        "timeMethod",
        "samplingProcedure",
        "deviationFromSampleDesign",
        "dataCollectionSoftware",
        "qualityStatementReference"
})
public class MethodologyType
        extends VersionableType {

    @XmlElement(name = "DataCollectionMethodology")
    protected List<DataCollectionMethodologyType> dataCollectionMethodology;
    @XmlElement(name = "TimeMethod")
    protected List<TimeMethodType> timeMethod;
    @XmlElement(name = "SamplingProcedure")
    protected List<SamplingProcedureType> samplingProcedure;
    @XmlElement(name = "DeviationFromSampleDesign")
    protected List<DeviationFromSampleDesignType> deviationFromSampleDesign;
    @XmlElement(name = "DataCollectionSoftware")
    protected List<SoftwareType> dataCollectionSoftware;
    @XmlElement(name = "QualityStatementReference", namespace = "ddi:reusable:3_2")
    protected List<ReferenceType> qualityStatementReference;

    /**
     * A basic structure for describing the methodology used for collecting data. Repeat this element if multiple methodologies are used.Gets the value of the dataCollectionMethodology property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataCollectionMethodology property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataCollectionMethodology().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataCollectionMethodologyType }
     */
    public List<DataCollectionMethodologyType> getDataCollectionMethodology() {
        if (dataCollectionMethodology == null) {
            dataCollectionMethodology = new ArrayList<DataCollectionMethodologyType>();
        }
        return this.dataCollectionMethodology;
    }

    /**
     * Describes how time fits into the data collection methodology.Gets the value of the timeMethod property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the timeMethod property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTimeMethod().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TimeMethodType }
     */
    public List<TimeMethodType> getTimeMethod() {
        if (timeMethod == null) {
            timeMethod = new ArrayList<TimeMethodType>();
        }
        return this.timeMethod;
    }

    /**
     * Describes the type of sample, sample design and provides details on drawing the sample. May be repeated to provide descriptions of individual facets of a single sample design or when multiple sampling methods are used. When multiple descriptions are used, the use of a controlled vocabulary to identify the parts and relationships is strongly recommended.Gets the value of the samplingProcedure property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the samplingProcedure property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSamplingProcedure().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SamplingProcedureType }
     */
    public List<SamplingProcedureType> getSamplingProcedure() {
        if (samplingProcedure == null) {
            samplingProcedure = new ArrayList<SamplingProcedureType>();
        }
        return this.samplingProcedure;
    }

    /**
     * Describes any deviations from the planned sample design.Gets the value of the deviationFromSampleDesign property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the deviationFromSampleDesign property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDeviationFromSampleDesign().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DeviationFromSampleDesignType }
     */
    public List<DeviationFromSampleDesignType> getDeviationFromSampleDesign() {
        if (deviationFromSampleDesign == null) {
            deviationFromSampleDesign = new ArrayList<DeviationFromSampleDesignType>();
        }
        return this.deviationFromSampleDesign;
    }

    /**
     * Specification of a software package used to instantiate a data collection method.Gets the value of the dataCollectionSoftware property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataCollectionSoftware property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataCollectionSoftware().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SoftwareType }
     */
    public List<SoftwareType> getDataCollectionSoftware() {
        if (dataCollectionSoftware == null) {
            dataCollectionSoftware = new ArrayList<SoftwareType>();
        }
        return this.dataCollectionSoftware;
    }

    /**
     * A reference to a Quality Statement pertaining to the quality of the study methodology, metadata, or data to which it is associated. Quality statements may be related to external quality standards.Gets the value of the qualityStatementReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the qualityStatementReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQualityStatementReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReferenceType }
     */
    public List<ReferenceType> getQualityStatementReference() {
        if (qualityStatementReference == null) {
            qualityStatementReference = new ArrayList<ReferenceType>();
        }
        return this.qualityStatementReference;
    }

}
