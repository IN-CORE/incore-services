//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.archive;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CodeValueType;
import Metadata.Specifications.DDI.LifeCycle.reusable.DateType;
import Metadata.Specifications.DDI.LifeCycle.reusable.InternationalStringType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;


/**
 * Names by which the organization is known. Use the attribute isFormal="true" to designate the legal or formal name of the Organization. The preferred name should be noted with the isPreferred attribute. Names may be typed with TypeOfOrganizationName to indicate their appropriate usage.
 * <p>
 * <p>Java class for OrganizationNameType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="OrganizationNameType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}NameType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Abbreviation" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:archive:3_2}TypeOfOrganizationName" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}EffectivePeriod" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="isFormal" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OrganizationNameType", propOrder = {
        "abbreviation",
        "typeOfOrganizationName",
        "effectivePeriod"
})
public class OrganizationNameType
        extends NameType {

    @XmlElement(name = "Abbreviation", namespace = "ddi:reusable:3_2")
    protected InternationalStringType abbreviation;
    @XmlElement(name = "TypeOfOrganizationName")
    protected CodeValueType typeOfOrganizationName;
    @XmlElement(name = "EffectivePeriod", namespace = "ddi:reusable:3_2")
    protected DateType effectivePeriod;
    @XmlAttribute(name = "isFormal")
    protected Boolean isFormal;

    /**
     * An abbreviation or acronym for the name. This may be expressed in multiple languages. It is assumed that if only a single language is provided that it may be used in any of the other languages within which the name itself is expressed.
     *
     * @return possible object is
     * {@link InternationalStringType }
     */
    public InternationalStringType getAbbreviation() {
        return abbreviation;
    }

    /**
     * Sets the value of the abbreviation property.
     *
     * @param value allowed object is
     *              {@link InternationalStringType }
     */
    public void setAbbreviation(InternationalStringType value) {
        this.abbreviation = value;
    }

    /**
     * The type of organization name provided. the use of a controlled vocabulary is strongly recommended. At minimum this should include, e.g. PreviousFormalName, Nickname (or CommonName), Other.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getTypeOfOrganizationName() {
        return typeOfOrganizationName;
    }

    /**
     * Sets the value of the typeOfOrganizationName property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setTypeOfOrganizationName(CodeValueType value) {
        this.typeOfOrganizationName = value;
    }

    /**
     * The time period for which this name is accurate and in use.
     *
     * @return possible object is
     * {@link DateType }
     */
    public DateType getEffectivePeriod() {
        return effectivePeriod;
    }

    /**
     * Sets the value of the effectivePeriod property.
     *
     * @param value allowed object is
     *              {@link DateType }
     */
    public void setEffectivePeriod(DateType value) {
        this.effectivePeriod = value;
    }

    /**
     * Gets the value of the isFormal property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public Boolean isIsFormal() {
        return isFormal;
    }

    /**
     * Sets the value of the isFormal property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsFormal(Boolean value) {
        this.isFormal = value;
    }

}
