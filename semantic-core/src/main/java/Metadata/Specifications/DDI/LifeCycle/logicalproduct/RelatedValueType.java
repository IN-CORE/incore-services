//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.logicalproduct;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.ValueType;


/**
 * The characteristic value expressed as a string with an indicator of the specific relationship of the variable value to the characteristic value. The default is "Equal". The value may be defined as containing no content (blank) by setting the attribute valueIsBlank to "true".
 * <p>
 * <p>Java class for RelatedValueType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="RelatedValueType"&gt;
 *   &lt;simpleContent&gt;
 *     &lt;extension base="&lt;ddi:reusable:3_2&gt;ValueType"&gt;
 *       &lt;attribute name="type" type="{ddi:logicalproduct:3_2}RelatedValueTypeCodeType" default="Equal" /&gt;
 *       &lt;attribute name="valueIsBlank" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RelatedValueType")
public class RelatedValueType
        extends ValueType {

    @XmlAttribute(name = "type")
    protected RelatedValueTypeCodeType type;
    @XmlAttribute(name = "valueIsBlank")
    protected Boolean valueIsBlank;

    /**
     * Gets the value of the type property.
     *
     * @return possible object is
     * {@link RelatedValueTypeCodeType }
     */
    public RelatedValueTypeCodeType getType() {
        if (type == null) {
            return RelatedValueTypeCodeType.EQUAL;
        } else {
            return type;
        }
    }

    /**
     * Sets the value of the type property.
     *
     * @param value allowed object is
     *              {@link RelatedValueTypeCodeType }
     */
    public void setType(RelatedValueTypeCodeType value) {
        this.type = value;
    }

    /**
     * Gets the value of the valueIsBlank property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isValueIsBlank() {
        if (valueIsBlank == null) {
            return false;
        } else {
            return valueIsBlank;
        }
    }

    /**
     * Sets the value of the valueIsBlank property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setValueIsBlank(Boolean value) {
        this.valueIsBlank = value;
    }

}
