//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.datacollection.ControlConstructReferenceType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.DomainReferenceType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InterviewerInstructionReferenceType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.SourceReferenceType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.ConditionalVariableReferenceType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.SubCategoryReferenceType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.KeyVariableReferenceType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.PhysicalStructureLinkReferenceType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.proprietary.CodedDataAsNumericType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.proprietary.CodedDataAsTextType;
import Metadata.Specifications.DDI.LifeCycle.physicalinstance.DefaultMissingValuesReferenceType;


/**
 * Used for referencing an identified entity expressed in DDI XML, either by a URN and/or an identification sequence. If both are supplied, the URN takes precedence. At a minimum, one or the other is required. If the identification sequence is used the content of MaintainableObject may be required to be able to assemble the canonical or deprecated DDI URN. To fully support interoperability both the DDI URN and the full identification sequence should be used. Note that to support interoperability of the canonical and deprecated URN, at minimum the MaintainableIdentifier and TypeOfMaintainableObject should be supplied if the canonical URN is being used for the reference. The lateBound attribute has a boolean value, which - if set to true - indicates that the latest version should be used. Use the attribute lateBoundRestriction to indicate when a portion, such as the major version number, should be restricted to a specific value and then late bound within that restriction. Element descriptions will contain a list of applicable TypeOfObject values.
 * <p>
 * <p>Java class for ReferenceType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ReferenceType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice maxOccurs="2"&gt;
 *           &lt;element ref="{ddi:reusable:3_2}URN"/&gt;
 *           &lt;sequence&gt;
 *             &lt;element ref="{ddi:reusable:3_2}Agency"/&gt;
 *             &lt;element ref="{ddi:reusable:3_2}ID"/&gt;
 *             &lt;element ref="{ddi:reusable:3_2}Version"/&gt;
 *           &lt;/sequence&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{ddi:reusable:3_2}TypeOfObject"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}MaintainableObject" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="isExternal" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="externalReferenceDefaultURI" type="{http://www.w3.org/2001/XMLSchema}anyURI" /&gt;
 *       &lt;attribute name="isReference" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" /&gt;
 *       &lt;attribute name="lateBound" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="lateBoundRestriction" type="{ddi:reusable:3_2}VersionType" /&gt;
 *       &lt;attribute name="objectLanguage" type="{ddi:reusable:3_2}LanguageList" /&gt;
 *       &lt;attribute name="sourceContext" type="{http://www.w3.org/2001/XMLSchema}anyURI" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReferenceType", propOrder = {
        "urnOrAgencyAndID",
        "typeOfObject",
        "maintainableObject"
})
@XmlSeeAlso({
        ParentGeographicLevelReferenceType.class,
        SchemeReferenceType.class,
        GeographicLocationReferenceType.class,
        GeographicStructureReferenceType.class,
        RepresentationReferenceType.class,
        ProcessingInstructionReferenceType.class,
        RelatedLocationValueReferenceType.class,
        NCubeMeasureDefinitionReferenceType.class,
        MeasureDefinitionReferenceType.class,
        DomainReferenceType.class,
        SourceReferenceType.class,
        ControlConstructReferenceType.class,
        InterviewerInstructionReferenceType.class,
        SubCategoryReferenceType.class,
        ConditionalVariableReferenceType.class,
        PhysicalStructureLinkReferenceType.class,
        KeyVariableReferenceType.class,
        DefaultMissingValuesReferenceType.class,
        CodedDataAsNumericType.class,
        CodedDataAsTextType.class
})
public class ReferenceType {

    @XmlElementRefs({
            @XmlElementRef(name = "URN", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ID", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Version", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Agency", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> urnOrAgencyAndID;

    @XmlElement(name = "TypeOfObject", required = true)
    @XmlSchemaType(name = "string")
    protected TypeOfObjectType typeOfObject;

    @XmlElement(name = "MaintainableObject")
    protected MaintainableObjectType maintainableObject;

    @XmlAttribute(name = "isExternal")
    protected Boolean isExternal;

    @XmlAttribute(name = "externalReferenceDefaultURI")
    @XmlSchemaType(name = "anyURI")
    protected String externalReferenceDefaultURI;

    @XmlAttribute(name = "isReference")
    protected Boolean isReference;

    @XmlAttribute(name = "lateBound")
    protected Boolean lateBound;

    @XmlAttribute(name = "lateBoundRestriction")
    protected String lateBoundRestriction;

    @XmlAttribute(name = "objectLanguage")
    protected List<String> objectLanguage;

    @XmlAttribute(name = "sourceContext")
    @XmlSchemaType(name = "anyURI")
    protected String sourceContext;

    /**
     * Gets the value of the urnOrAgencyAndID property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the urnOrAgencyAndID property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getURNOrAgencyAndID().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     * {@link JAXBElement }{@code <}{@link URNType }{@code >}
     * {@link JAXBElement }{@code <}{@link IDType }{@code >}
     * {@link JAXBElement }{@code <}{@link String }{@code >}
     */
    public List<JAXBElement<?>> getURNOrAgencyAndID() {
        if (urnOrAgencyAndID == null) {
            urnOrAgencyAndID = new ArrayList<JAXBElement<?>>();
        }
        return this.urnOrAgencyAndID;
    }

    /**
     * States the type of object being referenced based on a persistent list of valid DDI object types.
     *
     * @return possible object is
     * {@link TypeOfObjectType }
     */
    public TypeOfObjectType getTypeOfObject() {
        return typeOfObject;
    }

    /**
     * Sets the value of the typeOfObject property.
     *
     * @param value allowed object is
     *              {@link TypeOfObjectType }
     */
    public void setTypeOfObject(TypeOfObjectType value) {
        this.typeOfObject = value;
    }

    /**
     * Do not use if the referenced object is Maintainable. For references to Identifiable and Versionable objects this provides contextual information on the Maintainable Parent of this object at point of origin. Note that if the ID, Agency, Version sequence is used, and the scope of uniqueness of the referenced object is the Maintainable, then the ID of the Maintainable is needed to create the structured ID portion of the canonical URN. If the system uses the deprecated URN, both the Maintainable ID and TypeOfMaintainableObject are required to create the deprecated URN structure.
     *
     * @return possible object is
     * {@link MaintainableObjectType }
     */
    public MaintainableObjectType getMaintainableObject() {
        return maintainableObject;
    }

    /**
     * Sets the value of the maintainableObject property.
     *
     * @param value allowed object is
     *              {@link MaintainableObjectType }
     */
    public void setMaintainableObject(MaintainableObjectType value) {
        this.maintainableObject = value;
    }

    /**
     * Gets the value of the isExternal property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsExternal() {
        if (isExternal == null) {
            return false;
        } else {
            return isExternal;
        }
    }

    /**
     * Sets the value of the isExternal property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsExternal(Boolean value) {
        this.isExternal = value;
    }

    /**
     * Gets the value of the externalReferenceDefaultURI property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getExternalReferenceDefaultURI() {
        return externalReferenceDefaultURI;
    }

    /**
     * Sets the value of the externalReferenceDefaultURI property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setExternalReferenceDefaultURI(String value) {
        this.externalReferenceDefaultURI = value;
    }

    /**
     * Gets the value of the isReference property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsReference() {
        if (isReference == null) {
            return true;
        } else {
            return isReference;
        }
    }

    /**
     * Sets the value of the isReference property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsReference(Boolean value) {
        this.isReference = value;
    }

    /**
     * Gets the value of the lateBound property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isLateBound() {
        if (lateBound == null) {
            return false;
        } else {
            return lateBound;
        }
    }

    /**
     * Sets the value of the lateBound property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setLateBound(Boolean value) {
        this.lateBound = value;
    }

    /**
     * Gets the value of the lateBoundRestriction property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getLateBoundRestriction() {
        return lateBoundRestriction;
    }

    /**
     * Sets the value of the lateBoundRestriction property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setLateBoundRestriction(String value) {
        this.lateBoundRestriction = value;
    }

    /**
     * Gets the value of the objectLanguage property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the objectLanguage property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getObjectLanguage().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     */
    public List<String> getObjectLanguage() {
        if (objectLanguage == null) {
            objectLanguage = new ArrayList<String>();
        }
        return this.objectLanguage;
    }

    /**
     * Gets the value of the sourceContext property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getSourceContext() {
        return sourceContext;
    }

    /**
     * Sets the value of the sourceContext property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setSourceContext(String value) {
        this.sourceContext = value;
    }

}
