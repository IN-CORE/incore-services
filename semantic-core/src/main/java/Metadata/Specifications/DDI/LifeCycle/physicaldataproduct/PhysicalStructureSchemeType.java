//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.physicaldataproduct;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.LabelType;
import Metadata.Specifications.DDI.LifeCycle.reusable.MaintainableType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SchemeReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;


/**
 * A scheme containing a set of PhysicalStructures containing descriptions of overall structure of a physical data storage format. These descriptions provide the primary link to the LogicalRecord found in the data file, general structural information such as use of proprietary storage structures, division of logical records into physical segment, and default values for decimal separators, etc. Each description can apply to one or more data files containing the same logical records in the same overall structure. In addition to the standard name, label, and description, it allows for inclusion of an existing PhysicalStructureScheme by reference, and PhysicalStructure or PhysicalStructureGroup descriptions in-line or by reference.
 * <p>
 * <p>Java class for PhysicalStructureSchemeType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="PhysicalStructureSchemeType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}MaintainableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalStructureSchemeName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}PhysicalStructureSchemeReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalStructure" maxOccurs="unbounded" minOccurs="0"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalStructureReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalStructureGroup"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalStructureGroupReference"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "PhysicalStructureSchemeType", propOrder = {
        "physicalStructureSchemeName",
        "label",
        "description",
        "physicalStructureSchemeReference",
        "physicalStructureOrPhysicalStructureReference",
        "physicalStructureGroupOrPhysicalStructureGroupReference"
})
public class PhysicalStructureSchemeType
        extends MaintainableType {

    @XmlElement(name = "PhysicalStructureSchemeName")
    protected List<NameType> physicalStructureSchemeName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_2")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_2")
    protected StructuredStringType description;
    @XmlElement(name = "PhysicalStructureSchemeReference", namespace = "ddi:reusable:3_2")
    protected List<SchemeReferenceType> physicalStructureSchemeReference;
    @XmlElements({
            @XmlElement(name = "PhysicalStructure", type = PhysicalStructureType.class),
            @XmlElement(name = "PhysicalStructureReference", type = ReferenceType.class)
    })
    protected List<Object> physicalStructureOrPhysicalStructureReference;
    @XmlElements({
            @XmlElement(name = "PhysicalStructureGroup", type = PhysicalStructureGroupType.class),
            @XmlElement(name = "PhysicalStructureGroupReference", type = ReferenceType.class)
    })
    protected List<Object> physicalStructureGroupOrPhysicalStructureGroupReference;

    /**
     * A name for the PhysicalStructureScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the physicalStructureSchemeName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the physicalStructureSchemeName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPhysicalStructureSchemeName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getPhysicalStructureSchemeName() {
        if (physicalStructureSchemeName == null) {
            physicalStructureSchemeName = new ArrayList<NameType>();
        }
        return this.physicalStructureSchemeName;
    }

    /**
     * A display label for the PhysicalStructureScheme. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the PhysicalStructureScheme. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Reference to an existing PhysicalStructureScheme for inclusion.Gets the value of the physicalStructureSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the physicalStructureSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPhysicalStructureSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeReferenceType }
     */
    public List<SchemeReferenceType> getPhysicalStructureSchemeReference() {
        if (physicalStructureSchemeReference == null) {
            physicalStructureSchemeReference = new ArrayList<SchemeReferenceType>();
        }
        return this.physicalStructureSchemeReference;
    }

    /**
     * Gets the value of the physicalStructureOrPhysicalStructureReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the physicalStructureOrPhysicalStructureReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPhysicalStructureOrPhysicalStructureReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PhysicalStructureType }
     * {@link ReferenceType }
     */
    public List<Object> getPhysicalStructureOrPhysicalStructureReference() {
        if (physicalStructureOrPhysicalStructureReference == null) {
            physicalStructureOrPhysicalStructureReference = new ArrayList<Object>();
        }
        return this.physicalStructureOrPhysicalStructureReference;
    }

    /**
     * Gets the value of the physicalStructureGroupOrPhysicalStructureGroupReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the physicalStructureGroupOrPhysicalStructureGroupReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPhysicalStructureGroupOrPhysicalStructureGroupReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PhysicalStructureGroupType }
     * {@link ReferenceType }
     */
    public List<Object> getPhysicalStructureGroupOrPhysicalStructureGroupReference() {
        if (physicalStructureGroupOrPhysicalStructureGroupReference == null) {
            physicalStructureGroupOrPhysicalStructureGroupReference = new ArrayList<Object>();
        }
        return this.physicalStructureGroupOrPhysicalStructureGroupReference;
    }

}
