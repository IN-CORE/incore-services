//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.logicalproduct;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CategoryRelationCodeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;


/**
 * Used to describe the levels of the code list hierarchy. The level describes the nesting structure of a hierarchical coding structure. A level could have data attached to it (summary of its children) or no data attached to it (the equivalent of creating a category group in 2.0 and earlier versions Note that the attribute levelNumber is used for referencing specific codes to their level identifier. Although Code Lists can be physically nested, the use of a Level description and the level number on a specific code is needed to specify subsets of the CodeList for use in CodeRepresentations by level specification. Provides a name, description and level number. Specifies the relationship between the categories at that level and interval value if the relationship has the value of Interval.
 * <p>
 * <p>Java class for LevelType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="LevelType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:logicalproduct:3_2}LevelName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:logicalproduct:3_2}CategoryRelationship" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:logicalproduct:3_2}Interval" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="levelNumber" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "LevelType", propOrder = {
        "levelName",
        "description",
        "categoryRelationship",
        "interval"
})
public class LevelType {

    @XmlElement(name = "LevelName")
    protected List<NameType> levelName;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_2")
    protected StructuredStringType description;
    @XmlElement(name = "CategoryRelationship")
    @XmlSchemaType(name = "NMTOKEN")
    protected CategoryRelationCodeType categoryRelationship;
    @XmlElement(name = "Interval")
    protected IntervalType interval;
    @XmlAttribute(name = "levelNumber", required = true)
    protected BigInteger levelNumber;

    /**
     * Name of a level in a code scheme. This should be short and explicit, such as Major Industrial Groups (2 digit SIC Codes) or NUTS 1. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the levelName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the levelName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLevelName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getLevelName() {
        if (levelName == null) {
            levelName = new ArrayList<NameType>();
        }
        return this.levelName;
    }

    /**
     * A description of the code Level. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Describes the relationships among categories at that respective level. Possible values are either Nominal, Ordinal, or Interval. Note that different levels may have different types of relationships within the same hierarchy. For example, Level 1 items may be ordinal and Level 2 (the children of Level 1 items) may be nominal.
     *
     * @return possible object is
     * {@link CategoryRelationCodeType }
     */
    public CategoryRelationCodeType getCategoryRelationship() {
        return categoryRelationship;
    }

    /**
     * Sets the value of the categoryRelationship property.
     *
     * @param value allowed object is
     *              {@link CategoryRelationCodeType }
     */
    public void setCategoryRelationship(CategoryRelationCodeType value) {
        this.categoryRelationship = value;
    }

    /**
     * Identifies the interval between each value of the codes at this level. Used only for codes with interval relationship.
     *
     * @return possible object is
     * {@link IntervalType }
     */
    public IntervalType getInterval() {
        return interval;
    }

    /**
     * Sets the value of the interval property.
     *
     * @param value allowed object is
     *              {@link IntervalType }
     */
    public void setInterval(IntervalType value) {
        this.interval = value;
    }

    /**
     * Gets the value of the levelNumber property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getLevelNumber() {
        return levelNumber;
    }

    /**
     * Sets the value of the levelNumber property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setLevelNumber(BigInteger value) {
        this.levelNumber = value;
    }

}
