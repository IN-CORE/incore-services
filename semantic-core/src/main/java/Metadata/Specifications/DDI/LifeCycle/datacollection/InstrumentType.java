//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.datacollection;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CodeValueType;
import Metadata.Specifications.DDI.LifeCycle.reusable.LabelType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;
import Metadata.Specifications.DDI.LifeCycle.reusable.VersionableType;


/**
 * Defines the type of instrument used for data collection or capture. In addition to the standard name, label, and description contains a classification of the type of instrument, a reference to an external instance of the instrument (such as an image of a questionnaire or programming script) and a reference to the Sequence control construct that contains the flow for data collection or capture.
 * <p>
 * <p>Java class for InstrumentType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="InstrumentType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}VersionableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}InstrumentName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}TypeOfInstrument" minOccurs="0"/&gt;
 *         &lt;element name="ExternalInstrumentLocation" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}ControlConstructReference" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InstrumentType", propOrder = {
        "instrumentName",
        "label",
        "description",
        "typeOfInstrument",
        "externalInstrumentLocation",
        "controlConstructReference"
})
public class InstrumentType
        extends VersionableType {

    @XmlElement(name = "InstrumentName")
    protected List<NameType> instrumentName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_2")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_2")
    protected StructuredStringType description;
    @XmlElement(name = "TypeOfInstrument")
    protected CodeValueType typeOfInstrument;
    @XmlElement(name = "ExternalInstrumentLocation")
    @XmlSchemaType(name = "anyURI")
    protected List<String> externalInstrumentLocation;
    @XmlElement(name = "ControlConstructReference")
    protected ControlConstructReferenceType controlConstructReference;

    /**
     * A name for the Instrument. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the instrumentName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the instrumentName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInstrumentName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getInstrumentName() {
        if (instrumentName == null) {
            instrumentName = new ArrayList<NameType>();
        }
        return this.instrumentName;
    }

    /**
     * A display label for the Instrument. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the Instrument. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Describes the type of the instrument, according to the documenters type classification. Supports the use of an external controlled vocabulary.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getTypeOfInstrument() {
        return typeOfInstrument;
    }

    /**
     * Sets the value of the typeOfInstrument property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setTypeOfInstrument(CodeValueType value) {
        this.typeOfInstrument = value;
    }

    /**
     * Gets the value of the externalInstrumentLocation property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the externalInstrumentLocation property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExternalInstrumentLocation().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     */
    public List<String> getExternalInstrumentLocation() {
        if (externalInstrumentLocation == null) {
            externalInstrumentLocation = new ArrayList<String>();
        }
        return this.externalInstrumentLocation;
    }

    /**
     * A reference to the Sequence control construct that initiates the flow of the instrument content.
     *
     * @return possible object is
     * {@link ControlConstructReferenceType }
     */
    public ControlConstructReferenceType getControlConstructReference() {
        return controlConstructReference;
    }

    /**
     * Sets the value of the controlConstructReference property.
     *
     * @param value allowed object is
     *              {@link ControlConstructReferenceType }
     */
    public void setControlConstructReference(ControlConstructReferenceType value) {
        this.controlConstructReference = value;
    }

}
