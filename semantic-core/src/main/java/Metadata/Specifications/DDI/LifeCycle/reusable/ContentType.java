//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.datatype.XMLGregorianCalendar;

import Metadata.Specifications.DDI.LifeCycle.datacollection.TextType;

import Metadata.Specifications.DDI.xHTML.AddressType;
import Metadata.Specifications.DDI.xHTML.BlockquoteType;
import Metadata.Specifications.DDI.xHTML.DivType;
import Metadata.Specifications.DDI.xHTML.DlType;
import Metadata.Specifications.DDI.xHTML.H1Type;
import Metadata.Specifications.DDI.xHTML.H2Type;
import Metadata.Specifications.DDI.xHTML.H3Type;
import Metadata.Specifications.DDI.xHTML.H4Type;
import Metadata.Specifications.DDI.xHTML.H5Type;
import Metadata.Specifications.DDI.xHTML.H6Type;
import Metadata.Specifications.DDI.xHTML.HrType;
import Metadata.Specifications.DDI.xHTML.OlType;
import Metadata.Specifications.DDI.xHTML.PType;
import Metadata.Specifications.DDI.xHTML.PreType;
import Metadata.Specifications.DDI.xHTML.TableType;
import Metadata.Specifications.DDI.xHTML.UlType;


/**
 * Supports the optional use of XHTML formatting tags within the string structure. XHTML tag content is controlled by the schema, see Part I of the DDI Technical Manual for a detailed list of available tags. Language of the string is defined by the attribute xml:lang. The content can be identified as translated (isTranslated), subject to translation (isTranslatable), the result of translation from one or more languages (translationSourceLanguages), and carry an indication whether or not it should be treated as plain text (isPlain).
 * <p>
 * <p>Java class for ContentType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ContentType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *         &lt;group ref="{http://www.w3.org/1999/xhtml}BlkNoForm.mix"/&gt;
 *       &lt;/choice&gt;
 *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/&gt;
 *       &lt;attribute name="isTranslated" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *       &lt;attribute name="isTranslatable" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" /&gt;
 *       &lt;attribute name="translationSourceLanguage" type="{ddi:reusable:3_2}LanguageList" /&gt;
 *       &lt;attribute name="translationDate" type="{http://www.w3.org/2001/XMLSchema}date" /&gt;
 *       &lt;attribute name="isPlainText" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ContentType", propOrder = {
        "content"
})
@XmlSeeAlso({
        TextType.class
})
public class ContentType {
    @XmlElementRefs({
            @XmlElementRef(name = "hr", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "dl", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "h2", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "div", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "h5", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "h6", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "blockquote", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "pre", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ul", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "address", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "h3", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "table", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "h4", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ol", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "h1", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "p", namespace = "http://www.w3.org/1999/xhtml", type = JAXBElement.class, required = false)
    })
    @XmlMixed
    protected List<Serializable> content;

    @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "language")
    protected String lang;

    @XmlAttribute(name = "isTranslated")
    protected Boolean isTranslated;

    @XmlAttribute(name = "isTranslatable")
    protected Boolean isTranslatable;

    @XmlAttribute(name = "translationSourceLanguage")
    protected List<String> translationSourceLanguage;

    @XmlAttribute(name = "translationDate")
    @XmlSchemaType(name = "date")
    protected XMLGregorianCalendar translationDate;

    @XmlAttribute(name = "isPlainText")
    protected Boolean isPlainText;

    /**
     * Supports the optional use of XHTML formatting tags within the string structure. XHTML tag content is controlled by the schema, see Part I of the DDI Technical Manual for a detailed list of available tags. Language of the string is defined by the attribute xml:lang. The content can be identified as translated (isTranslated), subject to translation (isTranslatable), the result of translation from one or more languages (translationSourceLanguages), and carry an indication whether or not it should be treated as plain text (isPlain).Gets the value of the content property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the content property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContent().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link HrType }{@code >}
     * {@link JAXBElement }{@code <}{@link DlType }{@code >}
     * {@link String }
     * {@link JAXBElement }{@code <}{@link H2Type }{@code >}
     * {@link JAXBElement }{@code <}{@link DivType }{@code >}
     * {@link JAXBElement }{@code <}{@link H5Type }{@code >}
     * {@link JAXBElement }{@code <}{@link H6Type }{@code >}
     * {@link JAXBElement }{@code <}{@link BlockquoteType }{@code >}
     * {@link JAXBElement }{@code <}{@link PreType }{@code >}
     * {@link JAXBElement }{@code <}{@link UlType }{@code >}
     * {@link JAXBElement }{@code <}{@link AddressType }{@code >}
     * {@link JAXBElement }{@code <}{@link H3Type }{@code >}
     * {@link JAXBElement }{@code <}{@link TableType }{@code >}
     * {@link JAXBElement }{@code <}{@link H4Type }{@code >}
     * {@link JAXBElement }{@code <}{@link OlType }{@code >}
     * {@link JAXBElement }{@code <}{@link H1Type }{@code >}
     * {@link JAXBElement }{@code <}{@link PType }{@code >}
     */
    public List<Serializable> getContent() {
        if (content == null) {
            content = new ArrayList<Serializable>();
        }
        return this.content;
    }

    /**
     * Indicates the language of content.
     *
     * @return possible object is
     * {@link String }
     */
    public String getLang() {
        return lang;
    }

    /**
     * Sets the value of the lang property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setLang(String value) {
        this.lang = value;
    }

    /**
     * Gets the value of the isTranslated property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsTranslated() {
        if (isTranslated == null) {
            return false;
        } else {
            return isTranslated;
        }
    }

    /**
     * Sets the value of the isTranslated property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsTranslated(Boolean value) {
        this.isTranslated = value;
    }

    /**
     * Gets the value of the isTranslatable property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsTranslatable() {
        if (isTranslatable == null) {
            return true;
        } else {
            return isTranslatable;
        }
    }

    /**
     * Sets the value of the isTranslatable property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsTranslatable(Boolean value) {
        this.isTranslatable = value;
    }

    /**
     * Gets the value of the translationSourceLanguage property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the translationSourceLanguage property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTranslationSourceLanguage().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     */
    public List<String> getTranslationSourceLanguage() {
        if (translationSourceLanguage == null) {
            translationSourceLanguage = new ArrayList<String>();
        }
        return this.translationSourceLanguage;
    }

    /**
     * Gets the value of the translationDate property.
     *
     * @return possible object is
     * {@link XMLGregorianCalendar }
     */
    public XMLGregorianCalendar getTranslationDate() {
        return translationDate;
    }

    /**
     * Sets the value of the translationDate property.
     *
     * @param value allowed object is
     *              {@link XMLGregorianCalendar }
     */
    public void setTranslationDate(XMLGregorianCalendar value) {
        this.translationDate = value;
    }

    /**
     * Gets the value of the isPlainText property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsPlainText() {
        if (isPlainText == null) {
            return true;
        } else {
            return isPlainText;
        }
    }

    /**
     * Sets the value of the isPlainText property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsPlainText(Boolean value) {
        this.isPlainText = value;
    }

}
