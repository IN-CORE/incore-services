//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.conceptualcomponent;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CommandCodeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.LabelType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;
import Metadata.Specifications.DDI.LifeCycle.reusable.VersionableType;


/**
 * Describes a universe which may also be known as a population. A Universe describes the "object" of a Data Element Concept or Data Element as defined by ISO/IEC 11179. A universe may be organized into hierarchical sub-universes. In addition to the standard name, label, and description, the universe may provide a generation code (how the universe is differentiated or split out from another universe), a definition of hierarchical sub-settings for the universe, and an attribute that indicates if the description of the universe is stated in terms of what the universe includes.
 * <p>
 * <p>Java class for UniverseType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="UniverseType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}VersionableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:conceptualcomponent:3_2}UniverseName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:conceptualcomponent:3_2}DefiningConceptReference" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:conceptualcomponent:3_2}UniverseGenerationCode" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}SubUniverseClass"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}SubUniverseClassReference"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="isInclusive" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "UniverseType", propOrder = {
        "universeName",
        "label",
        "description",
        "definingConceptReference",
        "universeGenerationCode",
        "subUniverseClassOrSubUniverseClassReference"
})
public class UniverseType
        extends VersionableType {

    @XmlElement(name = "UniverseName")
    protected List<NameType> universeName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_2")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_2")
    protected StructuredStringType description;
    @XmlElement(name = "DefiningConceptReference")
    protected ReferenceType definingConceptReference;
    @XmlElement(name = "UniverseGenerationCode")
    protected List<CommandCodeType> universeGenerationCode;
    @XmlElements({
            @XmlElement(name = "SubUniverseClass", type = SubUniverseClassType.class),
            @XmlElement(name = "SubUniverseClassReference", type = ReferenceType.class)
    })
    protected List<Object> subUniverseClassOrSubUniverseClassReference;
    @XmlAttribute(name = "isInclusive")
    protected Boolean isInclusive;

    /**
     * A name for the Universe. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the universeName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the universeName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUniverseName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getUniverseName() {
        if (universeName == null) {
            universeName = new ArrayList<NameType>();
        }
        return this.universeName;
    }

    /**
     * A display label for the Universe. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the content and purpose of the Universe. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * A concept that defines or aids in understanding the content of the universe. For example the Universe "Males" may link to the concept of "Male".
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getDefiningConceptReference() {
        return definingConceptReference;
    }

    /**
     * Sets the value of the definingConceptReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setDefiningConceptReference(ReferenceType value) {
        this.definingConceptReference = value;
    }

    /**
     * An expression of the universe in terms of the code used to generate or define it. For example how a given universe may be differentiated within a parent universe.Gets the value of the universeGenerationCode property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the universeGenerationCode property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUniverseGenerationCode().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CommandCodeType }
     */
    public List<CommandCodeType> getUniverseGenerationCode() {
        if (universeGenerationCode == null) {
            universeGenerationCode = new ArrayList<CommandCodeType>();
        }
        return this.universeGenerationCode;
    }

    /**
     * Gets the value of the subUniverseClassOrSubUniverseClassReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subUniverseClassOrSubUniverseClassReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubUniverseClassOrSubUniverseClassReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SubUniverseClassType }
     * {@link ReferenceType }
     */
    public List<Object> getSubUniverseClassOrSubUniverseClassReference() {
        if (subUniverseClassOrSubUniverseClassReference == null) {
            subUniverseClassOrSubUniverseClassReference = new ArrayList<Object>();
        }
        return this.subUniverseClassOrSubUniverseClassReference;
    }

    /**
     * Gets the value of the isInclusive property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsInclusive() {
        if (isInclusive == null) {
            return true;
        } else {
            return isInclusive;
        }
    }

    /**
     * Sets the value of the isInclusive property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsInclusive(Boolean value) {
        this.isInclusive = value;
    }

}
