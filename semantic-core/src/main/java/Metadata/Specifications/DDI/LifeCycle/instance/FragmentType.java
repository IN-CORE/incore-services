//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.instance;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.archive.ArchiveType;
import Metadata.Specifications.DDI.LifeCycle.archive.IndividualType;
import Metadata.Specifications.DDI.LifeCycle.archive.OrganizationGroupType;
import Metadata.Specifications.DDI.LifeCycle.archive.OrganizationSchemeType;
import Metadata.Specifications.DDI.LifeCycle.archive.OrganizationType;
import Metadata.Specifications.DDI.LifeCycle.archive.RelationType;
import Metadata.Specifications.DDI.LifeCycle.comparative.ComparisonType;
import Metadata.Specifications.DDI.LifeCycle.comparative.GenericMapType;
import Metadata.Specifications.DDI.LifeCycle.comparative.RepresentationMapType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptSchemeType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptualComponentType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptualVariableGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptualVariableSchemeType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptualVariableType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.GeographicLocationGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.GeographicLocationSchemeType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.GeographicStructureGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.GeographicStructureSchemeType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.SubUniverseClassType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.UniverseGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.UniverseSchemeType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.UniverseType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ComputationItemType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ControlConstructGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ControlConstructSchemeType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.DataCollectionType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.GeneralInstructionType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.GenerationInstructionType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.IfThenElseType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstructionGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstructionType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstrumentGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstrumentSchemeType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstrumentType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InterviewerInstructionSchemeType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.LoopType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.MethodologyType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ProcessingEventGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ProcessingEventSchemeType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ProcessingEventType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ProcessingInstructionGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ProcessingInstructionSchemeType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionBlockType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionConstructType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionGridType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionItemType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionSchemeType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.RepeatUntilType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.RepeatWhileType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.SequenceType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.StatementItemType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.WeightingType;
import Metadata.Specifications.DDI.LifeCycle.dataset.DataSetType;
import Metadata.Specifications.DDI.LifeCycle.ddiprofile.DDIProfileType;
import Metadata.Specifications.DDI.LifeCycle.group.GroupType;
import Metadata.Specifications.DDI.LifeCycle.group.LocalHoldingPackageType;
import Metadata.Specifications.DDI.LifeCycle.group.ResourcePackageType;
import Metadata.Specifications.DDI.LifeCycle.group.SubGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.BaseLogicalProductType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CategoryGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CategorySchemeType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CategoryType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CodeListGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CodeListSchemeType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CodeListType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.DataRelationshipType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.LogicalProductType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.NCubeGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.NCubeSchemeType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.NCubeType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.RepresentedVariableGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.RepresentedVariableSchemeType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.RepresentedVariableType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.VariableGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.VariableSchemeType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.VariableType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.PhysicalDataProductType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.PhysicalStructureGroupType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.PhysicalStructureSchemeType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.PhysicalStructureType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.RecordLayoutGroupType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.RecordLayoutSchemeType;
import Metadata.Specifications.DDI.LifeCycle.physicalinstance.PhysicalInstanceType;
import Metadata.Specifications.DDI.LifeCycle.physicalinstance.VariableStatisticsType;
import Metadata.Specifications.DDI.LifeCycle.reusable.GeographicLocationType;
import Metadata.Specifications.DDI.LifeCycle.reusable.GeographicStructureType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ManagedDateTimeRepresentationType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ManagedMissingValuesRepresentationType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ManagedNumericRepresentationType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ManagedRepresentationGroupType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ManagedRepresentationSchemeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ManagedScaleRepresentationType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ManagedTextRepresentationType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NoteType;
import Metadata.Specifications.DDI.LifeCycle.reusable.OtherMaterialType;
import Metadata.Specifications.DDI.LifeCycle.reusable.QualityStatementGroupType;
import Metadata.Specifications.DDI.LifeCycle.reusable.QualityStatementSchemeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.QualityStatementType;
import Metadata.Specifications.DDI.LifeCycle.studyunit.StudyUnitType;


/**
 * A Fragment is a means of transporting a maintainable or versionable object plus any associated notes and other material. The list of maintainables and versionables may occur in any order followed by associated notes and OtherMaterial.
 * <p>
 * <p>Java class for FragmentType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="FragmentType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{ddi:archive:3_2}Archive"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}BaseLogicalProduct"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}CategoryScheme"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}CodeList"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}CodeListScheme"/&gt;
 *           &lt;element ref="{ddi:comparative:3_2}Comparison"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptScheme"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptualComponent"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptualVariableScheme"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ControlConstructScheme"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}DataCollection"/&gt;
 *           &lt;element ref="{ddi:instance:3_2}DDIInstance"/&gt;
 *           &lt;element ref="{ddi:ddiprofile:3_2}DDIProfile"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}GeographicLocationScheme"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}GeographicStructureScheme"/&gt;
 *           &lt;element ref="{ddi:group:3_2}Group"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}InstrumentScheme"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}InterviewerInstructionScheme"/&gt;
 *           &lt;element ref="{ddi:group:3_2}LocalGroupContent"/&gt;
 *           &lt;element ref="{ddi:group:3_2}LocalHoldingPackage"/&gt;
 *           &lt;element ref="{ddi:group:3_2}LocalResourcePackageContent"/&gt;
 *           &lt;element ref="{ddi:group:3_2}LocalStudyUnitContent"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedRepresentationScheme"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}NCubeScheme"/&gt;
 *           &lt;element ref="{ddi:archive:3_2}OrganizationScheme"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalDataProduct"/&gt;
 *           &lt;element ref="{ddi:physicalinstance:3_2}PhysicalInstance"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalStructureScheme"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ProcessingEventScheme"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ProcessingInstructionScheme"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}QualityStatementScheme"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionScheme"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}RecordLayoutScheme"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}RepresentedVariableScheme"/&gt;
 *           &lt;element ref="{ddi:group:3_2}ResourcePackage"/&gt;
 *           &lt;element ref="{ddi:studyunit:3_2}StudyUnit"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}UniverseScheme"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}VariableScheme"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}Category"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}CategoryGroup"/&gt;
 *           &lt;element ref="{ddi:comparative:3_2}CategoryMap"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}CodeListGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ComputationItem"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}Concept"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptGroup"/&gt;
 *           &lt;element ref="{ddi:comparative:3_2}ConceptMap"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptualVariable"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptualVariableGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ControlConstructGroup"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}DataRelationship"/&gt;
 *           &lt;element ref="{ddi:dataset:3_2}DataSet"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}GeneralInstruction"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}GenerationInstruction"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicLocation"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}GeographicLocationGroup"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicStructure"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}GeographicStructureGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}IfThenElse"/&gt;
 *           &lt;element ref="{ddi:archive:3_2}Individual"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}Instruction"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}InstructionGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}Instrument"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}InstrumentGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}Loop"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedDateTimeRepresentation"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedMissingValuesRepresentation"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedNumericRepresentation"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedRepresentationGroup"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedScaleRepresentation"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedTextRepresentation"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}Methodology"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}NCube"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}NCubeGroup"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct_ncube_inline:3_2}NCubeInstance"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct_ncube_normal:3_2}NCubeInstance"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct_ncube_tabular:3_2}NCubeInstance"/&gt;
 *           &lt;element ref="{ddi:archive:3_2}Organization"/&gt;
 *           &lt;element ref="{ddi:archive:3_2}OrganizationGroup"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalStructure"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}PhysicalStructureGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ProcessingEvent"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ProcessingEventGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ProcessingInstructionGroup"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}QualityStatement"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}QualityStatementGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionBlock"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionConstruct"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionGrid"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionItem"/&gt;
 *           &lt;element ref="{ddi:comparative:3_2}QuestionMap"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}RecordLayout"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct_ncube_inline:3_2}RecordLayout"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct_ncube_normal:3_2}RecordLayout"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct_ncube_tabular:3_2}RecordLayout"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct_proprietary:3_2}RecordLayout"/&gt;
 *           &lt;element ref="{ddi:physicaldataproduct:3_2}RecordLayoutGroup"/&gt;
 *           &lt;element ref="{ddi:archive:3_2}Relation"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}RepeatUntil"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}RepeatWhile"/&gt;
 *           &lt;element ref="{ddi:comparative:3_2}RepresentationMap"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}RepresentedVariable"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}RepresentedVariableGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}Sequence"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}StatementItem"/&gt;
 *           &lt;element ref="{ddi:group:3_2}SubGroup"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}SubUniverseClass"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}Universe"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}UniverseGroup"/&gt;
 *           &lt;element ref="{ddi:comparative:3_2}UniverseMap"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}Variable"/&gt;
 *           &lt;element ref="{ddi:logicalproduct:3_2}VariableGroup"/&gt;
 *           &lt;element ref="{ddi:comparative:3_2}VariableMap"/&gt;
 *           &lt;element ref="{ddi:physicalinstance:3_2}VariableStatistics"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}Weighting"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Note" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}OtherMaterial" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FragmentType", propOrder = {
        "content"
})
public class FragmentType {

    @XmlElementRefs({
            @XmlElementRef(name = "ConceptualVariableGroup", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "GenerationInstruction", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Loop", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QuestionGrid", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "NCubeGroup", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ProcessingInstructionScheme", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Category", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RepresentedVariableScheme", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ManagedDateTimeRepresentation", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Archive", namespace = "ddi:archive:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "VariableScheme", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "PhysicalStructure", namespace = "ddi:physicaldataproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "InstrumentScheme", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ProcessingEventGroup", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "UniverseGroup", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QuestionMap", namespace = "ddi:comparative:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "VariableStatistics", namespace = "ddi:physicalinstance:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ControlConstructScheme", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "DataCollection", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RecordLayoutScheme", namespace = "ddi:physicaldataproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "GeographicLocationScheme", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "GeographicStructureScheme", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "GeographicLocationGroup", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ConceptualVariable", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Methodology", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "DataRelationship", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "LocalGroupContent", namespace = "ddi:group:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RepeatUntil", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Group", namespace = "ddi:group:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "NCubeInstance", namespace = "ddi:physicaldataproduct_ncube_normal:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "OrganizationScheme", namespace = "ddi:archive:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ConceptualComponent", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QuestionConstruct", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RepresentedVariableGroup", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "IfThenElse", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "PhysicalStructureScheme", namespace = "ddi:physicaldataproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ProcessingEvent", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ConceptMap", namespace = "ddi:comparative:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "CategoryMap", namespace = "ddi:comparative:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "GeographicStructure", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "StudyUnit", namespace = "ddi:studyunit:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Sequence", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ManagedNumericRepresentation", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ConceptScheme", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ConceptGroup", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QualityStatement", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RecordLayout", namespace = "ddi:physicaldataproduct_ncube_normal:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ConceptualVariableScheme", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QuestionItem", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Comparison", namespace = "ddi:comparative:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "LocalStudyUnitContent", namespace = "ddi:group:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "GeographicLocation", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "InstructionGroup", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "SubUniverseClass", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Universe", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "SubGroup", namespace = "ddi:group:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "DDIInstance", namespace = "ddi:instance:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "DataSet", namespace = "ddi:dataset:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "OtherMaterial", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RepresentedVariable", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Relation", namespace = "ddi:archive:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "CodeListGroup", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Weighting", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ManagedScaleRepresentation", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RepresentationMap", namespace = "ddi:comparative:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QualityStatementScheme", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "StatementItem", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ProcessingInstructionGroup", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "LocalHoldingPackage", namespace = "ddi:group:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "InstrumentGroup", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "NCubeInstance", namespace = "ddi:physicaldataproduct_ncube_tabular:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ManagedMissingValuesRepresentation", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RepeatWhile", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ControlConstructGroup", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Instrument", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ComputationItem", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QuestionScheme", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RecordLayout", namespace = "ddi:physicaldataproduct_proprietary:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RecordLayout", namespace = "ddi:physicaldataproduct_ncube_inline:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "VariableMap", namespace = "ddi:comparative:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QuestionBlock", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "CategoryGroup", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "PhysicalDataProduct", namespace = "ddi:physicaldataproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "LocalResourcePackageContent", namespace = "ddi:group:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "GeneralInstruction", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "OrganizationGroup", namespace = "ddi:archive:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "InterviewerInstructionScheme", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Instruction", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ResourcePackage", namespace = "ddi:group:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "NCubeInstance", namespace = "ddi:physicaldataproduct_ncube_inline:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Variable", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "CodeListScheme", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "VariableGroup", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QuestionGroup", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "QualityStatementGroup", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ManagedRepresentationGroup", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ManagedRepresentationScheme", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "PhysicalStructureGroup", namespace = "ddi:physicaldataproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "CodeList", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RecordLayout", namespace = "ddi:physicaldataproduct_ncube_tabular:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ManagedTextRepresentation", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RecordLayout", namespace = "ddi:physicaldataproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "UniverseScheme", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Organization", namespace = "ddi:archive:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "DDIProfile", namespace = "ddi:ddiprofile:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ProcessingEventScheme", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Concept", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "RecordLayoutGroup", namespace = "ddi:physicaldataproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "UniverseMap", namespace = "ddi:comparative:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "CategoryScheme", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Note", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "NCubeScheme", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "GeographicStructureGroup", namespace = "ddi:conceptualcomponent:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "BaseLogicalProduct", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "PhysicalInstance", namespace = "ddi:physicalinstance:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "Individual", namespace = "ddi:archive:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "NCube", namespace = "ddi:logicalproduct:3_2", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> content;

    /**
     * Gets the rest of the content model.
     * <p>
     * <p>
     * You are getting this "catch-all" property because of the following reason:
     * The field name "NCubeInstance" is used by two different parts of a schema. See:
     * line 269 of http://www.ddialliance.org/Specification/DDI-Lifecycle/3.2/XMLSchema/instance.xsd
     * line 268 of http://www.ddialliance.org/Specification/DDI-Lifecycle/3.2/XMLSchema/instance.xsd
     * <p>
     * To get rid of this property, apply a property customization to one
     * of both of the following declarations to change their names:
     * Gets the value of the content property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the content property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContent().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link ConceptualVariableGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link GenerationInstructionType }{@code >}
     * {@link JAXBElement }{@code <}{@link LoopType }{@code >}
     * {@link JAXBElement }{@code <}{@link QuestionGridType }{@code >}
     * {@link JAXBElement }{@code <}{@link NCubeGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link ProcessingInstructionSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link CategoryType }{@code >}
     * {@link JAXBElement }{@code <}{@link RepresentedVariableSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedDateTimeRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link ArchiveType }{@code >}
     * {@link JAXBElement }{@code <}{@link VariableSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link PhysicalStructureType }{@code >}
     * {@link JAXBElement }{@code <}{@link InstrumentSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link ProcessingEventGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link UniverseGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}
     * {@link JAXBElement }{@code <}{@link VariableStatisticsType }{@code >}
     * {@link JAXBElement }{@code <}{@link ControlConstructSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link DataCollectionType }{@code >}
     * {@link JAXBElement }{@code <}{@link RecordLayoutSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link GeographicLocationSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link GeographicStructureSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link GeographicLocationGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link ConceptualVariableType }{@code >}
     * {@link JAXBElement }{@code <}{@link MethodologyType }{@code >}
     * {@link JAXBElement }{@code <}{@link DataRelationshipType }{@code >}
     * {@link JAXBElement }{@code <}{@link GroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link RepeatUntilType }{@code >}
     * {@link JAXBElement }{@code <}{@link GroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDI.physicaldataproduct_ncube_normal.NCubeInstanceType }{@code >}
     * {@link JAXBElement }{@code <}{@link OrganizationSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link ConceptualComponentType }{@code >}
     * {@link JAXBElement }{@code <}{@link QuestionConstructType }{@code >}
     * {@link JAXBElement }{@code <}{@link RepresentedVariableGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link IfThenElseType }{@code >}
     * {@link JAXBElement }{@code <}{@link PhysicalStructureSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link ProcessingEventType }{@code >}
     * {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}
     * {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}
     * {@link JAXBElement }{@code <}{@link GeographicStructureType }{@code >}
     * {@link JAXBElement }{@code <}{@link StudyUnitType }{@code >}
     * {@link JAXBElement }{@code <}{@link SequenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedNumericRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link ConceptSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link ConceptGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link QualityStatementType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDI.physicaldataproduct_ncube_normal.RecordLayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link ConceptualVariableSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link QuestionItemType }{@code >}
     * {@link JAXBElement }{@code <}{@link ComparisonType }{@code >}
     * {@link JAXBElement }{@code <}{@link LogicalProductType }{@code >}
     * {@link JAXBElement }{@code <}{@link StudyUnitType }{@code >}
     * {@link JAXBElement }{@code <}{@link GeographicLocationType }{@code >}
     * {@link JAXBElement }{@code <}{@link InstructionGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link SubUniverseClassType }{@code >}
     * {@link JAXBElement }{@code <}{@link UniverseType }{@code >}
     * {@link JAXBElement }{@code <}{@link SubGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDIInstanceType }{@code >}
     * {@link JAXBElement }{@code <}{@link DataSetType }{@code >}
     * {@link JAXBElement }{@code <}{@link OtherMaterialType }{@code >}
     * {@link JAXBElement }{@code <}{@link RepresentedVariableType }{@code >}
     * {@link JAXBElement }{@code <}{@link RelationType }{@code >}
     * {@link JAXBElement }{@code <}{@link CodeListGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link WeightingType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedScaleRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link RepresentationMapType }{@code >}
     * {@link JAXBElement }{@code <}{@link QualityStatementSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link StatementItemType }{@code >}
     * {@link JAXBElement }{@code <}{@link ProcessingInstructionGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link LocalHoldingPackageType }{@code >}
     * {@link JAXBElement }{@code <}{@link InstrumentGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDI.physicaldataproduct_ncube_tabular.NCubeInstanceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedMissingValuesRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link RepeatWhileType }{@code >}
     * {@link JAXBElement }{@code <}{@link ControlConstructGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link InstrumentType }{@code >}
     * {@link JAXBElement }{@code <}{@link ComputationItemType }{@code >}
     * {@link JAXBElement }{@code <}{@link QuestionSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDI.physicaldataproduct_proprietary.RecordLayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDI.physicaldataproduct_ncube_inline.RecordLayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}
     * {@link JAXBElement }{@code <}{@link QuestionBlockType }{@code >}
     * {@link JAXBElement }{@code <}{@link CategoryGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link PhysicalDataProductType }{@code >}
     * {@link JAXBElement }{@code <}{@link ResourcePackageType }{@code >}
     * {@link JAXBElement }{@code <}{@link GeneralInstructionType }{@code >}
     * {@link JAXBElement }{@code <}{@link OrganizationGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link InterviewerInstructionSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link InstructionType }{@code >}
     * {@link JAXBElement }{@code <}{@link ResourcePackageType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDI.physicaldataproduct_ncube_inline.NCubeInstanceType }{@code >}
     * {@link JAXBElement }{@code <}{@link VariableType }{@code >}
     * {@link JAXBElement }{@code <}{@link CodeListSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link VariableGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link QuestionGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link QualityStatementGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedRepresentationGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedRepresentationSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link PhysicalStructureGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link CodeListType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDI.physicaldataproduct_ncube_tabular.RecordLayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedTextRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDI.physicaldataproduct.RecordLayoutType }{@code >}
     * {@link JAXBElement }{@code <}{@link UniverseSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link OrganizationType }{@code >}
     * {@link JAXBElement }{@code <}{@link DDIProfileType }{@code >}
     * {@link JAXBElement }{@code <}{@link ProcessingEventSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link ConceptType }{@code >}
     * {@link JAXBElement }{@code <}{@link RecordLayoutGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link GenericMapType }{@code >}
     * {@link JAXBElement }{@code <}{@link CategorySchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link NoteType }{@code >}
     * {@link JAXBElement }{@code <}{@link NCubeSchemeType }{@code >}
     * {@link JAXBElement }{@code <}{@link GeographicStructureGroupType }{@code >}
     * {@link JAXBElement }{@code <}{@link BaseLogicalProductType }{@code >}
     * {@link JAXBElement }{@code <}{@link PhysicalInstanceType }{@code >}
     * {@link JAXBElement }{@code <}{@link IndividualType }{@code >}
     * {@link JAXBElement }{@code <}{@link NCubeType }{@code >}
     */
    public List<JAXBElement<?>> getContent() {
        if (content == null) {
            content = new ArrayList<JAXBElement<?>>();
        }
        return this.content;
    }

}
