//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.archive.IndividualType;
import Metadata.Specifications.DDI.LifeCycle.archive.OrganizationGroupType;
import Metadata.Specifications.DDI.LifeCycle.archive.OrganizationType;
import Metadata.Specifications.DDI.LifeCycle.archive.RelationType;
import Metadata.Specifications.DDI.LifeCycle.comparative.GenericMapType;
import Metadata.Specifications.DDI.LifeCycle.comparative.RepresentationMapType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptualVariableGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.ConceptualVariableType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.GeographicLocationGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.GeographicStructureGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.SubUniverseClassType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.UniverseGroupType;
import Metadata.Specifications.DDI.LifeCycle.conceptualcomponent.UniverseType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ControlConstructGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ControlConstructType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.GeneralInstructionType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.GenerationInstructionType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstructionGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstructionType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstrumentGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.InstrumentType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.MethodologyType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ProcessingEventGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ProcessingEventType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.ProcessingInstructionGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionBlockType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionGridType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionGroupType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.QuestionItemType;
import Metadata.Specifications.DDI.LifeCycle.datacollection.WeightingType;
import Metadata.Specifications.DDI.LifeCycle.group.SubGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CategoryGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CategoryType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.CodeListGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.DataRelationshipType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.NCubeGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.NCubeType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.RepresentedVariableGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.RepresentedVariableType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.VariableGroupType;
import Metadata.Specifications.DDI.LifeCycle.logicalproduct.VariableType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.BaseRecordLayoutType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.PhysicalStructureGroupType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.PhysicalStructureType;
import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.RecordLayoutGroupType;
import Metadata.Specifications.DDI.LifeCycle.physicalinstance.VariableStatisticsType;


/**
 * Adds the attribute identifying this as a versionable object as well as the MaintainableObject. All versionable objects should provide their contextual information, the identity of their maintainable parent. The deprecated form of the URN contains all the information to identify and object and its context. A Canonical URN scoped to the Maintainable contains the ID of the Maintainable as part of its structure. To provide full contextual information use the MaintainableObject structure. The use of the Canonical URN scoped to the agency or the identification sequence alone requires the content of the MaintainableObject to provide full contextual information. All content of Versionable is considered to be administrative metadata. Note that changes to the administrative metadata does not drive a change in the version of the parent objects. See DDI 3.2 Technical Documentation: Part I for further details.
 * <p>
 * <p>Java class for VersionableType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="VersionableType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}AbstractVersionableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}MaintainableObject" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="isVersionable" type="{http://www.w3.org/2001/XMLSchema}boolean" fixed="true" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "VersionableType", propOrder = {
        "maintainableObject"
})
@XmlSeeAlso({
        OrganizationGroupType.class,
        OrganizationType.class,
        IndividualType.class,
        RelationType.class,
        QualityStatementGroupType.class,
        QualityStatementType.class,
        GeographicStructureType.class,
        GeographicLocationType.class,
        ManagedRepresentationGroupType.class,
        ManagedTextRepresentationType.class,
        ManagedDateTimeRepresentationType.class,
        ManagedNumericRepresentationType.class,
        ManagedScaleRepresentationType.class,
        ManagedMissingValuesRepresentationType.class,
        GenericMapType.class,
        RepresentationMapType.class,
        ProcessingEventGroupType.class,
        ProcessingInstructionGroupType.class,
        InstructionGroupType.class,
        InstructionType.class,
        InstrumentGroupType.class,
        ControlConstructGroupType.class,
        QuestionGridType.class,
        QuestionBlockType.class,
        QuestionGroupType.class,
        QuestionItemType.class,
        ControlConstructType.class,
        MethodologyType.class,
        InstrumentType.class,
        ProcessingEventType.class,
        WeightingType.class,
        GeneralInstructionType.class,
        GenerationInstructionType.class,
        CodeListGroupType.class,
        DataRelationshipType.class,
        CategoryType.class,
        CategoryGroupType.class,
        VariableType.class,
        VariableGroupType.class,
        NCubeType.class,
        NCubeGroupType.class,
        RepresentedVariableGroupType.class,
        RepresentedVariableType.class,
        UniverseGroupType.class,
        ConceptType.class,
        ConceptualVariableGroupType.class,
        ConceptualVariableType.class,
        SubUniverseClassType.class,
        GeographicStructureGroupType.class,
        GeographicLocationGroupType.class,
        UniverseType.class,
        ConceptGroupType.class,
        PhysicalStructureGroupType.class,
        RecordLayoutGroupType.class,
        PhysicalStructureType.class,
        SubGroupType.class,
        VariableStatisticsType.class,
        Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.ncube.inline.NCubeInstanceType.class,
        Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.ncube.normal.NCubeInstanceType.class,
        Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.ncube.tabular.NCubeInstanceType.class,
        BaseRecordLayoutType.class
})
public abstract class VersionableType
        extends AbstractVersionableType {

    @XmlElement(name = "MaintainableObject")
    protected MaintainableObjectType maintainableObject;
    @XmlAttribute(name = "isVersionable")
    protected Boolean isVersionable;

    /**
     * This section provides information on the Maintainable Parent of this object at its point of origination. This content will not change over time unless the version of the object changes. Note that if the ID, Agency, Version sequence is used, and the scope of uniqueness of the referenced object is the Maintainable, then the ID of the Maintainable is needed to create the structured ID portion of the canonical URN. If the system uses the deprecated URN, both the Maintainable ID and TypeOfMaintainableObject are required to create the deprecated URN structure.
     *
     * @return possible object is
     * {@link MaintainableObjectType }
     */
    public MaintainableObjectType getMaintainableObject() {
        return maintainableObject;
    }

    /**
     * Sets the value of the maintainableObject property.
     *
     * @param value allowed object is
     *              {@link MaintainableObjectType }
     */
    public void setMaintainableObject(MaintainableObjectType value) {
        this.maintainableObject = value;
    }

    /**
     * Gets the value of the isVersionable property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isIsVersionable() {
        if (isVersionable == null) {
            return true;
        } else {
            return isVersionable;
        }
    }

    /**
     * Sets the value of the isVersionable property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setIsVersionable(Boolean value) {
        this.isVersionable = value;
    }

}
