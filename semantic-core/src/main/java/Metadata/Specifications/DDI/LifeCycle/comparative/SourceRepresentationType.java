//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.comparative;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.GeographicLocationReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.GeographicStructureReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SchemeReferenceType;


/**
 * Provides a reference to the managed content of a representation which may be a ManagedRepresentation or a specific CodeList, GeographicRepresentation, or GeographicLocation. Allows for the optional reference to a Concept when context is important. For example, a ManagedNumericRepresentation within the context of Age.
 * <p>
 * <p>Java class for SourceRepresentationType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="SourceRepresentationType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedRepresentationReference"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}CategorySchemeReference"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}CodeListReference"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicStructureReference"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicLocationReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ConceptReference" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SourceRepresentationType", propOrder = {
        "managedRepresentationReference",
        "categorySchemeReference",
        "codeListReference",
        "geographicStructureReference",
        "geographicLocationReference",
        "conceptReference"
})
public class SourceRepresentationType {

    @XmlElementRef(name = "ManagedRepresentationReference", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false)
    protected JAXBElement<ReferenceType> managedRepresentationReference;
    @XmlElement(name = "CategorySchemeReference", namespace = "ddi:reusable:3_2")
    protected SchemeReferenceType categorySchemeReference;
    @XmlElement(name = "CodeListReference", namespace = "ddi:reusable:3_2")
    protected ReferenceType codeListReference;
    @XmlElement(name = "GeographicStructureReference", namespace = "ddi:reusable:3_2")
    protected GeographicStructureReferenceType geographicStructureReference;
    @XmlElement(name = "GeographicLocationReference", namespace = "ddi:reusable:3_2")
    protected GeographicLocationReferenceType geographicLocationReference;
    @XmlElement(name = "ConceptReference", namespace = "ddi:reusable:3_2")
    protected ReferenceType conceptReference;

    /**
     * Substitution group head for referencing Managed Representations. For example, ManagedTextRepresentationReference, ManagedNumericRepresentationReference, etc.
     *
     * @return possible object is
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     */
    public JAXBElement<ReferenceType> getManagedRepresentationReference() {
        return managedRepresentationReference;
    }

    /**
     * Sets the value of the managedRepresentationReference property.
     *
     * @param value allowed object is
     *              {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     *              {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     *              {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     *              {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     *              {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     *              {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     */
    public void setManagedRepresentationReference(JAXBElement<ReferenceType> value) {
        this.managedRepresentationReference = value;
    }

    /**
     * A reference to a CategoryScheme as the managed component of a representation.
     *
     * @return possible object is
     * {@link SchemeReferenceType }
     */
    public SchemeReferenceType getCategorySchemeReference() {
        return categorySchemeReference;
    }

    /**
     * Sets the value of the categorySchemeReference property.
     *
     * @param value allowed object is
     *              {@link SchemeReferenceType }
     */
    public void setCategorySchemeReference(SchemeReferenceType value) {
        this.categorySchemeReference = value;
    }

    /**
     * A reference to a CodeList as the managed component of a representation.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getCodeListReference() {
        return codeListReference;
    }

    /**
     * Sets the value of the codeListReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setCodeListReference(ReferenceType value) {
        this.codeListReference = value;
    }

    /**
     * A reference to a GeographicStructure as the managed component of a representation.
     *
     * @return possible object is
     * {@link GeographicStructureReferenceType }
     */
    public GeographicStructureReferenceType getGeographicStructureReference() {
        return geographicStructureReference;
    }

    /**
     * Sets the value of the geographicStructureReference property.
     *
     * @param value allowed object is
     *              {@link GeographicStructureReferenceType }
     */
    public void setGeographicStructureReference(GeographicStructureReferenceType value) {
        this.geographicStructureReference = value;
    }

    /**
     * A reference to a GeographicLocation as the managed component of a representation.
     *
     * @return possible object is
     * {@link GeographicLocationReferenceType }
     */
    public GeographicLocationReferenceType getGeographicLocationReference() {
        return geographicLocationReference;
    }

    /**
     * Sets the value of the geographicLocationReference property.
     *
     * @param value allowed object is
     *              {@link GeographicLocationReferenceType }
     */
    public void setGeographicLocationReference(GeographicLocationReferenceType value) {
        this.geographicLocationReference = value;
    }

    /**
     * Reference to a Concept which provides a context for the representation, e.g. Age for a numeric representation.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getConceptReference() {
        return conceptReference;
    }

    /**
     * Sets the value of the conceptReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setConceptReference(ReferenceType value) {
        this.conceptReference = value;
    }

}
