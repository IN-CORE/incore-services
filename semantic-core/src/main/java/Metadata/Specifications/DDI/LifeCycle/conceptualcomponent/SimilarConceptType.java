//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.conceptualcomponent;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;


/**
 * A reference to a concept with similar meaning and a description of their differences. Formal comparison is done using a ConceptMap. The similar concept structure allows specification of similar concepts to address cases where confusion may affect the appropriate use of the concept.
 * <p>
 * <p>Java class for SimilarConceptType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="SimilarConceptType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:conceptualcomponent:3_2}SimilarConceptReference"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Difference" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SimilarConceptType", propOrder = {
        "similarConceptReference",
        "difference"
})
public class SimilarConceptType {

    @XmlElement(name = "SimilarConceptReference", required = true)
    protected ReferenceType similarConceptReference;
    @XmlElement(name = "Difference", namespace = "ddi:reusable:3_2")
    protected StructuredStringType difference;

    /**
     * Reference to a concept with a similar definition.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getSimilarConceptReference() {
        return similarConceptReference;
    }

    /**
     * Sets the value of the similarConceptReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setSimilarConceptReference(ReferenceType value) {
        this.similarConceptReference = value;
    }

    /**
     * Describes the difference between the concept referenced in SimilarConceptReference and the concept included in the concept's Description element.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDifference() {
        return difference;
    }

    /**
     * Sets the value of the difference property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDifference(StructuredStringType value) {
        this.difference = value;
    }

}
