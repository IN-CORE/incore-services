//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.physicaldataproduct;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CodeValueType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SchemeReferenceType;


/**
 * A member of the BaseRecordLayout substitution group intended for use with archival formats of microdata held in an external file with fixed or delimited locations for data items. In addition to the link to the PhysicalStructure provided by BaseRecordLayout, the record layout is this namespace (p) identifies the character set and array base for the stored data, an optional reference to the default VariableScheme for the data items, a flag indicating that the variable names are provided on the first row of the data file, and a full description of each data item including a link to its description and its physical location in the record.
 * <p>
 * <p>Java class for RecordLayoutType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="RecordLayoutType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:physicaldataproduct:3_2}BaseRecordLayoutType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}CharacterSet" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ArrayBase"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}DefaultVariableSchemeReference" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:physicaldataproduct:3_2}DataItem" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="namesOnFirstRow" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RecordLayoutType", propOrder = {
        "characterSet",
        "arrayBase",
        "defaultVariableSchemeReference",
        "dataItem"
})
public class RecordLayoutType
        extends BaseRecordLayoutType {

    @XmlElement(name = "CharacterSet", namespace = "ddi:reusable:3_2")
    protected CodeValueType characterSet;
    @XmlElement(name = "ArrayBase", namespace = "ddi:reusable:3_2", required = true)
    protected BigInteger arrayBase;
    @XmlElement(name = "DefaultVariableSchemeReference", namespace = "ddi:reusable:3_2")
    protected SchemeReferenceType defaultVariableSchemeReference;
    @XmlElement(name = "DataItem")
    protected List<DataItemType> dataItem;
    @XmlAttribute(name = "namesOnFirstRow")
    protected Boolean namesOnFirstRow;

    /**
     * Character set used in the data file (e.g., US ASCII, EBCDIC, UTF-8). This is a required field.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getCharacterSet() {
        return characterSet;
    }

    /**
     * Sets the value of the characterSet property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setCharacterSet(CodeValueType value) {
        this.characterSet = value;
    }

    /**
     * Sets the array base for any arrays used in the definition (that is, whether the first value is in position 0 or 1, etc.). This may be the data array in a delimited data file or the measure array for measures that are bundled and stored in a single location. Array base is generally set to either 0 or 1. There is no override provided as systems processing a record would use a consistent array base.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getArrayBase() {
        return arrayBase;
    }

    /**
     * Sets the value of the arrayBase property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setArrayBase(BigInteger value) {
        this.arrayBase = value;
    }

    /**
     * References a variable scheme for the RecordLayout. This can be overridden by individual data items if they are from a different variable scheme.
     *
     * @return possible object is
     * {@link SchemeReferenceType }
     */
    public SchemeReferenceType getDefaultVariableSchemeReference() {
        return defaultVariableSchemeReference;
    }

    /**
     * Sets the value of the defaultVariableSchemeReference property.
     *
     * @param value allowed object is
     *              {@link SchemeReferenceType }
     */
    public void setDefaultVariableSchemeReference(SchemeReferenceType value) {
        this.defaultVariableSchemeReference = value;
    }

    /**
     * Includes a reference to a variable, and information about its data item location and its data type/format.Gets the value of the dataItem property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataItem property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataItem().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DataItemType }
     */
    public List<DataItemType> getDataItem() {
        if (dataItem == null) {
            dataItem = new ArrayList<DataItemType>();
        }
        return this.dataItem;
    }

    /**
     * Gets the value of the namesOnFirstRow property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isNamesOnFirstRow() {
        if (namesOnFirstRow == null) {
            return false;
        } else {
            return namesOnFirstRow;
        }
    }

    /**
     * Sets the value of the namesOnFirstRow property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setNamesOnFirstRow(Boolean value) {
        this.namesOnFirstRow = value;
    }

}
