//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * A choice of a BoundingBox and/or a set of BoundingPolygons and ExcludingPolygons that describe an area for a specific time period.
 * <p>
 * <p>Java class for GeographicBoundaryType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="GeographicBoundaryType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}AreaCoverage" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}BoundingBox" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}BoundingPolygon" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ExcludingPolygon" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}GeographicTime" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GeographicBoundaryType", propOrder = {
        "areaCoverage",
        "boundingBox",
        "boundingPolygon",
        "excludingPolygon",
        "geographicTime"
})
public class GeographicBoundaryType {

    @XmlElement(name = "AreaCoverage")
    protected List<AreaCoverageType> areaCoverage;
    @XmlElement(name = "BoundingBox")
    protected BoundingBoxType boundingBox;
    @XmlElement(name = "BoundingPolygon")
    protected List<PolygonType> boundingPolygon;
    @XmlElement(name = "ExcludingPolygon")
    protected List<PolygonType> excludingPolygon;
    @XmlElement(name = "GeographicTime")
    protected DateType geographicTime;

    /**
     * Use to specify the area of land, water, total or other area coverage in terms of square miles/kilometers or other measures.Gets the value of the areaCoverage property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the areaCoverage property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAreaCoverage().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AreaCoverageType }
     */
    public List<AreaCoverageType> getAreaCoverage() {
        if (areaCoverage == null) {
            areaCoverage = new ArrayList<AreaCoverageType>();
        }
        return this.areaCoverage;
    }

    /**
     * A BoundingBox (North, South Latitude and East, West Longitude) of the LocationValue for the time period specified with the GeographicBoundary.
     *
     * @return possible object is
     * {@link BoundingBoxType }
     */
    public BoundingBoxType getBoundingBox() {
        return boundingBox;
    }

    /**
     * Sets the value of the boundingBox property.
     *
     * @param value allowed object is
     *              {@link BoundingBoxType }
     */
    public void setBoundingBox(BoundingBoxType value) {
        this.boundingBox = value;
    }

    /**
     * A description of the boundaries of the polygon either in-line or by a reference to an external file containing the boundaries. Repeatable to describe non-contiguous areas such as islands or Native American Reservations in some parts of the United States.Gets the value of the boundingPolygon property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the boundingPolygon property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBoundingPolygon().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PolygonType }
     */
    public List<PolygonType> getBoundingPolygon() {
        if (boundingPolygon == null) {
            boundingPolygon = new ArrayList<PolygonType>();
        }
        return this.boundingPolygon;
    }

    /**
     * A description of a the boundaries of a polygon internal to the bounding polygon which should be excluded. For example, for the bounding polygon describing the State of Brandenburg in Germany, the Excluding Polygon would describe the boundary of Berlin, creating hole within Brandenburg which is occupied by Berlin.Gets the value of the excludingPolygon property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the excludingPolygon property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExcludingPolygon().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PolygonType }
     */
    public List<PolygonType> getExcludingPolygon() {
        if (excludingPolygon == null) {
            excludingPolygon = new ArrayList<PolygonType>();
        }
        return this.excludingPolygon;
    }

    /**
     * A time for which the polygon is an accurate description of the area. This may be a range (without an end date if currently still valid) or a single date when the shape was know to be valid if a range is not available.
     *
     * @return possible object is
     * {@link DateType }
     */
    public DateType getGeographicTime() {
        return geographicTime;
    }

    /**
     * Sets the value of the geographicTime property.
     *
     * @param value allowed object is
     *              {@link DateType }
     */
    public void setGeographicTime(DateType value) {
        this.geographicTime = value;
    }

}
