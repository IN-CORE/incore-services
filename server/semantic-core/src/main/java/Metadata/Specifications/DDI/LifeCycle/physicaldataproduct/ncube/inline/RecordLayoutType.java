//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.ncube.inline;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.BaseRecordLayoutType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;


/**
 * A member of the BaseRecordLayout substitution group intended for use when the data items of an NCube Instances are captured in-line within the metadata instance. In addition to the link to the PhysicalStructure provided by BaseRecordLayout, the record layout is this namespace (m2) identifies the array base for the in-line data, a full description of each data item contained within an NCube Instance including a link to its description (matrix address) and contained values.
 * <p>
 * <p>Java class for RecordLayoutType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="RecordLayoutType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:physicaldataproduct:3_2}BaseRecordLayoutType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ArrayBase" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:physicaldataproduct_ncube_inline:3_2}NCubeInstance"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}NCubeInstanceReference"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RecordLayoutType", propOrder = {
        "arrayBase",
        "nCubeInstanceOrNCubeInstanceReference"
})
public class RecordLayoutType
        extends BaseRecordLayoutType {

    @XmlElement(name = "ArrayBase", namespace = "ddi:reusable:3_2")
    protected BigInteger arrayBase;
    @XmlElements({
            @XmlElement(name = "NCubeInstance", type = NCubeInstanceType.class),
            @XmlElement(name = "NCubeInstanceReference", namespace = "ddi:reusable:3_2", type = ReferenceType.class)
    })
    protected List<Object> nCubeInstanceOrNCubeInstanceReference;

    /**
     * Sets the array base for any arrays used in the definition (that is, whether the first value is in position 0 or 1, etc.). This may be the data array in a delimited data file or the measure array for measures that are bundled and stored in a single location. Array base is generally set to either 0 or 1. There is no override provided as systems processing a record would use a consistent array base.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getArrayBase() {
        return arrayBase;
    }

    /**
     * Sets the value of the arrayBase property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setArrayBase(BigInteger value) {
        this.arrayBase = value;
    }

    /**
     * Gets the value of the nCubeInstanceOrNCubeInstanceReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nCubeInstanceOrNCubeInstanceReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNCubeInstanceOrNCubeInstanceReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NCubeInstanceType }
     * {@link ReferenceType }
     */
    public List<Object> getNCubeInstanceOrNCubeInstanceReference() {
        if (nCubeInstanceOrNCubeInstanceReference == null) {
            nCubeInstanceOrNCubeInstanceReference = new ArrayList<Object>();
        }
        return this.nCubeInstanceOrNCubeInstanceReference;
    }

}
