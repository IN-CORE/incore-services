//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Describes a level within the GeographicStructure. In addition to a name and description, provides one or more GeographicLevelCodes by which it is identified with specified system, any coverage limitations, and parent position within a single hierarchy or if it is the result of layering multiple hierarchies, the lowest component level for each of the layering hierarchies. Allows for an indicator declaring that coverage of the parent level is or is not exhaustive.
 * <p>
 * <p>Java class for GeographicLevelType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="GeographicLevelType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}IdentifiableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}GeographicLevelName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}GeographicLevelCode" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}CoverageLimitation" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}PrimaryComponentLevel" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice minOccurs="0"&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ParentGeographicLevelReference"/&gt;
 *           &lt;sequence&gt;
 *             &lt;element ref="{ddi:reusable:3_2}GeographicLayerBaseReference" maxOccurs="unbounded" minOccurs="2"/&gt;
 *           &lt;/sequence&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GeographicLevelType", propOrder = {
        "geographicLevelName",
        "description",
        "geographicLevelCode",
        "coverageLimitation",
        "primaryComponentLevel",
        "parentGeographicLevelReference",
        "geographicLayerBaseReference"
})
public class GeographicLevelType
        extends IdentifiableType {

    @XmlElement(name = "GeographicLevelName")
    protected List<NameType> geographicLevelName;
    @XmlElement(name = "Description")
    protected StructuredStringType description;
    @XmlElement(name = "GeographicLevelCode")
    protected List<CodeValueType> geographicLevelCode;
    @XmlElement(name = "CoverageLimitation")
    protected InternationalStringType coverageLimitation;
    @XmlElement(name = "PrimaryComponentLevel")
    protected List<PrimaryComponentLevelType> primaryComponentLevel;
    @XmlElement(name = "ParentGeographicLevelReference")
    protected ParentGeographicLevelReferenceType parentGeographicLevelReference;
    @XmlElement(name = "GeographicLayerBaseReference")
    protected List<ReferenceType> geographicLayerBaseReference;

    /**
     * A name for the GeographicLevel. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the geographicLevelName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicLevelName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicLevelName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getGeographicLevelName() {
        if (geographicLevelName == null) {
            geographicLevelName = new ArrayList<NameType>();
        }
        return this.geographicLevelName;
    }

    /**
     * A description of the GeographicLevel. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * A code and its authorization source for identifying the level within a specific system.Gets the value of the geographicLevelCode property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicLevelCode property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicLevelCode().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CodeValueType }
     */
    public List<CodeValueType> getGeographicLevelCode() {
        if (geographicLevelCode == null) {
            geographicLevelCode = new ArrayList<CodeValueType>();
        }
        return this.geographicLevelCode;
    }

    /**
     * Describes a limitation of the coverage such as all objects of a specific type that meet population size requirements (i.e., All Places with a population of 10,000 or more).
     *
     * @return possible object is
     * {@link InternationalStringType }
     */
    public InternationalStringType getCoverageLimitation() {
        return coverageLimitation;
    }

    /**
     * Sets the value of the coverageLimitation property.
     *
     * @param value allowed object is
     *              {@link InternationalStringType }
     */
    public void setCoverageLimitation(InternationalStringType value) {
        this.coverageLimitation = value;
    }

    /**
     * Provides references to the base level elements that are used as building blocks for composed geographies. For example, Metropolitan areas that are composed of counties except in the New England States where they are composed of county subdivisions, or School Attendance Boundaries (SABINS) built from Census Blocks. This structure allows for specifying the basic building block for composed areas and any restrictions (coverage limitations). The field may be repeated to provide alternate information on the basic building blocks for areas outside of the coverage limitations described.Gets the value of the primaryComponentLevel property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the primaryComponentLevel property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPrimaryComponentLevel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link PrimaryComponentLevelType }
     */
    public List<PrimaryComponentLevelType> getPrimaryComponentLevel() {
        if (primaryComponentLevel == null) {
            primaryComponentLevel = new ArrayList<PrimaryComponentLevelType>();
        }
        return this.primaryComponentLevel;
    }

    /**
     * Reference to a single containing (parent) geography.
     *
     * @return possible object is
     * {@link ParentGeographicLevelReferenceType }
     */
    public ParentGeographicLevelReferenceType getParentGeographicLevelReference() {
        return parentGeographicLevelReference;
    }

    /**
     * Sets the value of the parentGeographicLevelReference property.
     *
     * @param value allowed object is
     *              {@link ParentGeographicLevelReferenceType }
     */
    public void setParentGeographicLevelReference(ParentGeographicLevelReferenceType value) {
        this.parentGeographicLevelReference = value;
    }

    /**
     * Use for geographic polygons that are the result of layering two or more geographic hierarchies where the polygon being described is the intersect of the layers. For example: State - County - County Subdivision - Place/Remainder - Tract [The portion of a tract that is within a single place (or non-place area) and a single county subdivision] This polygon is made by overlaying the following three geographic hierarchies: 1) State - Place, 2) State - County - Tract, and 3) State - County - Subdivision. The three GeographicLayerBase elements would point to Tract, Place, and County Subdivision.Gets the value of the geographicLayerBaseReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicLayerBaseReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicLayerBaseReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReferenceType }
     */
    public List<ReferenceType> getGeographicLayerBaseReference() {
        if (geographicLayerBaseReference == null) {
            geographicLayerBaseReference = new ArrayList<ReferenceType>();
        }
        return this.geographicLayerBaseReference;
    }

}
