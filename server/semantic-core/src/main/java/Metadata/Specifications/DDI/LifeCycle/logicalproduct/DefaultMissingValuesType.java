//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.logicalproduct;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;


/**
 * Identifies the default missing value parameter for the this logical record by referencing a ManagedMissingValuesRepresentation or by stating that there is a default missing values parameter used but it is undocumented. Note that a conflicting DefaultMissingValues definition in a PhysicalInstance will override that found in the LogicalRecord.
 * <p>
 * <p>Java class for DefaultMissingValuesType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="DefaultMissingValuesType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice minOccurs="0"&gt;
 *         &lt;element ref="{ddi:logicalproduct:3_2}MissingValuesReference"/&gt;
 *         &lt;element name="DefaultUsedNoDocumentation" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DefaultMissingValuesType", propOrder = {
        "missingValuesReference",
        "defaultUsedNoDocumentation"
})
public class DefaultMissingValuesType {

    @XmlElement(name = "MissingValuesReference")
    protected ReferenceType missingValuesReference;
    @XmlElement(name = "DefaultUsedNoDocumentation")
    protected Boolean defaultUsedNoDocumentation;

    /**
     * Reference to the appropriate ManagedMissingValuesRepresentation describing the default values.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getMissingValuesReference() {
        return missingValuesReference;
    }

    /**
     * Sets the value of the missingValuesReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setMissingValuesReference(ReferenceType value) {
        this.missingValuesReference = value;
    }

    /**
     * Gets the value of the defaultUsedNoDocumentation property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public Boolean isDefaultUsedNoDocumentation() {
        return defaultUsedNoDocumentation;
    }

    /**
     * Sets the value of the defaultUsedNoDocumentation property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setDefaultUsedNoDocumentation(Boolean value) {
        this.defaultUsedNoDocumentation = value;
    }

}
