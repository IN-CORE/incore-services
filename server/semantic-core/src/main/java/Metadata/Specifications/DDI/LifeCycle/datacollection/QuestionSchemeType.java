//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.datacollection;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.LabelType;
import Metadata.Specifications.DDI.LifeCycle.reusable.MaintainableType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SchemeReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;


/**
 * Contains a set of QuestionItems, QuestionGrids, QuestionBlocks, and QuestionGroups. In addition to the standard name, label, and description of the Question Scheme, may contain another QuestionScheme by reference, a listing of Questions by type (in-line or by reference), and a listing of QuestionGroups (in-line or by reference).
 * <p>
 * <p>Java class for QuestionSchemeType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="QuestionSchemeType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}MaintainableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}QuestionSchemeName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}QuestionSchemeReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionItem"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionItemReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionGrid"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionGridReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionBlock"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionBlockReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}QuestionGroupReference"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "QuestionSchemeType", propOrder = {
        "questionSchemeName",
        "label",
        "description",
        "questionSchemeReference",
        "questionItemOrQuestionItemReference",
        "questionGridOrQuestionGridReference",
        "questionBlockOrQuestionBlockReference",
        "questionGroupOrQuestionGroupReference"
})
public class QuestionSchemeType
        extends MaintainableType {

    @XmlElement(name = "QuestionSchemeName")
    protected List<NameType> questionSchemeName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_2")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_2")
    protected StructuredStringType description;
    @XmlElement(name = "QuestionSchemeReference", namespace = "ddi:reusable:3_2")
    protected List<SchemeReferenceType> questionSchemeReference;
    @XmlElements({
            @XmlElement(name = "QuestionItem", type = QuestionItemType.class),
            @XmlElement(name = "QuestionItemReference", type = ReferenceType.class)
    })
    protected List<Object> questionItemOrQuestionItemReference;
    @XmlElements({
            @XmlElement(name = "QuestionGrid", type = QuestionGridType.class),
            @XmlElement(name = "QuestionGridReference", type = ReferenceType.class)
    })
    protected List<Object> questionGridOrQuestionGridReference;
    @XmlElements({
            @XmlElement(name = "QuestionBlock", type = QuestionBlockType.class),
            @XmlElement(name = "QuestionBlockReference", type = ReferenceType.class)
    })
    protected List<Object> questionBlockOrQuestionBlockReference;
    @XmlElements({
            @XmlElement(name = "QuestionGroup", type = QuestionGroupType.class),
            @XmlElement(name = "QuestionGroupReference", type = ReferenceType.class)
    })
    protected List<Object> questionGroupOrQuestionGroupReference;

    /**
     * A name for the QuestionScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the questionSchemeName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the questionSchemeName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuestionSchemeName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getQuestionSchemeName() {
        if (questionSchemeName == null) {
            questionSchemeName = new ArrayList<NameType>();
        }
        return this.questionSchemeName;
    }

    /**
     * A display label for the scheme. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the content and purpose of the QuestionScheme. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Allows for the inclusion of another QuestionScheme by reference.Gets the value of the questionSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the questionSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuestionSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeReferenceType }
     */
    public List<SchemeReferenceType> getQuestionSchemeReference() {
        if (questionSchemeReference == null) {
            questionSchemeReference = new ArrayList<SchemeReferenceType>();
        }
        return this.questionSchemeReference;
    }

    /**
     * Gets the value of the questionItemOrQuestionItemReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the questionItemOrQuestionItemReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuestionItemOrQuestionItemReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionItemType }
     * {@link ReferenceType }
     */
    public List<Object> getQuestionItemOrQuestionItemReference() {
        if (questionItemOrQuestionItemReference == null) {
            questionItemOrQuestionItemReference = new ArrayList<Object>();
        }
        return this.questionItemOrQuestionItemReference;
    }

    /**
     * Gets the value of the questionGridOrQuestionGridReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the questionGridOrQuestionGridReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuestionGridOrQuestionGridReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionGridType }
     * {@link ReferenceType }
     */
    public List<Object> getQuestionGridOrQuestionGridReference() {
        if (questionGridOrQuestionGridReference == null) {
            questionGridOrQuestionGridReference = new ArrayList<Object>();
        }
        return this.questionGridOrQuestionGridReference;
    }

    /**
     * Gets the value of the questionBlockOrQuestionBlockReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the questionBlockOrQuestionBlockReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuestionBlockOrQuestionBlockReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionBlockType }
     * {@link ReferenceType }
     */
    public List<Object> getQuestionBlockOrQuestionBlockReference() {
        if (questionBlockOrQuestionBlockReference == null) {
            questionBlockOrQuestionBlockReference = new ArrayList<Object>();
        }
        return this.questionBlockOrQuestionBlockReference;
    }

    /**
     * Gets the value of the questionGroupOrQuestionGroupReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the questionGroupOrQuestionGroupReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getQuestionGroupOrQuestionGroupReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link QuestionGroupType }
     * {@link ReferenceType }
     */
    public List<Object> getQuestionGroupOrQuestionGroupReference() {
        if (questionGroupOrQuestionGroupReference == null) {
            questionGroupOrQuestionGroupReference = new ArrayList<Object>();
        }
        return this.questionGroupOrQuestionGroupReference;
    }

}
