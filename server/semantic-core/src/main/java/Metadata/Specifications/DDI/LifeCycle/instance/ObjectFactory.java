//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.instance;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the ddi.instance package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and models
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DDIInstance_QNAME = new QName("ddi:instance:3_2", "DDIInstance");
    private final static QName _FragmentInstance_QNAME = new QName("ddi:instance:3_2", "FragmentInstance");
    private final static QName _TopLevelReference_QNAME = new QName("ddi:instance:3_2", "TopLevelReference");
    private final static QName _Fragment_QNAME = new QName("ddi:instance:3_2", "Fragment");
    private final static QName _TranslationInformation_QNAME = new QName("ddi:instance:3_2", "TranslationInformation");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.instance
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link DDIInstanceType }
     */
    public DDIInstanceType createDDIInstanceType() {
        return new DDIInstanceType();
    }

    /**
     * Create an instance of {@link FragmentInstanceType }
     */
    public FragmentInstanceType createFragmentInstanceType() {
        return new FragmentInstanceType();
    }

    /**
     * Create an instance of {@link FragmentType }
     */
    public FragmentType createFragmentType() {
        return new FragmentType();
    }

    /**
     * Create an instance of {@link TranslationType }
     */
    public TranslationType createTranslationType() {
        return new TranslationType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DDIInstanceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:instance:3_2", name = "DDIInstance")
    public JAXBElement<DDIInstanceType> createDDIInstance(DDIInstanceType value) {
        return new JAXBElement<DDIInstanceType>(_DDIInstance_QNAME, DDIInstanceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FragmentInstanceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:instance:3_2", name = "FragmentInstance")
    public JAXBElement<FragmentInstanceType> createFragmentInstance(FragmentInstanceType value) {
        return new JAXBElement<FragmentInstanceType>(_FragmentInstance_QNAME, FragmentInstanceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:instance:3_2", name = "TopLevelReference")
    public JAXBElement<ReferenceType> createTopLevelReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_TopLevelReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FragmentType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:instance:3_2", name = "Fragment")
    public JAXBElement<FragmentType> createFragment(FragmentType value) {
        return new JAXBElement<FragmentType>(_Fragment_QNAME, FragmentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TranslationType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:instance:3_2", name = "TranslationInformation")
    public JAXBElement<TranslationType> createTranslationInformation(TranslationType value) {
        return new JAXBElement<TranslationType>(_TranslationInformation_QNAME, TranslationType.class, null, value);
    }

}
