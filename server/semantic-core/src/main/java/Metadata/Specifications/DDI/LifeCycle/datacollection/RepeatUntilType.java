//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.datacollection;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CommandCodeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;


/**
 * A member of the ControlConstruct substitution group. Specifies a ControlConstruct to be repeated until a specified condition is met. Before each iteration the condition is tested. When the condition is met, control passes back to the containing control construct.
 * <p>
 * <p>Java class for RepeatUntilType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="RepeatUntilType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:datacollection:3_2}ControlConstructType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}UntilCondition" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}UntilConstructReference" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RepeatUntilType", propOrder = {
        "untilCondition",
        "untilConstructReference"
})
public class RepeatUntilType
        extends ControlConstructType {

    @XmlElement(name = "UntilCondition")
    protected CommandCodeType untilCondition;
    @XmlElement(name = "UntilConstructReference")
    protected ReferenceType untilConstructReference;

    /**
     * Information on the command used to determine whether the "Until" condition is met.
     *
     * @return possible object is
     * {@link CommandCodeType }
     */
    public CommandCodeType getUntilCondition() {
        return untilCondition;
    }

    /**
     * Sets the value of the untilCondition property.
     *
     * @param value allowed object is
     *              {@link CommandCodeType }
     */
    public void setUntilCondition(CommandCodeType value) {
        this.untilCondition = value;
    }

    /**
     * A reference to the ControlConstruct to implement until the UntilCondition is met. This could be a single ControlConstruct or a set of ControlConstructs within a Sequence.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getUntilConstructReference() {
        return untilConstructReference;
    }

    /**
     * Sets the value of the untilConstructReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setUntilConstructReference(ReferenceType value) {
        this.untilConstructReference = value;
    }

}
