//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;


/**
 * Container for a URN following the pattern designed by DDIURNType. Provides a fixed type attribute signifying that it is a URN.
 * <p>
 * <p>Java class for URNType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="URNType"&gt;
 *   &lt;simpleContent&gt;
 *     &lt;extension base="&lt;ddi:reusable:3_2&gt;DDIURNType"&gt;
 *       &lt;attribute name="type" type="{http://www.w3.org/2001/XMLSchema}string" fixed="URN" /&gt;
 *       &lt;attribute name="typeOfIdentifier" type="{ddi:reusable:3_2}DDIIDType" default="Canonical" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/simpleContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "URNType", propOrder = {
        "value"
})
public class URNType {

    @XmlValue
    protected String value;

    @XmlAttribute(name = "type")
    protected String type;

    @XmlAttribute(name = "typeOfIdentifier")
    protected DDIIDType typeOfIdentifier;

    /**
     * The DDI URN is comprised of the self identifying "urn" or "URN" and "ddi" or "DDI" followed by an agency, identifier, and version number. Note that the identifier is composed in different ways for the Canonical and Deprecated URN (all other portions are the same). The identifier in the Canonical URN is composed of the unique identifier which may be scoped to the agency or the maintainable object (urn:ddi:DDIAgencyID:BaseID:Version). In the case of being scoped to the maintainable, the identification is the ID of the Maintainable parent, followed by a dot '.', followed by the ID of the object. The identifier in the Deprecated URN is composed of the following parts separated by ':' a colon: The object type of the Maintainable Object, the ID of the Maintainable Object, and if the object is Versionable or Identifable this is followed by the Object SystemType and the Object ID.
     *
     * @return possible object is
     * {@link String }
     */
    public String getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setValue(String value) {
        this.value = value;
    }

    /**
     * Gets the value of the type property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getType() {
        if (type == null) {
            return "URN";
        } else {
            return type;
        }
    }

    /**
     * Sets the value of the type property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setType(String value) {
        this.type = value;
    }

    /**
     * Gets the value of the typeOfIdentifier property.
     *
     * @return possible object is
     * {@link DDIIDType }
     */
    public DDIIDType getTypeOfIdentifier() {
        if (typeOfIdentifier == null) {
            return DDIIDType.CANONICAL;
        } else {
            return typeOfIdentifier;
        }
    }

    /**
     * Sets the value of the typeOfIdentifier property.
     *
     * @param value allowed object is
     *              {@link DDIIDType }
     */
    public void setTypeOfIdentifier(DDIIDType value) {
        this.typeOfIdentifier = value;
    }

}
