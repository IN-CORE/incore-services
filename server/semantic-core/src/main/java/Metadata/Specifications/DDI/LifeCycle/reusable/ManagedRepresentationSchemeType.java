//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;


/**
 * This scheme contains sets of values described by ManagedRepresentation. These are used by reference to define Variable Representation and Question Response Domain. Text representations cover all non-code and non-category representations/response domains that should be treated or analyzed as characters regardless of whether the character is a number or a letter. In addition to the name, label and description of the scheme, the structure allows for the inclusion on an external scheme by reference, definitions of ManagedRepresentations in-line or by reference, and ManagedRepresentationGroups in-line or by reference.
 * <p>
 * <p>Java class for ManagedRepresentationSchemeType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ManagedRepresentationSchemeType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}MaintainableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ManagedRepresentationSchemeName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ManagedRepresentationSchemeReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedRepresentation"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedRepresentationReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedRepresentationGroup"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ManagedRepresentationGroupReference"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ManagedRepresentationSchemeType", propOrder = {
        "managedRepresentationSchemeName",
        "label",
        "description",
        "managedRepresentationSchemeReference",
        "managedRepresentationOrManagedRepresentationReference",
        "managedRepresentationGroupOrManagedRepresentationGroupReference"
})
public class ManagedRepresentationSchemeType
        extends MaintainableType {

    @XmlElement(name = "ManagedRepresentationSchemeName")
    protected List<NameType> managedRepresentationSchemeName;
    @XmlElement(name = "Label")
    protected List<LabelType> label;
    @XmlElement(name = "Description")
    protected StructuredStringType description;
    @XmlElement(name = "ManagedRepresentationSchemeReference")
    protected List<SchemeReferenceType> managedRepresentationSchemeReference;
    @XmlElementRefs({
            @XmlElementRef(name = "ManagedRepresentation", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ManagedRepresentationReference", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> managedRepresentationOrManagedRepresentationReference;
    @XmlElements({
            @XmlElement(name = "ManagedRepresentationGroup", type = ManagedRepresentationGroupType.class),
            @XmlElement(name = "ManagedRepresentationGroupReference", type = ReferenceType.class)
    })
    protected List<Object> managedRepresentationGroupOrManagedRepresentationGroupReference;

    /**
     * A name for the scheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the managedRepresentationSchemeName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the managedRepresentationSchemeName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getManagedRepresentationSchemeName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getManagedRepresentationSchemeName() {
        if (managedRepresentationSchemeName == null) {
            managedRepresentationSchemeName = new ArrayList<NameType>();
        }
        return this.managedRepresentationSchemeName;
    }

    /**
     * A display label for the scheme. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the content and purpose of the scheme. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * A reference to another ManagedRepresentationScheme to include in this scheme by reference.Gets the value of the managedRepresentationSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the managedRepresentationSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getManagedRepresentationSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeReferenceType }
     */
    public List<SchemeReferenceType> getManagedRepresentationSchemeReference() {
        if (managedRepresentationSchemeReference == null) {
            managedRepresentationSchemeReference = new ArrayList<SchemeReferenceType>();
        }
        return this.managedRepresentationSchemeReference;
    }

    /**
     * Gets the value of the managedRepresentationOrManagedRepresentationReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the managedRepresentationOrManagedRepresentationReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getManagedRepresentationOrManagedRepresentationReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link ManagedTextRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedScaleRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedDateTimeRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedNumericRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ManagedMissingValuesRepresentationType }{@code >}
     * {@link JAXBElement }{@code <}{@link VersionableType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     */
    public List<JAXBElement<?>> getManagedRepresentationOrManagedRepresentationReference() {
        if (managedRepresentationOrManagedRepresentationReference == null) {
            managedRepresentationOrManagedRepresentationReference = new ArrayList<JAXBElement<?>>();
        }
        return this.managedRepresentationOrManagedRepresentationReference;
    }

    /**
     * Gets the value of the managedRepresentationGroupOrManagedRepresentationGroupReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the managedRepresentationGroupOrManagedRepresentationGroupReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getManagedRepresentationGroupOrManagedRepresentationGroupReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ManagedRepresentationGroupType }
     * {@link ReferenceType }
     */
    public List<Object> getManagedRepresentationGroupOrManagedRepresentationGroupReference() {
        if (managedRepresentationGroupOrManagedRepresentationGroupReference == null) {
            managedRepresentationGroupOrManagedRepresentationGroupReference = new ArrayList<Object>();
        }
        return this.managedRepresentationGroupOrManagedRepresentationGroupReference;
    }

}
