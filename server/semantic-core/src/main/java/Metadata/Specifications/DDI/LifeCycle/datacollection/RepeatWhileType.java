//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.datacollection;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CommandCodeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;


/**
 * A member of the ControlConstruct substitution group. Specifies a ControlConstruct to be repeated while a specified condition is met. Before each iteration the condition is tested. When the condition is not met, control passes back to the containing control construct.
 * <p>
 * <p>Java class for RepeatWhileType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="RepeatWhileType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:datacollection:3_2}ControlConstructType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}WhileCondition" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}WhileConstructReference" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RepeatWhileType", propOrder = {
        "whileCondition",
        "whileConstructReference"
})
public class RepeatWhileType
        extends ControlConstructType {

    @XmlElement(name = "WhileCondition")
    protected CommandCodeType whileCondition;
    @XmlElement(name = "WhileConstructReference")
    protected ReferenceType whileConstructReference;

    /**
     * Information on the command used to determine whether the "While" condition is met.
     *
     * @return possible object is
     * {@link CommandCodeType }
     */
    public CommandCodeType getWhileCondition() {
        return whileCondition;
    }

    /**
     * Sets the value of the whileCondition property.
     *
     * @param value allowed object is
     *              {@link CommandCodeType }
     */
    public void setWhileCondition(CommandCodeType value) {
        this.whileCondition = value;
    }

    /**
     * A reference to the ControlConstruct to implement until the WhileCondition is met. This could be a single ControlConstruct or a set of ControlConstructs within a Sequence.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getWhileConstructReference() {
        return whileConstructReference;
    }

    /**
     * Sets the value of the whileConstructReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setWhileConstructReference(ReferenceType value) {
        this.whileConstructReference = value;
    }

}
