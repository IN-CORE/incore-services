//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Means of describing DateTime so that they can be reused by multiple variables or questions/question constructs. Regardless of the format of the data the content may be treated as a date and or time and converted to ISO standard structure if sufficient information is supplied. In addition to the name, label, and description of the representation, the structure provides the DateField Format, a DateTypeCode and a regular expression for further defining allowed content.
 * <p>
 * <p>Java class for ManagedDateTimeRepresentationType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ManagedDateTimeRepresentationType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}VersionableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ManagedDateTimeRepresentationName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}RecommendedDataType" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}GenericOutputFormat" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}DateFieldFormat" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}DateTypeCode"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="regExp" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *       &lt;attribute name="classificationLevel" type="{ddi:reusable:3_2}CategoryRelationCodeType" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ManagedDateTimeRepresentationType", propOrder = {
        "managedDateTimeRepresentationName",
        "label",
        "description",
        "recommendedDataType",
        "genericOutputFormat",
        "dateFieldFormat",
        "dateTypeCode"
})
public class ManagedDateTimeRepresentationType
        extends VersionableType {

    @XmlElement(name = "ManagedDateTimeRepresentationName")
    protected List<NameType> managedDateTimeRepresentationName;
    @XmlElement(name = "Label")
    protected List<LabelType> label;
    @XmlElement(name = "Description")
    protected StructuredStringType description;
    @XmlElement(name = "RecommendedDataType")
    protected CodeValueType recommendedDataType;
    @XmlElement(name = "GenericOutputFormat")
    protected CodeValueType genericOutputFormat;
    @XmlElement(name = "DateFieldFormat")
    protected CodeValueType dateFieldFormat;
    @XmlElement(name = "DateTypeCode", required = true)
    protected CodeValueType dateTypeCode;
    @XmlAttribute(name = "regExp")
    protected String regExp;
    @XmlAttribute(name = "classificationLevel")
    protected CategoryRelationCodeType classificationLevel;

    /**
     * A name for the representation. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the managedDateTimeRepresentationName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the managedDateTimeRepresentationName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getManagedDateTimeRepresentationName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getManagedDateTimeRepresentationName() {
        if (managedDateTimeRepresentationName == null) {
            managedDateTimeRepresentationName = new ArrayList<NameType>();
        }
        return this.managedDateTimeRepresentationName;
    }

    /**
     * A display label for the representation. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the content and purpose of the representation. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * This field provides the recommended treatment of the data within an application. The value should come from a controlled vocabulary - recommended values include the set found in W3C XML Schema Part 2, but excluding string sub-types, QNAME, and NOTATION.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getRecommendedDataType() {
        return recommendedDataType;
    }

    /**
     * Sets the value of the recommendedDataType property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setRecommendedDataType(CodeValueType value) {
        this.recommendedDataType = value;
    }

    /**
     * This field provides a recommended generic treatment of the data for display by an application. The value should come from a controlled vocabulary.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getGenericOutputFormat() {
        return genericOutputFormat;
    }

    /**
     * Sets the value of the genericOutputFormat property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setGenericOutputFormat(CodeValueType value) {
        this.genericOutputFormat = value;
    }

    /**
     * Describes the format of the date field, in formats such as YYYY/MM or MM-DD-YY, etc. If this element is omitted, then the format is assumed to be the XML Schema format corresponding to the type attribute value.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getDateFieldFormat() {
        return dateFieldFormat;
    }

    /**
     * Sets the value of the dateFieldFormat property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setDateFieldFormat(CodeValueType value) {
        this.dateFieldFormat = value;
    }

    /**
     * This is a standard XML date type code and supports the use of an external controlled vocabulary. Examples are date, dateTime, gYearMonth, gYear, and duration
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getDateTypeCode() {
        return dateTypeCode;
    }

    /**
     * Sets the value of the dateTypeCode property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setDateTypeCode(CodeValueType value) {
        this.dateTypeCode = value;
    }

    /**
     * Gets the value of the regExp property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getRegExp() {
        return regExp;
    }

    /**
     * Sets the value of the regExp property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setRegExp(String value) {
        this.regExp = value;
    }

    /**
     * Gets the value of the classificationLevel property.
     *
     * @return possible object is
     * {@link CategoryRelationCodeType }
     */
    public CategoryRelationCodeType getClassificationLevel() {
        return classificationLevel;
    }

    /**
     * Sets the value of the classificationLevel property.
     *
     * @param value allowed object is
     *              {@link CategoryRelationCodeType }
     */
    public void setClassificationLevel(CategoryRelationCodeType value) {
        this.classificationLevel = value;
    }

}
