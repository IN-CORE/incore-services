//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.physicaldataproduct;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

import Metadata.Specifications.DDI.LifeCycle.reusable.CodeValueType;
import Metadata.Specifications.DDI.LifeCycle.reusable.DelimiterType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the ddi.physicaldataproduct package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _BaseRecordLayout_QNAME = new QName("ddi:physicaldataproduct:3_2", "BaseRecordLayout");
    private final static QName _PhysicalDataProduct_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalDataProduct");
    private final static QName _PhysicalDataProductName_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalDataProductName");
    private final static QName _PhysicalStructureGroupReference_QNAME = new QName("ddi:physicaldataproduct:3_2",
                                                                                  "PhysicalStructureGroupReference");
    private final static QName _PhysicalStructureSchemeName_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalStructureSchemeName");
    private final static QName _PhysicalStructureGroupName_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalStructureGroupName");
    private final static QName _PhysicalStructureGroup_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalStructureGroup");
    private final static QName _TypeOfPhysicalStructureGroup_QNAME = new QName("ddi:physicaldataproduct:3_2",
                                                                               "TypeOfPhysicalStructureGroup");
    private final static QName _RecordLayoutSchemeName_QNAME = new QName("ddi:physicaldataproduct:3_2", "RecordLayoutSchemeName");
    private final static QName _RecordLayoutGroupReference_QNAME = new QName("ddi:physicaldataproduct:3_2", "RecordLayoutGroupReference");
    private final static QName _RecordLayoutGroupName_QNAME = new QName("ddi:physicaldataproduct:3_2", "RecordLayoutGroupName");
    private final static QName _RecordLayoutGroup_QNAME = new QName("ddi:physicaldataproduct:3_2", "RecordLayoutGroup");
    private final static QName _TypeOfRecordLayoutGroup_QNAME = new QName("ddi:physicaldataproduct:3_2", "TypeOfRecordLayoutGroup");
    private final static QName _GrossRecordStructure_QNAME = new QName("ddi:physicaldataproduct:3_2", "GrossRecordStructure");
    private final static QName _PhysicalStructureLinkReference_QNAME = new QName("ddi:physicaldataproduct:3_2",
                                                                                 "PhysicalStructureLinkReference");
    private final static QName _PhysicalStructureReference_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalStructureReference");
    private final static QName _RecordLayout_QNAME = new QName("ddi:physicaldataproduct:3_2", "RecordLayout");
    private final static QName _PhysicalStructureScheme_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalStructureScheme");
    private final static QName _PhysicalStructure_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalStructure");
    private final static QName _RecordLayoutScheme_QNAME = new QName("ddi:physicaldataproduct:3_2", "RecordLayoutScheme");
    private final static QName _DataItem_QNAME = new QName("ddi:physicaldataproduct:3_2", "DataItem");
    private final static QName _PhysicalLocation_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalLocation");
    private final static QName _DecimalSeparator_QNAME = new QName("ddi:physicaldataproduct:3_2", "DecimalSeparator");
    private final static QName _DigitGroupSeparator_QNAME = new QName("ddi:physicaldataproduct:3_2", "DigitGroupSeparator");
    private final static QName _PhysicalRecordSegment_QNAME = new QName("ddi:physicaldataproduct:3_2", "PhysicalRecordSegment");
    private final static QName _KeyVariableReference_QNAME = new QName("ddi:physicaldataproduct:3_2", "KeyVariableReference");
    private final static QName _LogicalRecordReference_QNAME = new QName("ddi:physicaldataproduct:3_2", "LogicalRecordReference");
    private final static QName _FileFormat_QNAME = new QName("ddi:physicaldataproduct:3_2", "FileFormat");
    private final static QName _Delimiter_QNAME = new QName("ddi:physicaldataproduct:3_2", "Delimiter");
    private final static QName _EndOfLineMarker_QNAME = new QName("ddi:physicaldataproduct:3_2", "EndOfLineMarker");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.physicaldataproduct
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link PhysicalDataProductType }
     */
    public PhysicalDataProductType createPhysicalDataProductType() {
        return new PhysicalDataProductType();
    }

    /**
     * Create an instance of {@link PhysicalStructureGroupType }
     */
    public PhysicalStructureGroupType createPhysicalStructureGroupType() {
        return new PhysicalStructureGroupType();
    }

    /**
     * Create an instance of {@link RecordLayoutGroupType }
     */
    public RecordLayoutGroupType createRecordLayoutGroupType() {
        return new RecordLayoutGroupType();
    }

    /**
     * Create an instance of {@link GrossRecordStructureType }
     */
    public GrossRecordStructureType createGrossRecordStructureType() {
        return new GrossRecordStructureType();
    }

    /**
     * Create an instance of {@link PhysicalStructureLinkReferenceType }
     */
    public PhysicalStructureLinkReferenceType createPhysicalStructureLinkReferenceType() {
        return new PhysicalStructureLinkReferenceType();
    }

    /**
     * Create an instance of {@link RecordLayoutType }
     */
    public RecordLayoutType createRecordLayoutType() {
        return new RecordLayoutType();
    }

    /**
     * Create an instance of {@link PhysicalStructureSchemeType }
     */
    public PhysicalStructureSchemeType createPhysicalStructureSchemeType() {
        return new PhysicalStructureSchemeType();
    }

    /**
     * Create an instance of {@link PhysicalStructureType }
     */
    public PhysicalStructureType createPhysicalStructureType() {
        return new PhysicalStructureType();
    }

    /**
     * Create an instance of {@link RecordLayoutSchemeType }
     */
    public RecordLayoutSchemeType createRecordLayoutSchemeType() {
        return new RecordLayoutSchemeType();
    }

    /**
     * Create an instance of {@link DataItemType }
     */
    public DataItemType createDataItemType() {
        return new DataItemType();
    }

    /**
     * Create an instance of {@link PhysicalLocationType }
     */
    public PhysicalLocationType createPhysicalLocationType() {
        return new PhysicalLocationType();
    }

    /**
     * Create an instance of {@link PhysicalRecordSegmentType }
     */
    public PhysicalRecordSegmentType createPhysicalRecordSegmentType() {
        return new PhysicalRecordSegmentType();
    }

    /**
     * Create an instance of {@link KeyVariableReferenceType }
     */
    public KeyVariableReferenceType createKeyVariableReferenceType() {
        return new KeyVariableReferenceType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseRecordLayoutType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "BaseRecordLayout")
    public JAXBElement<BaseRecordLayoutType> createBaseRecordLayout(BaseRecordLayoutType value) {
        return new JAXBElement<BaseRecordLayoutType>(_BaseRecordLayout_QNAME, BaseRecordLayoutType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PhysicalDataProductType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalDataProduct")
    public JAXBElement<PhysicalDataProductType> createPhysicalDataProduct(PhysicalDataProductType value) {
        return new JAXBElement<PhysicalDataProductType>(_PhysicalDataProduct_QNAME, PhysicalDataProductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalDataProductName")
    public JAXBElement<NameType> createPhysicalDataProductName(NameType value) {
        return new JAXBElement<NameType>(_PhysicalDataProductName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalStructureGroupReference")
    public JAXBElement<ReferenceType> createPhysicalStructureGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_PhysicalStructureGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalStructureSchemeName")
    public JAXBElement<NameType> createPhysicalStructureSchemeName(NameType value) {
        return new JAXBElement<NameType>(_PhysicalStructureSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalStructureGroupName")
    public JAXBElement<NameType> createPhysicalStructureGroupName(NameType value) {
        return new JAXBElement<NameType>(_PhysicalStructureGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PhysicalStructureGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalStructureGroup")
    public JAXBElement<PhysicalStructureGroupType> createPhysicalStructureGroup(PhysicalStructureGroupType value) {
        return new JAXBElement<PhysicalStructureGroupType>(_PhysicalStructureGroup_QNAME, PhysicalStructureGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "TypeOfPhysicalStructureGroup")
    public JAXBElement<CodeValueType> createTypeOfPhysicalStructureGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfPhysicalStructureGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "RecordLayoutSchemeName")
    public JAXBElement<NameType> createRecordLayoutSchemeName(NameType value) {
        return new JAXBElement<NameType>(_RecordLayoutSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "RecordLayoutGroupReference")
    public JAXBElement<ReferenceType> createRecordLayoutGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_RecordLayoutGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "RecordLayoutGroupName")
    public JAXBElement<NameType> createRecordLayoutGroupName(NameType value) {
        return new JAXBElement<NameType>(_RecordLayoutGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RecordLayoutGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "RecordLayoutGroup")
    public JAXBElement<RecordLayoutGroupType> createRecordLayoutGroup(RecordLayoutGroupType value) {
        return new JAXBElement<RecordLayoutGroupType>(_RecordLayoutGroup_QNAME, RecordLayoutGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "TypeOfRecordLayoutGroup")
    public JAXBElement<CodeValueType> createTypeOfRecordLayoutGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfRecordLayoutGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GrossRecordStructureType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "GrossRecordStructure")
    public JAXBElement<GrossRecordStructureType> createGrossRecordStructure(GrossRecordStructureType value) {
        return new JAXBElement<GrossRecordStructureType>(_GrossRecordStructure_QNAME, GrossRecordStructureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PhysicalStructureLinkReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalStructureLinkReference")
    public JAXBElement<PhysicalStructureLinkReferenceType> createPhysicalStructureLinkReference(PhysicalStructureLinkReferenceType value) {
        return new JAXBElement<PhysicalStructureLinkReferenceType>(_PhysicalStructureLinkReference_QNAME,
                                                                   PhysicalStructureLinkReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalStructureReference")
    public JAXBElement<ReferenceType> createPhysicalStructureReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_PhysicalStructureReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RecordLayoutType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "RecordLayout", substitutionHeadNamespace = "ddi:physicaldataproduct:3_2", substitutionHeadName = "BaseRecordLayout")
    public JAXBElement<RecordLayoutType> createRecordLayout(RecordLayoutType value) {
        return new JAXBElement<RecordLayoutType>(_RecordLayout_QNAME, RecordLayoutType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PhysicalStructureSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalStructureScheme")
    public JAXBElement<PhysicalStructureSchemeType> createPhysicalStructureScheme(PhysicalStructureSchemeType value) {
        return new JAXBElement<PhysicalStructureSchemeType>(_PhysicalStructureScheme_QNAME, PhysicalStructureSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PhysicalStructureType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalStructure")
    public JAXBElement<PhysicalStructureType> createPhysicalStructure(PhysicalStructureType value) {
        return new JAXBElement<PhysicalStructureType>(_PhysicalStructure_QNAME, PhysicalStructureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RecordLayoutSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "RecordLayoutScheme")
    public JAXBElement<RecordLayoutSchemeType> createRecordLayoutScheme(RecordLayoutSchemeType value) {
        return new JAXBElement<RecordLayoutSchemeType>(_RecordLayoutScheme_QNAME, RecordLayoutSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataItemType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "DataItem")
    public JAXBElement<DataItemType> createDataItem(DataItemType value) {
        return new JAXBElement<DataItemType>(_DataItem_QNAME, DataItemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PhysicalLocationType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalLocation")
    public JAXBElement<PhysicalLocationType> createPhysicalLocation(PhysicalLocationType value) {
        return new JAXBElement<PhysicalLocationType>(_PhysicalLocation_QNAME, PhysicalLocationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "DecimalSeparator")
    public JAXBElement<String> createDecimalSeparator(String value) {
        return new JAXBElement<String>(_DecimalSeparator_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "DigitGroupSeparator")
    public JAXBElement<String> createDigitGroupSeparator(String value) {
        return new JAXBElement<String>(_DigitGroupSeparator_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PhysicalRecordSegmentType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "PhysicalRecordSegment")
    public JAXBElement<PhysicalRecordSegmentType> createPhysicalRecordSegment(PhysicalRecordSegmentType value) {
        return new JAXBElement<PhysicalRecordSegmentType>(_PhysicalRecordSegment_QNAME, PhysicalRecordSegmentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link KeyVariableReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "KeyVariableReference")
    public JAXBElement<KeyVariableReferenceType> createKeyVariableReference(KeyVariableReferenceType value) {
        return new JAXBElement<KeyVariableReferenceType>(_KeyVariableReference_QNAME, KeyVariableReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "LogicalRecordReference")
    public JAXBElement<ReferenceType> createLogicalRecordReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_LogicalRecordReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "FileFormat")
    public JAXBElement<CodeValueType> createFileFormat(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_FileFormat_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DelimiterType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "Delimiter")
    public JAXBElement<DelimiterType> createDelimiter(DelimiterType value) {
        return new JAXBElement<DelimiterType>(_Delimiter_QNAME, DelimiterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct:3_2", name = "EndOfLineMarker")
    public JAXBElement<CodeValueType> createEndOfLineMarker(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_EndOfLineMarker_QNAME, CodeValueType.class, null, value);
    }

}
