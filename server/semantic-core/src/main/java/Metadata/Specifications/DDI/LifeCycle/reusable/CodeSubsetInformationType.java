//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Allows further specification of the codes to use from the CodeList by defining the level or only the most discrete codes of a hierarchical CodeList, the range of codes to use, or an itemized sub-set.
 * <p>
 * <p>Java class for CodeSubsetInformationType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="CodeSubsetInformationType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="IncludedLevel" type="{http://www.w3.org/2001/XMLSchema}integer" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}IncludedCode" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}DataExistence" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CodeSubsetInformationType", propOrder = {
        "includedLevel",
        "includedCode",
        "dataExistence"
})
public class CodeSubsetInformationType {

    @XmlElement(name = "IncludedLevel")
    protected List<BigInteger> includedLevel;
    @XmlElement(name = "IncludedCode")
    protected IncludedCodeType includedCode;
    @XmlElement(name = "DataExistence")
    protected DataExistenceType dataExistence;

    /**
     * Gets the value of the includedLevel property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the includedLevel property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIncludedLevel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link BigInteger }
     */
    public List<BigInteger> getIncludedLevel() {
        if (includedLevel == null) {
            includedLevel = new ArrayList<BigInteger>();
        }
        return this.includedLevel;
    }

    /**
     * Specifies the codes to include in the representation.
     *
     * @return possible object is
     * {@link IncludedCodeType }
     */
    public IncludedCodeType getIncludedCode() {
        return includedCode;
    }

    /**
     * Sets the value of the includedCode property.
     *
     * @param value allowed object is
     *              {@link IncludedCodeType }
     */
    public void setIncludedCode(IncludedCodeType value) {
        this.includedCode = value;
    }

    /**
     * Use when only the lowest, most discrete codes in the CodeList will be expressed as valid values. Identifies those levels of a CodeList with a regular hierarchy or those indicates discrete codes within an irregular hierarchy. All other codes will be used as labels within the hierarchy to clearly express content, but will not be valid as a response or representation value.
     *
     * @return possible object is
     * {@link DataExistenceType }
     */
    public DataExistenceType getDataExistence() {
        return dataExistence;
    }

    /**
     * Sets the value of the dataExistence property.
     *
     * @param value allowed object is
     *              {@link DataExistenceType }
     */
    public void setDataExistence(DataExistenceType value) {
        this.dataExistence = value;
    }

}
