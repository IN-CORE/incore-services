//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.conceptualcomponent;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

import Metadata.Specifications.DDI.LifeCycle.reusable.CodeValueType;
import Metadata.Specifications.DDI.LifeCycle.reusable.CommandCodeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.InternationalStringType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the ddi.conceptualcomponent package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _ConceptualComponent_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptualComponent");
    private final static QName _ConceptualComponentModuleName_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                                "ConceptualComponentModuleName");
    private final static QName _ConceptSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptSchemeName");
    private final static QName _UniverseSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_2", "UniverseSchemeName");
    private final static QName _UniverseGroupReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "UniverseGroupReference");
    private final static QName _GroupingUniverseReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "GroupingUniverseReference");
    private final static QName _GroupingConceptReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "GroupingConceptReference");
    private final static QName _UniverseGroup_QNAME = new QName("ddi:conceptualcomponent:3_2", "UniverseGroup");
    private final static QName _UniverseGroupName_QNAME = new QName("ddi:conceptualcomponent:3_2", "UniverseGroupName");
    private final static QName _TypeOfUniverseGroup_QNAME = new QName("ddi:conceptualcomponent:3_2", "TypeOfUniverseGroup");
    private final static QName _ConceptGroupName_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptGroupName");
    private final static QName _ConceptGroupReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptGroupReference");
    private final static QName _TypeOfConceptGroup_QNAME = new QName("ddi:conceptualcomponent:3_2", "TypeOfConceptGroup");
    private final static QName _DefiningConceptReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "DefiningConceptReference");
    private final static QName _Concept_QNAME = new QName("ddi:conceptualcomponent:3_2", "Concept");
    private final static QName _SubclassOfReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "SubclassOfReference");
    private final static QName _ConceptName_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptName");
    private final static QName _ConceptualVariableName_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptualVariableName");
    private final static QName _ConceptualVariableSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                               "ConceptualVariableSchemeName");
    private final static QName _ConceptualVariableGroupReference_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                                   "ConceptualVariableGroupReference");
    private final static QName _ConceptualVariableGroup_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptualVariableGroup");
    private final static QName _ConceptualVariableGroupName_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptualVariableGroupName");
    private final static QName _TypeOfConceptualVariableGroup_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                                "TypeOfConceptualVariableGroup");
    private final static QName _ConceptualVariableScheme_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptualVariableScheme");
    private final static QName _CharacteristicReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "CharacteristicReference");
    private final static QName _ConceptualVariable_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptualVariable");
    private final static QName _SimilarConceptReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "SimilarConceptReference");
    private final static QName _UniverseName_QNAME = new QName("ddi:conceptualcomponent:3_2", "UniverseName");
    private final static QName _SubUniverseClass_QNAME = new QName("ddi:conceptualcomponent:3_2", "SubUniverseClass");
    private final static QName _SubUniverseClassReference_QNAME = new QName("ddi:conceptualcomponent:3_2", "SubUniverseClassReference");
    private final static QName _SubUniverseClassName_QNAME = new QName("ddi:conceptualcomponent:3_2", "SubUniverseClassName");
    private final static QName _GeographicStructureSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                                "GeographicStructureSchemeName");
    private final static QName _GeographicStructureGroupReference_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                                    "GeographicStructureGroupReference");
    private final static QName _GeographicStructureGroup_QNAME = new QName("ddi:conceptualcomponent:3_2", "GeographicStructureGroup");
    private final static QName _GeographicStructureGroupName_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                               "GeographicStructureGroupName");
    private final static QName _TypeOfGeographicStructureGroup_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                                 "TypeOfGeographicStructureGroup");
    private final static QName _GeographicLocationSchemeName_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                               "GeographicLocationSchemeName");
    private final static QName _GeographicLocationGroupReference_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                                   "GeographicLocationGroupReference");
    private final static QName _GeographicLocationGroup_QNAME = new QName("ddi:conceptualcomponent:3_2", "GeographicLocationGroup");
    private final static QName _GeographicLocationGroupName_QNAME = new QName("ddi:conceptualcomponent:3_2", "GeographicLocationGroupName");
    private final static QName _TypeOfGeographicLocationGroup_QNAME = new QName("ddi:conceptualcomponent:3_2",
                                                                                "TypeOfGeographicLocationGroup");
    private final static QName _VocabularyTitle_QNAME = new QName("ddi:conceptualcomponent:3_2", "VocabularyTitle");
    private final static QName _ConceptScheme_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptScheme");
    private final static QName _UniverseScheme_QNAME = new QName("ddi:conceptualcomponent:3_2", "UniverseScheme");
    private final static QName _Universe_QNAME = new QName("ddi:conceptualcomponent:3_2", "Universe");
    private final static QName _UniverseGenerationCode_QNAME = new QName("ddi:conceptualcomponent:3_2", "UniverseGenerationCode");
    private final static QName _Vocabulary_QNAME = new QName("ddi:conceptualcomponent:3_2", "Vocabulary");
    private final static QName _ConceptGroup_QNAME = new QName("ddi:conceptualcomponent:3_2", "ConceptGroup");
    private final static QName _Comments_QNAME = new QName("ddi:conceptualcomponent:3_2", "Comments");
    private final static QName _SimilarConcept_QNAME = new QName("ddi:conceptualcomponent:3_2", "SimilarConcept");
    private final static QName _GeographicStructureScheme_QNAME = new QName("ddi:conceptualcomponent:3_2", "GeographicStructureScheme");
    private final static QName _GeographicLocationScheme_QNAME = new QName("ddi:conceptualcomponent:3_2", "GeographicLocationScheme");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.conceptualcomponent
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ConceptualComponentType }
     */
    public ConceptualComponentType createConceptualComponentType() {
        return new ConceptualComponentType();
    }

    /**
     * Create an instance of {@link UniverseGroupType }
     */
    public UniverseGroupType createUniverseGroupType() {
        return new UniverseGroupType();
    }

    /**
     * Create an instance of {@link ConceptType }
     */
    public ConceptType createConceptType() {
        return new ConceptType();
    }

    /**
     * Create an instance of {@link ConceptualVariableGroupType }
     */
    public ConceptualVariableGroupType createConceptualVariableGroupType() {
        return new ConceptualVariableGroupType();
    }

    /**
     * Create an instance of {@link ConceptualVariableSchemeType }
     */
    public ConceptualVariableSchemeType createConceptualVariableSchemeType() {
        return new ConceptualVariableSchemeType();
    }

    /**
     * Create an instance of {@link ConceptualVariableType }
     */
    public ConceptualVariableType createConceptualVariableType() {
        return new ConceptualVariableType();
    }

    /**
     * Create an instance of {@link SubUniverseClassType }
     */
    public SubUniverseClassType createSubUniverseClassType() {
        return new SubUniverseClassType();
    }

    /**
     * Create an instance of {@link GeographicStructureGroupType }
     */
    public GeographicStructureGroupType createGeographicStructureGroupType() {
        return new GeographicStructureGroupType();
    }

    /**
     * Create an instance of {@link GeographicLocationGroupType }
     */
    public GeographicLocationGroupType createGeographicLocationGroupType() {
        return new GeographicLocationGroupType();
    }

    /**
     * Create an instance of {@link ConceptSchemeType }
     */
    public ConceptSchemeType createConceptSchemeType() {
        return new ConceptSchemeType();
    }

    /**
     * Create an instance of {@link UniverseSchemeType }
     */
    public UniverseSchemeType createUniverseSchemeType() {
        return new UniverseSchemeType();
    }

    /**
     * Create an instance of {@link UniverseType }
     */
    public UniverseType createUniverseType() {
        return new UniverseType();
    }

    /**
     * Create an instance of {@link VocabularyType }
     */
    public VocabularyType createVocabularyType() {
        return new VocabularyType();
    }

    /**
     * Create an instance of {@link ConceptGroupType }
     */
    public ConceptGroupType createConceptGroupType() {
        return new ConceptGroupType();
    }

    /**
     * Create an instance of {@link SimilarConceptType }
     */
    public SimilarConceptType createSimilarConceptType() {
        return new SimilarConceptType();
    }

    /**
     * Create an instance of {@link GeographicStructureSchemeType }
     */
    public GeographicStructureSchemeType createGeographicStructureSchemeType() {
        return new GeographicStructureSchemeType();
    }

    /**
     * Create an instance of {@link GeographicLocationSchemeType }
     */
    public GeographicLocationSchemeType createGeographicLocationSchemeType() {
        return new GeographicLocationSchemeType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptualComponentType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualComponent")
    public JAXBElement<ConceptualComponentType> createConceptualComponent(ConceptualComponentType value) {
        return new JAXBElement<ConceptualComponentType>(_ConceptualComponent_QNAME, ConceptualComponentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualComponentModuleName")
    public JAXBElement<NameType> createConceptualComponentModuleName(NameType value) {
        return new JAXBElement<NameType>(_ConceptualComponentModuleName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptSchemeName")
    public JAXBElement<NameType> createConceptSchemeName(NameType value) {
        return new JAXBElement<NameType>(_ConceptSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "UniverseSchemeName")
    public JAXBElement<NameType> createUniverseSchemeName(NameType value) {
        return new JAXBElement<NameType>(_UniverseSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "UniverseGroupReference")
    public JAXBElement<ReferenceType> createUniverseGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_UniverseGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GroupingUniverseReference")
    public JAXBElement<ReferenceType> createGroupingUniverseReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_GroupingUniverseReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GroupingConceptReference")
    public JAXBElement<ReferenceType> createGroupingConceptReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_GroupingConceptReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UniverseGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "UniverseGroup")
    public JAXBElement<UniverseGroupType> createUniverseGroup(UniverseGroupType value) {
        return new JAXBElement<UniverseGroupType>(_UniverseGroup_QNAME, UniverseGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "UniverseGroupName")
    public JAXBElement<NameType> createUniverseGroupName(NameType value) {
        return new JAXBElement<NameType>(_UniverseGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "TypeOfUniverseGroup")
    public JAXBElement<CodeValueType> createTypeOfUniverseGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfUniverseGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptGroupName")
    public JAXBElement<NameType> createConceptGroupName(NameType value) {
        return new JAXBElement<NameType>(_ConceptGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptGroupReference")
    public JAXBElement<ReferenceType> createConceptGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ConceptGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "TypeOfConceptGroup")
    public JAXBElement<CodeValueType> createTypeOfConceptGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfConceptGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "DefiningConceptReference")
    public JAXBElement<ReferenceType> createDefiningConceptReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_DefiningConceptReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "Concept")
    public JAXBElement<ConceptType> createConcept(ConceptType value) {
        return new JAXBElement<ConceptType>(_Concept_QNAME, ConceptType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "SubclassOfReference")
    public JAXBElement<ReferenceType> createSubclassOfReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_SubclassOfReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptName")
    public JAXBElement<NameType> createConceptName(NameType value) {
        return new JAXBElement<NameType>(_ConceptName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualVariableName")
    public JAXBElement<NameType> createConceptualVariableName(NameType value) {
        return new JAXBElement<NameType>(_ConceptualVariableName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualVariableSchemeName")
    public JAXBElement<NameType> createConceptualVariableSchemeName(NameType value) {
        return new JAXBElement<NameType>(_ConceptualVariableSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualVariableGroupReference")
    public JAXBElement<ReferenceType> createConceptualVariableGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ConceptualVariableGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptualVariableGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualVariableGroup")
    public JAXBElement<ConceptualVariableGroupType> createConceptualVariableGroup(ConceptualVariableGroupType value) {
        return new JAXBElement<ConceptualVariableGroupType>(_ConceptualVariableGroup_QNAME, ConceptualVariableGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualVariableGroupName")
    public JAXBElement<NameType> createConceptualVariableGroupName(NameType value) {
        return new JAXBElement<NameType>(_ConceptualVariableGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "TypeOfConceptualVariableGroup")
    public JAXBElement<CodeValueType> createTypeOfConceptualVariableGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfConceptualVariableGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptualVariableSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualVariableScheme")
    public JAXBElement<ConceptualVariableSchemeType> createConceptualVariableScheme(ConceptualVariableSchemeType value) {
        return new JAXBElement<ConceptualVariableSchemeType>(_ConceptualVariableScheme_QNAME, ConceptualVariableSchemeType.class, null,
                                                             value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "CharacteristicReference")
    public JAXBElement<ReferenceType> createCharacteristicReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_CharacteristicReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptualVariableType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptualVariable")
    public JAXBElement<ConceptualVariableType> createConceptualVariable(ConceptualVariableType value) {
        return new JAXBElement<ConceptualVariableType>(_ConceptualVariable_QNAME, ConceptualVariableType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "SimilarConceptReference")
    public JAXBElement<ReferenceType> createSimilarConceptReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_SimilarConceptReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "UniverseName")
    public JAXBElement<NameType> createUniverseName(NameType value) {
        return new JAXBElement<NameType>(_UniverseName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubUniverseClassType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "SubUniverseClass")
    public JAXBElement<SubUniverseClassType> createSubUniverseClass(SubUniverseClassType value) {
        return new JAXBElement<SubUniverseClassType>(_SubUniverseClass_QNAME, SubUniverseClassType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "SubUniverseClassReference")
    public JAXBElement<ReferenceType> createSubUniverseClassReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_SubUniverseClassReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "SubUniverseClassName")
    public JAXBElement<NameType> createSubUniverseClassName(NameType value) {
        return new JAXBElement<NameType>(_SubUniverseClassName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicStructureSchemeName")
    public JAXBElement<NameType> createGeographicStructureSchemeName(NameType value) {
        return new JAXBElement<NameType>(_GeographicStructureSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicStructureGroupReference")
    public JAXBElement<ReferenceType> createGeographicStructureGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_GeographicStructureGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeographicStructureGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicStructureGroup")
    public JAXBElement<GeographicStructureGroupType> createGeographicStructureGroup(GeographicStructureGroupType value) {
        return new JAXBElement<GeographicStructureGroupType>(_GeographicStructureGroup_QNAME, GeographicStructureGroupType.class, null,
                                                             value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicStructureGroupName")
    public JAXBElement<NameType> createGeographicStructureGroupName(NameType value) {
        return new JAXBElement<NameType>(_GeographicStructureGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "TypeOfGeographicStructureGroup")
    public JAXBElement<CodeValueType> createTypeOfGeographicStructureGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfGeographicStructureGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicLocationSchemeName")
    public JAXBElement<NameType> createGeographicLocationSchemeName(NameType value) {
        return new JAXBElement<NameType>(_GeographicLocationSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicLocationGroupReference")
    public JAXBElement<ReferenceType> createGeographicLocationGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_GeographicLocationGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeographicLocationGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicLocationGroup")
    public JAXBElement<GeographicLocationGroupType> createGeographicLocationGroup(GeographicLocationGroupType value) {
        return new JAXBElement<GeographicLocationGroupType>(_GeographicLocationGroup_QNAME, GeographicLocationGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicLocationGroupName")
    public JAXBElement<NameType> createGeographicLocationGroupName(NameType value) {
        return new JAXBElement<NameType>(_GeographicLocationGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "TypeOfGeographicLocationGroup")
    public JAXBElement<CodeValueType> createTypeOfGeographicLocationGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfGeographicLocationGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InternationalStringType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "VocabularyTitle")
    public JAXBElement<InternationalStringType> createVocabularyTitle(InternationalStringType value) {
        return new JAXBElement<InternationalStringType>(_VocabularyTitle_QNAME, InternationalStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptScheme")
    public JAXBElement<ConceptSchemeType> createConceptScheme(ConceptSchemeType value) {
        return new JAXBElement<ConceptSchemeType>(_ConceptScheme_QNAME, ConceptSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UniverseSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "UniverseScheme")
    public JAXBElement<UniverseSchemeType> createUniverseScheme(UniverseSchemeType value) {
        return new JAXBElement<UniverseSchemeType>(_UniverseScheme_QNAME, UniverseSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UniverseType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "Universe")
    public JAXBElement<UniverseType> createUniverse(UniverseType value) {
        return new JAXBElement<UniverseType>(_Universe_QNAME, UniverseType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommandCodeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "UniverseGenerationCode")
    public JAXBElement<CommandCodeType> createUniverseGenerationCode(CommandCodeType value) {
        return new JAXBElement<CommandCodeType>(_UniverseGenerationCode_QNAME, CommandCodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VocabularyType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "Vocabulary")
    public JAXBElement<VocabularyType> createVocabulary(VocabularyType value) {
        return new JAXBElement<VocabularyType>(_Vocabulary_QNAME, VocabularyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConceptGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "ConceptGroup")
    public JAXBElement<ConceptGroupType> createConceptGroup(ConceptGroupType value) {
        return new JAXBElement<ConceptGroupType>(_ConceptGroup_QNAME, ConceptGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuredStringType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "Comments")
    public JAXBElement<StructuredStringType> createComments(StructuredStringType value) {
        return new JAXBElement<StructuredStringType>(_Comments_QNAME, StructuredStringType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SimilarConceptType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "SimilarConcept")
    public JAXBElement<SimilarConceptType> createSimilarConcept(SimilarConceptType value) {
        return new JAXBElement<SimilarConceptType>(_SimilarConcept_QNAME, SimilarConceptType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeographicStructureSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicStructureScheme")
    public JAXBElement<GeographicStructureSchemeType> createGeographicStructureScheme(GeographicStructureSchemeType value) {
        return new JAXBElement<GeographicStructureSchemeType>(_GeographicStructureScheme_QNAME, GeographicStructureSchemeType.class, null,
                                                              value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GeographicLocationSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:conceptualcomponent:3_2", name = "GeographicLocationScheme")
    public JAXBElement<GeographicLocationSchemeType> createGeographicLocationScheme(GeographicLocationSchemeType value) {
        return new JAXBElement<GeographicLocationSchemeType>(_GeographicLocationScheme_QNAME, GeographicLocationSchemeType.class, null,
                                                             value);
    }

}
