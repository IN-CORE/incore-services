//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.dataset;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.BaseRecordLayoutType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SchemeReferenceType;


/**
 * DataSet is a substitution for a BaseRecordLayout and allows for in-line inclusion of micro or unit level data in the metadata file. This is valuable for small datasets or cases where there is a need to combine the metadata and data within a single file. In addition to the PhysicalStructureReference the DataSet indicates the ArrayBase if applicable, a name for the DataSet, a reference to the default Variable Scheme used by the data set, a reference to an Identifying Variable (e.g. case number), and a choice of organization order for the data: Record Set, Item Set, or Variable Set. RecordSet describes records of data which contain the same variables in the same order, ItemSet describes individual items of a dataset in any order. VariableSet describes the values for a given variable in record order.
 * <p>
 * <p>Java class for DataSetType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="DataSetType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:physicaldataproduct:3_2}BaseRecordLayoutType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ArrayBase" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:dataset:3_2}DataSetName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:dataset:3_2}IdentifyingVariableReference" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}DefaultVariableSchemeReference" minOccurs="0"/&gt;
 *         &lt;choice minOccurs="0"&gt;
 *           &lt;element ref="{ddi:dataset:3_2}RecordSet"/&gt;
 *           &lt;element ref="{ddi:dataset:3_2}ItemSet"/&gt;
 *           &lt;element ref="{ddi:dataset:3_2}VariableSet"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DataSetType", propOrder = {
        "arrayBase",
        "dataSetName",
        "identifyingVariableReference",
        "defaultVariableSchemeReference",
        "recordSet",
        "itemSet",
        "variableSet"
})
public class DataSetType
        extends BaseRecordLayoutType {

    @XmlElement(name = "ArrayBase", namespace = "ddi:reusable:3_2")
    protected BigInteger arrayBase;
    @XmlElement(name = "DataSetName")
    protected List<NameType> dataSetName;
    @XmlElement(name = "IdentifyingVariableReference")
    protected ReferenceType identifyingVariableReference;
    @XmlElement(name = "DefaultVariableSchemeReference", namespace = "ddi:reusable:3_2")
    protected SchemeReferenceType defaultVariableSchemeReference;
    @XmlElement(name = "RecordSet")
    protected RecordSetType recordSet;
    @XmlElement(name = "ItemSet")
    protected ItemSetType itemSet;
    @XmlElement(name = "VariableSet")
    protected VariableSetType variableSet;

    /**
     * Sets the array base for any arrays used in the definition (that is, whether the first value is in position 0 or 1, etc.).
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getArrayBase() {
        return arrayBase;
    }

    /**
     * Sets the value of the arrayBase property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setArrayBase(BigInteger value) {
        this.arrayBase = value;
    }

    /**
     * A name for the data set. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the dataSetName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataSetName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataSetName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getDataSetName() {
        if (dataSetName == null) {
            dataSetName = new ArrayList<NameType>();
        }
        return this.dataSetName;
    }

    /**
     * Reference to the variable used to identify a specific record within the data set (unique identifier or key).
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getIdentifyingVariableReference() {
        return identifyingVariableReference;
    }

    /**
     * Sets the value of the identifyingVariableReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setIdentifyingVariableReference(ReferenceType value) {
        this.identifyingVariableReference = value;
    }

    /**
     * A reference to the Variable Scheme containing all or a majority of the variables in the data set. May be overridden by an individual VariableReference.
     *
     * @return possible object is
     * {@link SchemeReferenceType }
     */
    public SchemeReferenceType getDefaultVariableSchemeReference() {
        return defaultVariableSchemeReference;
    }

    /**
     * Sets the value of the defaultVariableSchemeReference property.
     *
     * @param value allowed object is
     *              {@link SchemeReferenceType }
     */
    public void setDefaultVariableSchemeReference(SchemeReferenceType value) {
        this.defaultVariableSchemeReference = value;
    }

    /**
     * Storage format arranged record by record. A RecordSet requires a list of variables to appear in a specified order.
     *
     * @return possible object is
     * {@link RecordSetType }
     */
    public RecordSetType getRecordSet() {
        return recordSet;
    }

    /**
     * Sets the value of the recordSet property.
     *
     * @param value allowed object is
     *              {@link RecordSetType }
     */
    public void setRecordSet(RecordSetType value) {
        this.recordSet = value;
    }

    /**
     * Storage format for random order item variables. Each ItemValue references it's defining variable, it's record identifier, and the it's value.
     *
     * @return possible object is
     * {@link ItemSetType }
     */
    public ItemSetType getItemSet() {
        return itemSet;
    }

    /**
     * Sets the value of the itemSet property.
     *
     * @param value allowed object is
     *              {@link ItemSetType }
     */
    public void setItemSet(ItemSetType value) {
        this.itemSet = value;
    }

    /**
     * Storage format arranged variable by variable. Item values are listed in record order with the assumption that each record will occupy the position in each array.
     *
     * @return possible object is
     * {@link VariableSetType }
     */
    public VariableSetType getVariableSet() {
        return variableSet;
    }

    /**
     * Sets the value of the variableSet property.
     *
     * @param value allowed object is
     *              {@link VariableSetType }
     */
    public void setVariableSet(VariableSetType value) {
        this.variableSet = value;
    }

}
