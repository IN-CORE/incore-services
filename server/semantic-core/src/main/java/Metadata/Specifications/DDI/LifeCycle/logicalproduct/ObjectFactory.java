//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.logicalproduct;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

import Metadata.Specifications.DDI.LifeCycle.reusable.CategoryRelationCodeType;
import Metadata.Specifications.DDI.LifeCycle.reusable.CodeValueType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the ddi.logicalproduct package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and models
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _BaseLogicalProduct_QNAME = new QName("ddi:logicalproduct:3_2", "BaseLogicalProduct");
    private final static QName _LogicalProductName_QNAME = new QName("ddi:logicalproduct:3_2", "LogicalProductName");
    private final static QName _LogicalProduct_QNAME = new QName("ddi:logicalproduct:3_2", "LogicalProduct");
    private final static QName _CategoryGroupReference_QNAME = new QName("ddi:logicalproduct:3_2", "CategoryGroupReference");
    private final static QName _CategorySchemeName_QNAME = new QName("ddi:logicalproduct:3_2", "CategorySchemeName");
    private final static QName _DefiningCategoryReference_QNAME = new QName("ddi:logicalproduct:3_2", "DefiningCategoryReference");
    private final static QName _TypeOfCategoryGroup_QNAME = new QName("ddi:logicalproduct:3_2", "TypeOfCategoryGroup");
    private final static QName _CategoryGroupName_QNAME = new QName("ddi:logicalproduct:3_2", "CategoryGroupName");
    private final static QName _CategoryName_QNAME = new QName("ddi:logicalproduct:3_2", "CategoryName");
    private final static QName _SubCategoryReference_QNAME = new QName("ddi:logicalproduct:3_2", "SubCategoryReference");
    private final static QName _CodeListScheme_QNAME = new QName("ddi:logicalproduct:3_2", "CodeListScheme");
    private final static QName _CodeListSchemeName_QNAME = new QName("ddi:logicalproduct:3_2", "CodeListSchemeName");
    private final static QName _CodeListGroupReference_QNAME = new QName("ddi:logicalproduct:3_2", "CodeListGroupReference");
    private final static QName _CodeListName_QNAME = new QName("ddi:logicalproduct:3_2", "CodeListName");
    private final static QName _CodeListGroup_QNAME = new QName("ddi:logicalproduct:3_2", "CodeListGroup");
    private final static QName _CodeListGroupName_QNAME = new QName("ddi:logicalproduct:3_2", "CodeListGroupName");
    private final static QName _TypeOfCodeListGroup_QNAME = new QName("ddi:logicalproduct:3_2", "TypeOfCodeListGroup");
    private final static QName _VariableSchemeName_QNAME = new QName("ddi:logicalproduct:3_2", "VariableSchemeName");
    private final static QName _VariableName_QNAME = new QName("ddi:logicalproduct:3_2", "VariableName");
    private final static QName _SourceUnit_QNAME = new QName("ddi:logicalproduct:3_2", "SourceUnit");
    private final static QName _MissingValuesReference_QNAME = new QName("ddi:logicalproduct:3_2", "MissingValuesReference");
    private final static QName _VariableGroupName_QNAME = new QName("ddi:logicalproduct:3_2", "VariableGroupName");
    private final static QName _NCubeSchemeName_QNAME = new QName("ddi:logicalproduct:3_2", "NCubeSchemeName");
    private final static QName _NCubeName_QNAME = new QName("ddi:logicalproduct:3_2", "NCubeName");
    private final static QName _DataRelationshipName_QNAME = new QName("ddi:logicalproduct:3_2", "DataRelationshipName");
    private final static QName _LogicalRecordName_QNAME = new QName("ddi:logicalproduct:3_2", "LogicalRecordName");
    private final static QName _FixedIdentifier_QNAME = new QName("ddi:logicalproduct:3_2", "FixedIdentifier");
    private final static QName _ConditionalIdentifier_QNAME = new QName("ddi:logicalproduct:3_2", "ConditionalIdentifier");
    private final static QName _ConditionalVariableReference_QNAME = new QName("ddi:logicalproduct:3_2", "ConditionalVariableReference");
    private final static QName _RecordRelationshipName_QNAME = new QName("ddi:logicalproduct:3_2", "RecordRelationshipName");
    private final static QName _SourceTargetLink_QNAME = new QName("ddi:logicalproduct:3_2", "SourceTargetLink");
    private final static QName _SourceLogicalRecordReference_QNAME = new QName("ddi:logicalproduct:3_2", "SourceLogicalRecordReference");
    private final static QName _TargetLogicalRecordReference_QNAME = new QName("ddi:logicalproduct:3_2", "TargetLogicalRecordReference");
    private final static QName _TargetLinkVariableReference_QNAME = new QName("ddi:logicalproduct:3_2", "TargetLinkVariableReference");
    private final static QName _SourceLinkVariableReference_QNAME = new QName("ddi:logicalproduct:3_2", "SourceLinkVariableReference");
    private final static QName _NCubeGroupName_QNAME = new QName("ddi:logicalproduct:3_2", "NCubeGroupName");
    private final static QName _AggregationDefinition_QNAME = new QName("ddi:logicalproduct:3_2", "AggregationDefinition");
    private final static QName _TypeOfVariableGroup_QNAME = new QName("ddi:logicalproduct:3_2", "TypeOfVariableGroup");
    private final static QName _TypeOfNCubeGroup_QNAME = new QName("ddi:logicalproduct:3_2", "TypeOfNCubeGroup");
    private final static QName _CategoryScheme_QNAME = new QName("ddi:logicalproduct:3_2", "CategoryScheme");
    private final static QName _CodeList_QNAME = new QName("ddi:logicalproduct:3_2", "CodeList");
    private final static QName _NCubeScheme_QNAME = new QName("ddi:logicalproduct:3_2", "NCubeScheme");
    private final static QName _VariableScheme_QNAME = new QName("ddi:logicalproduct:3_2", "VariableScheme");
    private final static QName _DataRelationship_QNAME = new QName("ddi:logicalproduct:3_2", "DataRelationship");
    private final static QName _Category_QNAME = new QName("ddi:logicalproduct:3_2", "Category");
    private final static QName _CategoryGroup_QNAME = new QName("ddi:logicalproduct:3_2", "CategoryGroup");
    private final static QName _Generation_QNAME = new QName("ddi:logicalproduct:3_2", "Generation");
    private final static QName _HierarchyType_QNAME = new QName("ddi:logicalproduct:3_2", "HierarchyType");
    private final static QName _Level_QNAME = new QName("ddi:logicalproduct:3_2", "Level");
    private final static QName _Code_QNAME = new QName("ddi:logicalproduct:3_2", "Code");
    private final static QName _CategoryRelationship_QNAME = new QName("ddi:logicalproduct:3_2", "CategoryRelationship");
    private final static QName _Interval_QNAME = new QName("ddi:logicalproduct:3_2", "Interval");
    private final static QName _Variable_QNAME = new QName("ddi:logicalproduct:3_2", "Variable");
    private final static QName _VariableGroup_QNAME = new QName("ddi:logicalproduct:3_2", "VariableGroup");
    private final static QName _VariableGroupReference_QNAME = new QName("ddi:logicalproduct:3_2", "VariableGroupReference");
    private final static QName _EmbargoReference_QNAME = new QName("ddi:logicalproduct:3_2", "EmbargoReference");
    private final static QName _VariableRepresentation_QNAME = new QName("ddi:logicalproduct:3_2", "VariableRepresentation");
    private final static QName _StandardWeightReference_QNAME = new QName("ddi:logicalproduct:3_2", "StandardWeightReference");
    private final static QName _ImputationReference_QNAME = new QName("ddi:logicalproduct:3_2", "ImputationReference");
    private final static QName _ConcatenatedValue_QNAME = new QName("ddi:logicalproduct:3_2", "ConcatenatedValue");
    private final static QName _ComponentReference_QNAME = new QName("ddi:logicalproduct:3_2", "ComponentReference");
    private final static QName _NCube_QNAME = new QName("ddi:logicalproduct:3_2", "NCube");
    private final static QName _NCubeGroup_QNAME = new QName("ddi:logicalproduct:3_2", "NCubeGroup");
    private final static QName _AttachmentRegionReference_QNAME = new QName("ddi:logicalproduct:3_2", "AttachmentRegionReference");
    private final static QName _CoordinateRegion_QNAME = new QName("ddi:logicalproduct:3_2", "CoordinateRegion");
    private final static QName _Dimension_QNAME = new QName("ddi:logicalproduct:3_2", "Dimension");
    private final static QName _MeasureDefinition_QNAME = new QName("ddi:logicalproduct:3_2", "MeasureDefinition");
    private final static QName _Attribute_QNAME = new QName("ddi:logicalproduct:3_2", "Attribute");
    private final static QName _NCubeGroupReference_QNAME = new QName("ddi:logicalproduct:3_2", "NCubeGroupReference");
    private final static QName _DimensionValue_QNAME = new QName("ddi:logicalproduct:3_2", "DimensionValue");
    private final static QName _LogicalRecord_QNAME = new QName("ddi:logicalproduct:3_2", "LogicalRecord");
    private final static QName _RecordRelationship_QNAME = new QName("ddi:logicalproduct:3_2", "RecordRelationship");
    private final static QName _RelatedValue_QNAME = new QName("ddi:logicalproduct:3_2", "RelatedValue");
    private final static QName _VariableValueReference_QNAME = new QName("ddi:logicalproduct:3_2", "VariableValueReference");
    private final static QName _VariableUsedReference_QNAME = new QName("ddi:logicalproduct:3_2", "VariableUsedReference");
    private final static QName _SupportForMultipleSegments_QNAME = new QName("ddi:logicalproduct:3_2", "SupportForMultipleSegments");
    private final static QName _CaseIdentification_QNAME = new QName("ddi:logicalproduct:3_2", "CaseIdentification");
    private final static QName _VariablesInRecord_QNAME = new QName("ddi:logicalproduct:3_2", "VariablesInRecord");
    private final static QName _CaseSpecification_QNAME = new QName("ddi:logicalproduct:3_2", "CaseSpecification");
    private final static QName _NCubesInRecord_QNAME = new QName("ddi:logicalproduct:3_2", "NCubesInRecord");
    private final static QName _LevelName_QNAME = new QName("ddi:logicalproduct:3_2", "LevelName");
    private final static QName _VariableRole_QNAME = new QName("ddi:logicalproduct:3_2", "VariableRole");
    private final static QName _DefaultMissingValues_QNAME = new QName("ddi:logicalproduct:3_2", "DefaultMissingValues");
    private final static QName _RepresentedVariableScheme_QNAME = new QName("ddi:logicalproduct:3_2", "RepresentedVariableScheme");
    private final static QName _RepresentedVariableSchemeName_QNAME = new QName("ddi:logicalproduct:3_2", "RepresentedVariableSchemeName");
    private final static QName _RepresentedVariableGroupReference_QNAME = new QName("ddi:logicalproduct:3_2",
                                                                                    "RepresentedVariableGroupReference");
    private final static QName _RepresentedVariableGroup_QNAME = new QName("ddi:logicalproduct:3_2", "RepresentedVariableGroup");
    private final static QName _RepresentedVariableGroupName_QNAME = new QName("ddi:logicalproduct:3_2", "RepresentedVariableGroupName");
    private final static QName _TypeOfRepresentedVariableGroup_QNAME = new QName("ddi:logicalproduct:3_2",
                                                                                 "TypeOfRepresentedVariableGroup");
    private final static QName _RepresentedVariable_QNAME = new QName("ddi:logicalproduct:3_2", "RepresentedVariable");
    private final static QName _RepresentedVariableName_QNAME = new QName("ddi:logicalproduct:3_2", "RepresentedVariableName");
    private final static QName _RepresentedVariableReference_QNAME = new QName("ddi:logicalproduct:3_2", "RepresentedVariableReference");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.logicalproduct
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link LogicalProductType }
     */
    public LogicalProductType createLogicalProductType() {
        return new LogicalProductType();
    }

    /**
     * Create an instance of {@link SubCategoryReferenceType }
     */
    public SubCategoryReferenceType createSubCategoryReferenceType() {
        return new SubCategoryReferenceType();
    }

    /**
     * Create an instance of {@link CodeListSchemeType }
     */
    public CodeListSchemeType createCodeListSchemeType() {
        return new CodeListSchemeType();
    }

    /**
     * Create an instance of {@link CodeListGroupType }
     */
    public CodeListGroupType createCodeListGroupType() {
        return new CodeListGroupType();
    }

    /**
     * Create an instance of {@link FixedIdentifierType }
     */
    public FixedIdentifierType createFixedIdentifierType() {
        return new FixedIdentifierType();
    }

    /**
     * Create an instance of {@link ConditionalIdentifierType }
     */
    public ConditionalIdentifierType createConditionalIdentifierType() {
        return new ConditionalIdentifierType();
    }

    /**
     * Create an instance of {@link ConditionalVariableReferenceType }
     */
    public ConditionalVariableReferenceType createConditionalVariableReferenceType() {
        return new ConditionalVariableReferenceType();
    }

    /**
     * Create an instance of {@link SourceTargetLinkType }
     */
    public SourceTargetLinkType createSourceTargetLinkType() {
        return new SourceTargetLinkType();
    }

    /**
     * Create an instance of {@link AggregationDefinitionType }
     */
    public AggregationDefinitionType createAggregationDefinitionType() {
        return new AggregationDefinitionType();
    }

    /**
     * Create an instance of {@link CategorySchemeType }
     */
    public CategorySchemeType createCategorySchemeType() {
        return new CategorySchemeType();
    }

    /**
     * Create an instance of {@link CodeListType }
     */
    public CodeListType createCodeListType() {
        return new CodeListType();
    }

    /**
     * Create an instance of {@link NCubeSchemeType }
     */
    public NCubeSchemeType createNCubeSchemeType() {
        return new NCubeSchemeType();
    }

    /**
     * Create an instance of {@link VariableSchemeType }
     */
    public VariableSchemeType createVariableSchemeType() {
        return new VariableSchemeType();
    }

    /**
     * Create an instance of {@link DataRelationshipType }
     */
    public DataRelationshipType createDataRelationshipType() {
        return new DataRelationshipType();
    }

    /**
     * Create an instance of {@link CategoryType }
     */
    public CategoryType createCategoryType() {
        return new CategoryType();
    }

    /**
     * Create an instance of {@link CategoryGroupType }
     */
    public CategoryGroupType createCategoryGroupType() {
        return new CategoryGroupType();
    }

    /**
     * Create an instance of {@link GenerationType }
     */
    public GenerationType createGenerationType() {
        return new GenerationType();
    }

    /**
     * Create an instance of {@link LevelType }
     */
    public LevelType createLevelType() {
        return new LevelType();
    }

    /**
     * Create an instance of {@link CodeType }
     */
    public CodeType createCodeType() {
        return new CodeType();
    }

    /**
     * Create an instance of {@link IntervalType }
     */
    public IntervalType createIntervalType() {
        return new IntervalType();
    }

    /**
     * Create an instance of {@link VariableType }
     */
    public VariableType createVariableType() {
        return new VariableType();
    }

    /**
     * Create an instance of {@link VariableGroupType }
     */
    public VariableGroupType createVariableGroupType() {
        return new VariableGroupType();
    }

    /**
     * Create an instance of {@link VariableRepresentationType }
     */
    public VariableRepresentationType createVariableRepresentationType() {
        return new VariableRepresentationType();
    }

    /**
     * Create an instance of {@link ConcatenatedValueType }
     */
    public ConcatenatedValueType createConcatenatedValueType() {
        return new ConcatenatedValueType();
    }

    /**
     * Create an instance of {@link NCubeType }
     */
    public NCubeType createNCubeType() {
        return new NCubeType();
    }

    /**
     * Create an instance of {@link NCubeGroupType }
     */
    public NCubeGroupType createNCubeGroupType() {
        return new NCubeGroupType();
    }

    /**
     * Create an instance of {@link CoordinateRegionType }
     */
    public CoordinateRegionType createCoordinateRegionType() {
        return new CoordinateRegionType();
    }

    /**
     * Create an instance of {@link DimensionType }
     */
    public DimensionType createDimensionType() {
        return new DimensionType();
    }

    /**
     * Create an instance of {@link MeasureDefinitionType }
     */
    public MeasureDefinitionType createMeasureDefinitionType() {
        return new MeasureDefinitionType();
    }

    /**
     * Create an instance of {@link AttributeType }
     */
    public AttributeType createAttributeType() {
        return new AttributeType();
    }

    /**
     * Create an instance of {@link CohortType }
     */
    public CohortType createCohortType() {
        return new CohortType();
    }

    /**
     * Create an instance of {@link LogicalRecordType }
     */
    public LogicalRecordType createLogicalRecordType() {
        return new LogicalRecordType();
    }

    /**
     * Create an instance of {@link RecordRelationshipType }
     */
    public RecordRelationshipType createRecordRelationshipType() {
        return new RecordRelationshipType();
    }

    /**
     * Create an instance of {@link RelatedValueType }
     */
    public RelatedValueType createRelatedValueType() {
        return new RelatedValueType();
    }

    /**
     * Create an instance of {@link VariableValueReferenceType }
     */
    public VariableValueReferenceType createVariableValueReferenceType() {
        return new VariableValueReferenceType();
    }

    /**
     * Create an instance of {@link CaseIdentificationType }
     */
    public CaseIdentificationType createCaseIdentificationType() {
        return new CaseIdentificationType();
    }

    /**
     * Create an instance of {@link VariablesInRecordType }
     */
    public VariablesInRecordType createVariablesInRecordType() {
        return new VariablesInRecordType();
    }

    /**
     * Create an instance of {@link CaseSpecificationType }
     */
    public CaseSpecificationType createCaseSpecificationType() {
        return new CaseSpecificationType();
    }

    /**
     * Create an instance of {@link NCubesInRecordType }
     */
    public NCubesInRecordType createNCubesInRecordType() {
        return new NCubesInRecordType();
    }

    /**
     * Create an instance of {@link DefaultMissingValuesType }
     */
    public DefaultMissingValuesType createDefaultMissingValuesType() {
        return new DefaultMissingValuesType();
    }

    /**
     * Create an instance of {@link RepresentedVariableSchemeType }
     */
    public RepresentedVariableSchemeType createRepresentedVariableSchemeType() {
        return new RepresentedVariableSchemeType();
    }

    /**
     * Create an instance of {@link RepresentedVariableGroupType }
     */
    public RepresentedVariableGroupType createRepresentedVariableGroupType() {
        return new RepresentedVariableGroupType();
    }

    /**
     * Create an instance of {@link RepresentedVariableType }
     */
    public RepresentedVariableType createRepresentedVariableType() {
        return new RepresentedVariableType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BaseLogicalProductType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "BaseLogicalProduct")
    public JAXBElement<BaseLogicalProductType> createBaseLogicalProduct(BaseLogicalProductType value) {
        return new JAXBElement<BaseLogicalProductType>(_BaseLogicalProduct_QNAME, BaseLogicalProductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "LogicalProductName")
    public JAXBElement<NameType> createLogicalProductName(NameType value) {
        return new JAXBElement<NameType>(_LogicalProductName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicalProductType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "LogicalProduct", substitutionHeadNamespace = "ddi:logicalproduct:3_2", substitutionHeadName = "BaseLogicalProduct")
    public JAXBElement<LogicalProductType> createLogicalProduct(LogicalProductType value) {
        return new JAXBElement<LogicalProductType>(_LogicalProduct_QNAME, LogicalProductType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CategoryGroupReference")
    public JAXBElement<ReferenceType> createCategoryGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_CategoryGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CategorySchemeName")
    public JAXBElement<NameType> createCategorySchemeName(NameType value) {
        return new JAXBElement<NameType>(_CategorySchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "DefiningCategoryReference")
    public JAXBElement<ReferenceType> createDefiningCategoryReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_DefiningCategoryReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "TypeOfCategoryGroup")
    public JAXBElement<CodeValueType> createTypeOfCategoryGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfCategoryGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CategoryGroupName")
    public JAXBElement<NameType> createCategoryGroupName(NameType value) {
        return new JAXBElement<NameType>(_CategoryGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CategoryName")
    public JAXBElement<NameType> createCategoryName(NameType value) {
        return new JAXBElement<NameType>(_CategoryName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubCategoryReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "SubCategoryReference")
    public JAXBElement<SubCategoryReferenceType> createSubCategoryReference(SubCategoryReferenceType value) {
        return new JAXBElement<SubCategoryReferenceType>(_SubCategoryReference_QNAME, SubCategoryReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeListSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CodeListScheme")
    public JAXBElement<CodeListSchemeType> createCodeListScheme(CodeListSchemeType value) {
        return new JAXBElement<CodeListSchemeType>(_CodeListScheme_QNAME, CodeListSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CodeListSchemeName")
    public JAXBElement<NameType> createCodeListSchemeName(NameType value) {
        return new JAXBElement<NameType>(_CodeListSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CodeListGroupReference")
    public JAXBElement<ReferenceType> createCodeListGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_CodeListGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CodeListName")
    public JAXBElement<NameType> createCodeListName(NameType value) {
        return new JAXBElement<NameType>(_CodeListName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeListGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CodeListGroup")
    public JAXBElement<CodeListGroupType> createCodeListGroup(CodeListGroupType value) {
        return new JAXBElement<CodeListGroupType>(_CodeListGroup_QNAME, CodeListGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CodeListGroupName")
    public JAXBElement<NameType> createCodeListGroupName(NameType value) {
        return new JAXBElement<NameType>(_CodeListGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "TypeOfCodeListGroup")
    public JAXBElement<CodeValueType> createTypeOfCodeListGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfCodeListGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableSchemeName")
    public JAXBElement<NameType> createVariableSchemeName(NameType value) {
        return new JAXBElement<NameType>(_VariableSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableName")
    public JAXBElement<NameType> createVariableName(NameType value) {
        return new JAXBElement<NameType>(_VariableName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "SourceUnit")
    public JAXBElement<CodeValueType> createSourceUnit(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_SourceUnit_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "MissingValuesReference")
    public JAXBElement<ReferenceType> createMissingValuesReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_MissingValuesReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableGroupName")
    public JAXBElement<NameType> createVariableGroupName(NameType value) {
        return new JAXBElement<NameType>(_VariableGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "NCubeSchemeName")
    public JAXBElement<NameType> createNCubeSchemeName(NameType value) {
        return new JAXBElement<NameType>(_NCubeSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "NCubeName")
    public JAXBElement<NameType> createNCubeName(NameType value) {
        return new JAXBElement<NameType>(_NCubeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "DataRelationshipName")
    public JAXBElement<NameType> createDataRelationshipName(NameType value) {
        return new JAXBElement<NameType>(_DataRelationshipName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "LogicalRecordName")
    public JAXBElement<NameType> createLogicalRecordName(NameType value) {
        return new JAXBElement<NameType>(_LogicalRecordName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FixedIdentifierType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "FixedIdentifier")
    public JAXBElement<FixedIdentifierType> createFixedIdentifier(FixedIdentifierType value) {
        return new JAXBElement<FixedIdentifierType>(_FixedIdentifier_QNAME, FixedIdentifierType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConditionalIdentifierType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "ConditionalIdentifier")
    public JAXBElement<ConditionalIdentifierType> createConditionalIdentifier(ConditionalIdentifierType value) {
        return new JAXBElement<ConditionalIdentifierType>(_ConditionalIdentifier_QNAME, ConditionalIdentifierType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConditionalVariableReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "ConditionalVariableReference")
    public JAXBElement<ConditionalVariableReferenceType> createConditionalVariableReference(ConditionalVariableReferenceType value) {
        return new JAXBElement<ConditionalVariableReferenceType>(_ConditionalVariableReference_QNAME,
                                                                 ConditionalVariableReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RecordRelationshipName")
    public JAXBElement<NameType> createRecordRelationshipName(NameType value) {
        return new JAXBElement<NameType>(_RecordRelationshipName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SourceTargetLinkType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "SourceTargetLink")
    public JAXBElement<SourceTargetLinkType> createSourceTargetLink(SourceTargetLinkType value) {
        return new JAXBElement<SourceTargetLinkType>(_SourceTargetLink_QNAME, SourceTargetLinkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "SourceLogicalRecordReference")
    public JAXBElement<ReferenceType> createSourceLogicalRecordReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_SourceLogicalRecordReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "TargetLogicalRecordReference")
    public JAXBElement<ReferenceType> createTargetLogicalRecordReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_TargetLogicalRecordReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "TargetLinkVariableReference")
    public JAXBElement<ReferenceType> createTargetLinkVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_TargetLinkVariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "SourceLinkVariableReference")
    public JAXBElement<ReferenceType> createSourceLinkVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_SourceLinkVariableReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "NCubeGroupName")
    public JAXBElement<NameType> createNCubeGroupName(NameType value) {
        return new JAXBElement<NameType>(_NCubeGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AggregationDefinitionType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "AggregationDefinition")
    public JAXBElement<AggregationDefinitionType> createAggregationDefinition(AggregationDefinitionType value) {
        return new JAXBElement<AggregationDefinitionType>(_AggregationDefinition_QNAME, AggregationDefinitionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "TypeOfVariableGroup")
    public JAXBElement<CodeValueType> createTypeOfVariableGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfVariableGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "TypeOfNCubeGroup")
    public JAXBElement<CodeValueType> createTypeOfNCubeGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfNCubeGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategorySchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CategoryScheme")
    public JAXBElement<CategorySchemeType> createCategoryScheme(CategorySchemeType value) {
        return new JAXBElement<CategorySchemeType>(_CategoryScheme_QNAME, CategorySchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeListType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CodeList")
    public JAXBElement<CodeListType> createCodeList(CodeListType value) {
        return new JAXBElement<CodeListType>(_CodeList_QNAME, CodeListType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubeSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "NCubeScheme")
    public JAXBElement<NCubeSchemeType> createNCubeScheme(NCubeSchemeType value) {
        return new JAXBElement<NCubeSchemeType>(_NCubeScheme_QNAME, NCubeSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableScheme")
    public JAXBElement<VariableSchemeType> createVariableScheme(VariableSchemeType value) {
        return new JAXBElement<VariableSchemeType>(_VariableScheme_QNAME, VariableSchemeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataRelationshipType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "DataRelationship")
    public JAXBElement<DataRelationshipType> createDataRelationship(DataRelationshipType value) {
        return new JAXBElement<DataRelationshipType>(_DataRelationship_QNAME, DataRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoryType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "Category")
    public JAXBElement<CategoryType> createCategory(CategoryType value) {
        return new JAXBElement<CategoryType>(_Category_QNAME, CategoryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoryGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CategoryGroup")
    public JAXBElement<CategoryGroupType> createCategoryGroup(CategoryGroupType value) {
        return new JAXBElement<CategoryGroupType>(_CategoryGroup_QNAME, CategoryGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GenerationType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "Generation")
    public JAXBElement<GenerationType> createGeneration(GenerationType value) {
        return new JAXBElement<GenerationType>(_Generation_QNAME, GenerationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HierarchyCodeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "HierarchyType")
    public JAXBElement<HierarchyCodeType> createHierarchyType(HierarchyCodeType value) {
        return new JAXBElement<HierarchyCodeType>(_HierarchyType_QNAME, HierarchyCodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LevelType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "Level")
    public JAXBElement<LevelType> createLevel(LevelType value) {
        return new JAXBElement<LevelType>(_Level_QNAME, LevelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "Code")
    public JAXBElement<CodeType> createCode(CodeType value) {
        return new JAXBElement<CodeType>(_Code_QNAME, CodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CategoryRelationCodeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CategoryRelationship")
    public JAXBElement<CategoryRelationCodeType> createCategoryRelationship(CategoryRelationCodeType value) {
        return new JAXBElement<CategoryRelationCodeType>(_CategoryRelationship_QNAME, CategoryRelationCodeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IntervalType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "Interval")
    public JAXBElement<IntervalType> createInterval(IntervalType value) {
        return new JAXBElement<IntervalType>(_Interval_QNAME, IntervalType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "Variable")
    public JAXBElement<VariableType> createVariable(VariableType value) {
        return new JAXBElement<VariableType>(_Variable_QNAME, VariableType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableGroup")
    public JAXBElement<VariableGroupType> createVariableGroup(VariableGroupType value) {
        return new JAXBElement<VariableGroupType>(_VariableGroup_QNAME, VariableGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableGroupReference")
    public JAXBElement<ReferenceType> createVariableGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_VariableGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "EmbargoReference")
    public JAXBElement<ReferenceType> createEmbargoReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_EmbargoReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableRepresentationType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableRepresentation")
    public JAXBElement<VariableRepresentationType> createVariableRepresentation(VariableRepresentationType value) {
        return new JAXBElement<VariableRepresentationType>(_VariableRepresentation_QNAME, VariableRepresentationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "StandardWeightReference")
    public JAXBElement<ReferenceType> createStandardWeightReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_StandardWeightReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "ImputationReference")
    public JAXBElement<ReferenceType> createImputationReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ImputationReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConcatenatedValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "ConcatenatedValue")
    public JAXBElement<ConcatenatedValueType> createConcatenatedValue(ConcatenatedValueType value) {
        return new JAXBElement<ConcatenatedValueType>(_ConcatenatedValue_QNAME, ConcatenatedValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "ComponentReference")
    public JAXBElement<ReferenceType> createComponentReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_ComponentReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "NCube")
    public JAXBElement<NCubeType> createNCube(NCubeType value) {
        return new JAXBElement<NCubeType>(_NCube_QNAME, NCubeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubeGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "NCubeGroup")
    public JAXBElement<NCubeGroupType> createNCubeGroup(NCubeGroupType value) {
        return new JAXBElement<NCubeGroupType>(_NCubeGroup_QNAME, NCubeGroupType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "AttachmentRegionReference")
    public JAXBElement<ReferenceType> createAttachmentRegionReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_AttachmentRegionReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoordinateRegionType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CoordinateRegion")
    public JAXBElement<CoordinateRegionType> createCoordinateRegion(CoordinateRegionType value) {
        return new JAXBElement<CoordinateRegionType>(_CoordinateRegion_QNAME, CoordinateRegionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DimensionType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "Dimension")
    public JAXBElement<DimensionType> createDimension(DimensionType value) {
        return new JAXBElement<DimensionType>(_Dimension_QNAME, DimensionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MeasureDefinitionType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "MeasureDefinition")
    public JAXBElement<MeasureDefinitionType> createMeasureDefinition(MeasureDefinitionType value) {
        return new JAXBElement<MeasureDefinitionType>(_MeasureDefinition_QNAME, MeasureDefinitionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AttributeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "Attribute")
    public JAXBElement<AttributeType> createAttribute(AttributeType value) {
        return new JAXBElement<AttributeType>(_Attribute_QNAME, AttributeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "NCubeGroupReference")
    public JAXBElement<ReferenceType> createNCubeGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_NCubeGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CohortType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "DimensionValue")
    public JAXBElement<CohortType> createDimensionValue(CohortType value) {
        return new JAXBElement<CohortType>(_DimensionValue_QNAME, CohortType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LogicalRecordType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "LogicalRecord")
    public JAXBElement<LogicalRecordType> createLogicalRecord(LogicalRecordType value) {
        return new JAXBElement<LogicalRecordType>(_LogicalRecord_QNAME, LogicalRecordType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RecordRelationshipType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RecordRelationship")
    public JAXBElement<RecordRelationshipType> createRecordRelationship(RecordRelationshipType value) {
        return new JAXBElement<RecordRelationshipType>(_RecordRelationship_QNAME, RecordRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelatedValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RelatedValue")
    public JAXBElement<RelatedValueType> createRelatedValue(RelatedValueType value) {
        return new JAXBElement<RelatedValueType>(_RelatedValue_QNAME, RelatedValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableValueReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableValueReference")
    public JAXBElement<VariableValueReferenceType> createVariableValueReference(VariableValueReferenceType value) {
        return new JAXBElement<VariableValueReferenceType>(_VariableValueReference_QNAME, VariableValueReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableUsedReference")
    public JAXBElement<ReferenceType> createVariableUsedReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_VariableUsedReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableValueReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "SupportForMultipleSegments")
    public JAXBElement<VariableValueReferenceType> createSupportForMultipleSegments(VariableValueReferenceType value) {
        return new JAXBElement<VariableValueReferenceType>(_SupportForMultipleSegments_QNAME, VariableValueReferenceType.class, null,
                                                           value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CaseIdentificationType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CaseIdentification")
    public JAXBElement<CaseIdentificationType> createCaseIdentification(CaseIdentificationType value) {
        return new JAXBElement<CaseIdentificationType>(_CaseIdentification_QNAME, CaseIdentificationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariablesInRecordType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariablesInRecord")
    public JAXBElement<VariablesInRecordType> createVariablesInRecord(VariablesInRecordType value) {
        return new JAXBElement<VariablesInRecordType>(_VariablesInRecord_QNAME, VariablesInRecordType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CaseSpecificationType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "CaseSpecification")
    public JAXBElement<CaseSpecificationType> createCaseSpecification(CaseSpecificationType value) {
        return new JAXBElement<CaseSpecificationType>(_CaseSpecification_QNAME, CaseSpecificationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NCubesInRecordType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "NCubesInRecord")
    public JAXBElement<NCubesInRecordType> createNCubesInRecord(NCubesInRecordType value) {
        return new JAXBElement<NCubesInRecordType>(_NCubesInRecord_QNAME, NCubesInRecordType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "LevelName")
    public JAXBElement<NameType> createLevelName(NameType value) {
        return new JAXBElement<NameType>(_LevelName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "VariableRole")
    public JAXBElement<CodeValueType> createVariableRole(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_VariableRole_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DefaultMissingValuesType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "DefaultMissingValues")
    public JAXBElement<DefaultMissingValuesType> createDefaultMissingValues(DefaultMissingValuesType value) {
        return new JAXBElement<DefaultMissingValuesType>(_DefaultMissingValues_QNAME, DefaultMissingValuesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RepresentedVariableSchemeType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RepresentedVariableScheme")
    public JAXBElement<RepresentedVariableSchemeType> createRepresentedVariableScheme(RepresentedVariableSchemeType value) {
        return new JAXBElement<RepresentedVariableSchemeType>(_RepresentedVariableScheme_QNAME, RepresentedVariableSchemeType.class, null,
                                                              value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RepresentedVariableSchemeName")
    public JAXBElement<NameType> createRepresentedVariableSchemeName(NameType value) {
        return new JAXBElement<NameType>(_RepresentedVariableSchemeName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RepresentedVariableGroupReference")
    public JAXBElement<ReferenceType> createRepresentedVariableGroupReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_RepresentedVariableGroupReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RepresentedVariableGroupType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RepresentedVariableGroup")
    public JAXBElement<RepresentedVariableGroupType> createRepresentedVariableGroup(RepresentedVariableGroupType value) {
        return new JAXBElement<RepresentedVariableGroupType>(_RepresentedVariableGroup_QNAME, RepresentedVariableGroupType.class, null,
                                                             value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RepresentedVariableGroupName")
    public JAXBElement<NameType> createRepresentedVariableGroupName(NameType value) {
        return new JAXBElement<NameType>(_RepresentedVariableGroupName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "TypeOfRepresentedVariableGroup")
    public JAXBElement<CodeValueType> createTypeOfRepresentedVariableGroup(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_TypeOfRepresentedVariableGroup_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RepresentedVariableType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RepresentedVariable")
    public JAXBElement<RepresentedVariableType> createRepresentedVariable(RepresentedVariableType value) {
        return new JAXBElement<RepresentedVariableType>(_RepresentedVariable_QNAME, RepresentedVariableType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NameType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RepresentedVariableName")
    public JAXBElement<NameType> createRepresentedVariableName(NameType value) {
        return new JAXBElement<NameType>(_RepresentedVariableName_QNAME, NameType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:logicalproduct:3_2", name = "RepresentedVariableReference")
    public JAXBElement<ReferenceType> createRepresentedVariableReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_RepresentedVariableReference_QNAME, ReferenceType.class, null, value);
    }

}
