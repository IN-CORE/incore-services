//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.logicalproduct;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for RelationCodeType.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="RelationCodeType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *     &lt;enumeration value="Parent"/&gt;
 *     &lt;enumeration value="Child"/&gt;
 *     &lt;enumeration value="Sibling"/&gt;
 *     &lt;enumeration value="Unknown"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 */
@XmlType(name = "RelationCodeType")
@XmlEnum
public enum RelationCodeType {


    /**
     * The source object is the parent of the target object. The target object is a sub-part or member of the parent source.
     */
    @XmlEnumValue("Parent")
    PARENT("Parent"),

    /**
     * The source object is the child of the source object. The target object is the parent or contains the source object as a sub-part or member.
     */
    @XmlEnumValue("Child")
    CHILD("Child"),

    /**
     * The source object is the sibling of the target object. One object is not a member of or subsidiary to the other. They may be equal members of the same group.
     */
    @XmlEnumValue("Sibling")
    SIBLING("Sibling"),

    /**
     * The relationship between the source and target objects is unknown.
     */
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown");
    private final String value;

    RelationCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RelationCodeType fromValue(String v) {
        for (RelationCodeType c : RelationCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
