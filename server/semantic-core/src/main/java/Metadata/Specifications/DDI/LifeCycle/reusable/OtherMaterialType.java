//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import Metadata.Specifications.DDI.LifeCycle.datacollection.ExternalInterviewerInstructionType;


/**
 * OtherMaterialType describes the structure of the OtherMaterial element, used to reference external resources. It includes citations to materials related to the content of the DDI Instance. This includes citations to such material, an external reference to a URL (or other URI), and a statement about the relationship between the cited OtherMaterial the contents of the DDI instance.
 * <p>
 * <p>Java class for OtherMaterialType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="OtherMaterialType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}IdentifiableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="TypeOfMaterial" type="{ddi:reusable:3_2}CodeValueType" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Citation" minOccurs="0"/&gt;
 *         &lt;element name="ExternalURLReference" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="ExternalURNReference" type="{http://www.w3.org/2001/XMLSchema}anyURI" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Relationship" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="MIMEType" type="{ddi:reusable:3_2}CodeValueType" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Segment" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute ref="{http://www.w3.org/XML/1998/namespace}lang"/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OtherMaterialType", propOrder = {
        "typeOfMaterial",
        "description",
        "citation",
        "externalURLReference",
        "externalURNReference",
        "relationship",
        "mimeType",
        "segment"
})
@XmlSeeAlso({
        AuthorizedSourceType.class,
        ExternalInterviewerInstructionType.class
})
public class OtherMaterialType
        extends IdentifiableType {

    @XmlElement(name = "TypeOfMaterial")
    protected CodeValueType typeOfMaterial;
    @XmlElement(name = "Description")
    protected StructuredStringType description;
    @XmlElement(name = "Citation")
    protected CitationType citation;
    @XmlElement(name = "ExternalURLReference")
    @XmlSchemaType(name = "anyURI")
    protected List<String> externalURLReference;
    @XmlElement(name = "ExternalURNReference")
    @XmlSchemaType(name = "anyURI")
    protected String externalURNReference;
    @XmlElement(name = "Relationship")
    protected List<RelationshipType> relationship;
    @XmlElement(name = "MIMEType")
    protected CodeValueType mimeType;
    @XmlElement(name = "Segment")
    protected List<SegmentType> segment;
    @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "language")
    protected String lang;

    /**
     * Gets the value of the typeOfMaterial property.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getTypeOfMaterial() {
        return typeOfMaterial;
    }

    /**
     * Sets the value of the typeOfMaterial property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setTypeOfMaterial(CodeValueType value) {
        this.typeOfMaterial = value;
    }

    /**
     * A description of the referenced material. This field can map to a Dublin Core abstract. Note that Dublin Core does not support structure within the abstract element. Supports multiple languages and optional structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Bibliographic citation for the external resource.
     *
     * @return possible object is
     * {@link CitationType }
     */
    public CitationType getCitation() {
        return citation;
    }

    /**
     * Sets the value of the citation property.
     *
     * @param value allowed object is
     *              {@link CitationType }
     */
    public void setCitation(CitationType value) {
        this.citation = value;
    }

    /**
     * Gets the value of the externalURLReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the externalURLReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExternalURLReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     */
    public List<String> getExternalURLReference() {
        if (externalURLReference == null) {
            externalURLReference = new ArrayList<String>();
        }
        return this.externalURLReference;
    }

    /**
     * Gets the value of the externalURNReference property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getExternalURNReference() {
        return externalURNReference;
    }

    /**
     * Sets the value of the externalURNReference property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setExternalURNReference(String value) {
        this.externalURNReference = value;
    }

    /**
     * Reference to the item within the DDI Instance to which the external resource is related.Gets the value of the relationship property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the relationship property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRelationship().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RelationshipType }
     */
    public List<RelationshipType> getRelationship() {
        if (relationship == null) {
            relationship = new ArrayList<RelationshipType>();
        }
        return this.relationship;
    }

    /**
     * Gets the value of the mimeType property.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getMIMEType() {
        return mimeType;
    }

    /**
     * Sets the value of the mimeType property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setMIMEType(CodeValueType value) {
        this.mimeType = value;
    }

    /**
     * Can describe a segment within a larger object such as a text or video segment.Gets the value of the segment property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the segment property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSegment().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SegmentType }
     */
    public List<SegmentType> getSegment() {
        if (segment == null) {
            segment = new ArrayList<SegmentType>();
        }
        return this.segment;
    }

    /**
     * Language of the metadata describing the other material.
     *
     * @return possible object is
     * {@link String }
     */
    public String getLang() {
        return lang;
    }

    /**
     * Sets the value of the lang property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setLang(String value) {
        this.lang = value;
    }

}
