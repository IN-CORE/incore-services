//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.datacollection;

import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Describes each dimension of the grid including dimension rank (for the purpose of identifying a cell address), a text for the dimension, and optional labels and codes used as column and row stubs. May also describe a roster (a set of unlabeled rows or columns depending upon display situation).
 * <p>
 * <p>Java class for GridDimensionType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="GridDimensionType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;choice&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}CodeDomain"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}Roster"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="rank" use="required" type="{http://www.w3.org/2001/XMLSchema}integer" /&gt;
 *       &lt;attribute name="displayCode" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" /&gt;
 *       &lt;attribute name="displayLabel" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" /&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GridDimensionType", propOrder = {
        "codeDomain",
        "roster"
})
public class GridDimensionType {

    @XmlElement(name = "CodeDomain")
    protected CodeDomainType codeDomain;
    @XmlElement(name = "Roster")
    protected RosterType roster;
    @XmlAttribute(name = "rank", required = true)
    protected BigInteger rank;
    @XmlAttribute(name = "displayCode")
    protected Boolean displayCode;
    @XmlAttribute(name = "displayLabel")
    protected Boolean displayLabel;

    /**
     * This includes a reference to a CodeList that is used for the labels contained in the dimension. CodeLists are used even when the code is not being displayed in order to use this information for creating the cell coordinate address.
     *
     * @return possible object is
     * {@link CodeDomainType }
     */
    public CodeDomainType getCodeDomain() {
        return codeDomain;
    }

    /**
     * Sets the value of the codeDomain property.
     *
     * @param value allowed object is
     *              {@link CodeDomainType }
     */
    public void setCodeDomain(CodeDomainType value) {
        this.codeDomain = value;
    }

    /**
     * A roster is an unlabeled list of numbered rows or columns depending upon orientation. The numbers may or may not be displayed but will be used as information for creating the cell coordinate address.
     *
     * @return possible object is
     * {@link RosterType }
     */
    public RosterType getRoster() {
        return roster;
    }

    /**
     * Sets the value of the roster property.
     *
     * @param value allowed object is
     *              {@link RosterType }
     */
    public void setRoster(RosterType value) {
        this.roster = value;
    }

    /**
     * Gets the value of the rank property.
     *
     * @return possible object is
     * {@link BigInteger }
     */
    public BigInteger getRank() {
        return rank;
    }

    /**
     * Sets the value of the rank property.
     *
     * @param value allowed object is
     *              {@link BigInteger }
     */
    public void setRank(BigInteger value) {
        this.rank = value;
    }

    /**
     * Gets the value of the displayCode property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isDisplayCode() {
        if (displayCode == null) {
            return true;
        } else {
            return displayCode;
        }
    }

    /**
     * Sets the value of the displayCode property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setDisplayCode(Boolean value) {
        this.displayCode = value;
    }

    /**
     * Gets the value of the displayLabel property.
     *
     * @return possible object is
     * {@link Boolean }
     */
    public boolean isDisplayLabel() {
        if (displayLabel == null) {
            return true;
        } else {
            return displayLabel;
        }
    }

    /**
     * Sets the value of the displayLabel property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setDisplayLabel(Boolean value) {
        this.displayLabel = value;
    }

}
