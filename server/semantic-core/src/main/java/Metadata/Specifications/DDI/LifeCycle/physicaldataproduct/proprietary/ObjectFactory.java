//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.physicaldataproduct.proprietary;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

import Metadata.Specifications.DDI.LifeCycle.reusable.CodeValueType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SoftwareType;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the ddi.physicaldataproduct_proprietary package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and models
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _RecordLayout_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2", "RecordLayout");
    private final static QName _DataItemAddress_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2", "DataItemAddress");
    private final static QName _DefaultNumericDataTypeReference_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2",
                                                                                  "DefaultNumericDataTypeReference");
    private final static QName _DefaultTextDataTypeReference_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2",
                                                                               "DefaultTextDataTypeReference");
    private final static QName _DefaultDateTimeDataTypeReference_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2",
                                                                                   "DefaultDateTimeDataTypeReference");
    private final static QName _CodedDataAsNumeric_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2", "CodedDataAsNumeric");
    private final static QName _CodedDataAsText_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2", "CodedDataAsText");
    private final static QName _ProprietaryDataType_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2", "ProprietaryDataType");
    private final static QName _ProprietaryOutputFormat_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2",
                                                                          "ProprietaryOutputFormat");
    private final static QName _DataItem_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2", "DataItem");
    private final static QName _SystemSoftware_QNAME = new QName("ddi:physicaldataproduct_proprietary:3_2", "SystemSoftware");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: ddi.physicaldataproduct_proprietary
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RecordLayoutType }
     */
    public RecordLayoutType createRecordLayoutType() {
        return new RecordLayoutType();
    }

    /**
     * Create an instance of {@link DataItemAddressType }
     */
    public DataItemAddressType createDataItemAddressType() {
        return new DataItemAddressType();
    }

    /**
     * Create an instance of {@link CodedDataAsNumericType }
     */
    public CodedDataAsNumericType createCodedDataAsNumericType() {
        return new CodedDataAsNumericType();
    }

    /**
     * Create an instance of {@link CodedDataAsTextType }
     */
    public CodedDataAsTextType createCodedDataAsTextType() {
        return new CodedDataAsTextType();
    }

    /**
     * Create an instance of {@link DataItemType }
     */
    public DataItemType createDataItemType() {
        return new DataItemType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RecordLayoutType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "RecordLayout", substitutionHeadNamespace = "ddi:physicaldataproduct:3_2", substitutionHeadName = "BaseRecordLayout")
    public JAXBElement<RecordLayoutType> createRecordLayout(RecordLayoutType value) {
        return new JAXBElement<RecordLayoutType>(_RecordLayout_QNAME, RecordLayoutType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataItemAddressType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "DataItemAddress")
    public JAXBElement<DataItemAddressType> createDataItemAddress(DataItemAddressType value) {
        return new JAXBElement<DataItemAddressType>(_DataItemAddress_QNAME, DataItemAddressType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "DefaultNumericDataTypeReference")
    public JAXBElement<ReferenceType> createDefaultNumericDataTypeReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_DefaultNumericDataTypeReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "DefaultTextDataTypeReference")
    public JAXBElement<ReferenceType> createDefaultTextDataTypeReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_DefaultTextDataTypeReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "DefaultDateTimeDataTypeReference")
    public JAXBElement<ReferenceType> createDefaultDateTimeDataTypeReference(ReferenceType value) {
        return new JAXBElement<ReferenceType>(_DefaultDateTimeDataTypeReference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodedDataAsNumericType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "CodedDataAsNumeric")
    public JAXBElement<CodedDataAsNumericType> createCodedDataAsNumeric(CodedDataAsNumericType value) {
        return new JAXBElement<CodedDataAsNumericType>(_CodedDataAsNumeric_QNAME, CodedDataAsNumericType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodedDataAsTextType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "CodedDataAsText")
    public JAXBElement<CodedDataAsTextType> createCodedDataAsText(CodedDataAsTextType value) {
        return new JAXBElement<CodedDataAsTextType>(_CodedDataAsText_QNAME, CodedDataAsTextType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "ProprietaryDataType")
    public JAXBElement<CodeValueType> createProprietaryDataType(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_ProprietaryDataType_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CodeValueType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "ProprietaryOutputFormat")
    public JAXBElement<CodeValueType> createProprietaryOutputFormat(CodeValueType value) {
        return new JAXBElement<CodeValueType>(_ProprietaryOutputFormat_QNAME, CodeValueType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataItemType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "DataItem")
    public JAXBElement<DataItemType> createDataItem(DataItemType value) {
        return new JAXBElement<DataItemType>(_DataItem_QNAME, DataItemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SoftwareType }{@code >}}
     */
    @XmlElementDecl(namespace = "ddi:physicaldataproduct_proprietary:3_2", name = "SystemSoftware")
    public JAXBElement<SoftwareType> createSystemSoftware(SoftwareType value) {
        return new JAXBElement<SoftwareType>(_SystemSoftware_QNAME, SoftwareType.class, null, value);
    }

}
