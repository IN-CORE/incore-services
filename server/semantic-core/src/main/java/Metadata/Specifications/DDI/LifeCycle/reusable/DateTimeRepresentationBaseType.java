//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.datacollection.DateTimeDomainType;


/**
 * Structures the representation for any type of time format (including dates, etc.). Regardless of the format of the data the content may be treated as a date and or time and converted to ISO standard structure if sufficient information is supplied.
 * <p>
 * <p>Java class for DateTimeRepresentationBaseType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="DateTimeRepresentationBaseType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}RepresentationType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}DateFieldFormat" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}DateTypeCode"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="regExp" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DateTimeRepresentationBaseType", propOrder = {
        "dateFieldFormat",
        "dateTypeCode"
})
@XmlSeeAlso({
        DateTimeDomainType.class
})
public class DateTimeRepresentationBaseType
        extends RepresentationType {

    @XmlElement(name = "DateFieldFormat")
    protected CodeValueType dateFieldFormat;
    @XmlElement(name = "DateTypeCode", required = true)
    protected CodeValueType dateTypeCode;
    @XmlAttribute(name = "regExp")
    protected String regExp;

    /**
     * Describes the format of the date field, in formats such as YYYY/MM or MM-DD-YY, etc. If this element is omitted, then the format is assumed to be the XML Schema format corresponding to the type attribute value.
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getDateFieldFormat() {
        return dateFieldFormat;
    }

    /**
     * Sets the value of the dateFieldFormat property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setDateFieldFormat(CodeValueType value) {
        this.dateFieldFormat = value;
    }

    /**
     * This is a standard XML date type code and supports the use of an external controlled vocabulary. Examples are date, dateTime, gYearMonth, gYear, and duration
     *
     * @return possible object is
     * {@link CodeValueType }
     */
    public CodeValueType getDateTypeCode() {
        return dateTypeCode;
    }

    /**
     * Sets the value of the dateTypeCode property.
     *
     * @param value allowed object is
     *              {@link CodeValueType }
     */
    public void setDateTypeCode(CodeValueType value) {
        this.dateTypeCode = value;
    }

    /**
     * Gets the value of the regExp property.
     *
     * @return possible object is
     * {@link String }
     */
    public String getRegExp() {
        return regExp;
    }

    /**
     * Sets the value of the regExp property.
     *
     * @param value allowed object is
     *              {@link String }
     */
    public void setRegExp(String value) {
        this.regExp = value;
    }

}
