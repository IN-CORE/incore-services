//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.conceptualcomponent;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.LabelType;
import Metadata.Specifications.DDI.LifeCycle.reusable.MaintainableType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SchemeReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;


/**
 * A comprehensive list of the concepts measured by the data that are being documented that is maintained by an agency. In addition to the standard name, label, and description, allows for the inclusion of an existing ConceptScheme by reference, assignment of a controlled vocabulary for the scheme, inclusion of descriptions for Concepts and ConceptGroups in-line or by reference.
 * <p>
 * <p>Java class for ConceptSchemeType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ConceptSchemeType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}MaintainableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptSchemeName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ConceptSchemeReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:conceptualcomponent:3_2}Vocabulary" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}Concept"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ConceptReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptGroup"/&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptGroupReference"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConceptSchemeType", propOrder = {
        "conceptSchemeName",
        "label",
        "description",
        "conceptSchemeReference",
        "vocabulary",
        "conceptOrConceptReference",
        "conceptGroupOrConceptGroupReference"
})
public class ConceptSchemeType
        extends MaintainableType {

    @XmlElement(name = "ConceptSchemeName")
    protected List<NameType> conceptSchemeName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_2")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_2")
    protected StructuredStringType description;
    @XmlElement(name = "ConceptSchemeReference", namespace = "ddi:reusable:3_2")
    protected List<SchemeReferenceType> conceptSchemeReference;
    @XmlElement(name = "Vocabulary")
    protected VocabularyType vocabulary;
    @XmlElements({
            @XmlElement(name = "Concept", type = ConceptType.class),
            @XmlElement(name = "ConceptReference", namespace = "ddi:reusable:3_2", type = ReferenceType.class)
    })
    protected List<Object> conceptOrConceptReference;
    @XmlElements({
            @XmlElement(name = "ConceptGroup", type = ConceptGroupType.class),
            @XmlElement(name = "ConceptGroupReference", type = ReferenceType.class)
    })
    protected List<Object> conceptGroupOrConceptGroupReference;

    /**
     * A name for the ConceptScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the conceptSchemeName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptSchemeName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptSchemeName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getConceptSchemeName() {
        if (conceptSchemeName == null) {
            conceptSchemeName = new ArrayList<NameType>();
        }
        return this.conceptSchemeName;
    }

    /**
     * A display label for the ConceptScheme. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the ConceptScheme. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Reference to an existing ConceptScheme for inclusion.Gets the value of the conceptSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeReferenceType }
     */
    public List<SchemeReferenceType> getConceptSchemeReference() {
        if (conceptSchemeReference == null) {
            conceptSchemeReference = new ArrayList<SchemeReferenceType>();
        }
        return this.conceptSchemeReference;
    }

    /**
     * Identifies and describes the vocabulary used to create the concept scheme.
     *
     * @return possible object is
     * {@link VocabularyType }
     */
    public VocabularyType getVocabulary() {
        return vocabulary;
    }

    /**
     * Sets the value of the vocabulary property.
     *
     * @param value allowed object is
     *              {@link VocabularyType }
     */
    public void setVocabulary(VocabularyType value) {
        this.vocabulary = value;
    }

    /**
     * Gets the value of the conceptOrConceptReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptOrConceptReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptOrConceptReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptType }
     * {@link ReferenceType }
     */
    public List<Object> getConceptOrConceptReference() {
        if (conceptOrConceptReference == null) {
            conceptOrConceptReference = new ArrayList<Object>();
        }
        return this.conceptOrConceptReference;
    }

    /**
     * Gets the value of the conceptGroupOrConceptGroupReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptGroupOrConceptGroupReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptGroupOrConceptGroupReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptGroupType }
     * {@link ReferenceType }
     */
    public List<Object> getConceptGroupOrConceptGroupReference() {
        if (conceptGroupOrConceptGroupReference == null) {
            conceptGroupOrConceptGroupReference = new ArrayList<Object>();
        }
        return this.conceptGroupOrConceptGroupReference;
    }

}
