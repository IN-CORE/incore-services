//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.datacollection;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.LabelType;
import Metadata.Specifications.DDI.LifeCycle.reusable.MaintainableType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.ReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SchemeReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;


/**
 * A set of control constructs maintained by an agency and used in the instrument or computational instruction. ControlConstructs describe the ordering and flow of questions within an instrument or information through a process. In addition to the standard name, label and description can include an existing ControlConstructScheme by reference and describe individual Control Constructs of varying types.
 * <p>
 * <p>Java class for ControlConstructSchemeType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ControlConstructSchemeType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}MaintainableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:datacollection:3_2}ControlConstructSchemeName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}ControlConstructSchemeReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ControlConstruct"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ControlConstructReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ControlConstructGroup"/&gt;
 *           &lt;element ref="{ddi:datacollection:3_2}ControlConstructGroupReference"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ControlConstructSchemeType", propOrder = {
        "controlConstructSchemeName",
        "label",
        "description",
        "controlConstructSchemeReference",
        "controlConstructOrControlConstructReference",
        "controlConstructGroupOrControlConstructGroupReference"
})
public class ControlConstructSchemeType
        extends MaintainableType {

    @XmlElement(name = "ControlConstructSchemeName")
    protected List<NameType> controlConstructSchemeName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_2")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_2")
    protected StructuredStringType description;
    @XmlElement(name = "ControlConstructSchemeReference", namespace = "ddi:reusable:3_2")
    protected List<SchemeReferenceType> controlConstructSchemeReference;
    @XmlElementRefs({
            @XmlElementRef(name = "ControlConstruct", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false),
            @XmlElementRef(name = "ControlConstructReference", namespace = "ddi:datacollection:3_2", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> controlConstructOrControlConstructReference;
    @XmlElements({
            @XmlElement(name = "ControlConstructGroup", type = ControlConstructGroupType.class),
            @XmlElement(name = "ControlConstructGroupReference", type = ReferenceType.class)
    })
    protected List<Object> controlConstructGroupOrControlConstructGroupReference;

    /**
     * A name for the ControlConstructScheme. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the controlConstructSchemeName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the controlConstructSchemeName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getControlConstructSchemeName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getControlConstructSchemeName() {
        if (controlConstructSchemeName == null) {
            controlConstructSchemeName = new ArrayList<NameType>();
        }
        return this.controlConstructSchemeName;
    }

    /**
     * A display label for the ControlConstructScheme. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the content and purpose of the ControlConstructScheme. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Provides for inclusion by reference of external Control Construct Schemes.Gets the value of the controlConstructSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the controlConstructSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getControlConstructSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SchemeReferenceType }
     */
    public List<SchemeReferenceType> getControlConstructSchemeReference() {
        if (controlConstructSchemeReference == null) {
            controlConstructSchemeReference = new ArrayList<SchemeReferenceType>();
        }
        return this.controlConstructSchemeReference;
    }

    /**
     * Gets the value of the controlConstructOrControlConstructReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the controlConstructOrControlConstructReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getControlConstructOrControlConstructReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link SequenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link QuestionConstructType }{@code >}
     * {@link JAXBElement }{@code <}{@link ControlConstructType }{@code >}
     * {@link JAXBElement }{@code <}{@link ControlConstructReferenceType }{@code >}
     * {@link JAXBElement }{@code <}{@link RepeatWhileType }{@code >}
     * {@link JAXBElement }{@code <}{@link StatementItemType }{@code >}
     * {@link JAXBElement }{@code <}{@link IfThenElseType }{@code >}
     * {@link JAXBElement }{@code <}{@link RepeatUntilType }{@code >}
     * {@link JAXBElement }{@code <}{@link ComputationItemType }{@code >}
     * {@link JAXBElement }{@code <}{@link LoopType }{@code >}
     */
    public List<JAXBElement<?>> getControlConstructOrControlConstructReference() {
        if (controlConstructOrControlConstructReference == null) {
            controlConstructOrControlConstructReference = new ArrayList<JAXBElement<?>>();
        }
        return this.controlConstructOrControlConstructReference;
    }

    /**
     * Gets the value of the controlConstructGroupOrControlConstructGroupReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the controlConstructGroupOrControlConstructGroupReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getControlConstructGroupOrControlConstructGroupReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ControlConstructGroupType }
     * {@link ReferenceType }
     */
    public List<Object> getControlConstructGroupOrControlConstructGroupReference() {
        if (controlConstructGroupOrControlConstructGroupReference == null) {
            controlConstructGroupOrControlConstructGroupReference = new ArrayList<Object>();
        }
        return this.controlConstructGroupOrControlConstructGroupReference;
    }

}
