//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.conceptualcomponent;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;

import Metadata.Specifications.DDI.LifeCycle.reusable.CoverageType;
import Metadata.Specifications.DDI.LifeCycle.reusable.LabelType;
import Metadata.Specifications.DDI.LifeCycle.reusable.MaintainableType;
import Metadata.Specifications.DDI.LifeCycle.reusable.NameType;
import Metadata.Specifications.DDI.LifeCycle.reusable.OtherMaterialType;
import Metadata.Specifications.DDI.LifeCycle.reusable.SchemeReferenceType;
import Metadata.Specifications.DDI.LifeCycle.reusable.StructuredStringType;


/**
 * A maintainable module for the conceptual components of the study or group of studies. Conceptual components include the objects used to describe the concepts the study is examining, the universe (population) and sub-universes those concepts to which they are related, and the geographic structures and locations wherein those populations reside. Concepts, and ConceptualVariables (containing a concept linked to a universe) provide an abstract view of what is being measured by questions or other forms of data capture, and the variables which are used to describe the data that will be collected. Universe describes the populations (objects) about whom information is sought. GeographicStructure and GeographicLocation specify the geographical locations of those objects and the structural relationships between locations of different types, e.g. the relationship of a city to the state that contains it. In addition to the standard name, label, and description, ConceptualComponent contains ConceptSchemes, ConceptualVariableSchemes, UniverseSchemes, GeographicStructureSchemes, and GeographicLocationSchemes both in-line and by reference.
 * <p>
 * <p>Java class for ConceptualComponentType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="ConceptualComponentType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}MaintainableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptualComponentModuleName" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Label" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Coverage" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}OtherMaterial" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptScheme"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ConceptSchemeReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}UniverseScheme"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}UniverseSchemeReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}ConceptualVariableScheme"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}ConceptualVariableSchemeReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}GeographicStructureScheme"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicStructureSchemeReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:conceptualcomponent:3_2}GeographicLocationScheme"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicLocationSchemeReference"/&gt;
 *         &lt;/choice&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConceptualComponentType", propOrder = {
        "conceptualComponentModuleName",
        "label",
        "description",
        "coverage",
        "otherMaterial",
        "conceptSchemeOrConceptSchemeReference",
        "universeSchemeOrUniverseSchemeReference",
        "conceptualVariableSchemeOrConceptualVariableSchemeReference",
        "geographicStructureSchemeOrGeographicStructureSchemeReference",
        "geographicLocationSchemeOrGeographicLocationSchemeReference"
})
public class ConceptualComponentType
        extends MaintainableType {

    @XmlElement(name = "ConceptualComponentModuleName")
    protected List<NameType> conceptualComponentModuleName;
    @XmlElement(name = "Label", namespace = "ddi:reusable:3_2")
    protected List<LabelType> label;
    @XmlElement(name = "Description", namespace = "ddi:reusable:3_2")
    protected StructuredStringType description;
    @XmlElement(name = "Coverage", namespace = "ddi:reusable:3_2")
    protected CoverageType coverage;
    @XmlElement(name = "OtherMaterial", namespace = "ddi:reusable:3_2")
    protected List<OtherMaterialType> otherMaterial;
    @XmlElements({
            @XmlElement(name = "ConceptScheme", type = ConceptSchemeType.class),
            @XmlElement(name = "ConceptSchemeReference", namespace = "ddi:reusable:3_2", type = SchemeReferenceType.class)
    })
    protected List<Object> conceptSchemeOrConceptSchemeReference;
    @XmlElements({
            @XmlElement(name = "UniverseScheme", type = UniverseSchemeType.class),
            @XmlElement(name = "UniverseSchemeReference", namespace = "ddi:reusable:3_2", type = SchemeReferenceType.class)
    })
    protected List<Object> universeSchemeOrUniverseSchemeReference;
    @XmlElements({
            @XmlElement(name = "ConceptualVariableScheme", type = ConceptualVariableSchemeType.class),
            @XmlElement(name = "ConceptualVariableSchemeReference", namespace = "ddi:reusable:3_2", type = SchemeReferenceType.class)
    })
    protected List<Object> conceptualVariableSchemeOrConceptualVariableSchemeReference;
    @XmlElements({
            @XmlElement(name = "GeographicStructureScheme", type = GeographicStructureSchemeType.class),
            @XmlElement(name = "GeographicStructureSchemeReference", namespace = "ddi:reusable:3_2", type = SchemeReferenceType.class)
    })
    protected List<Object> geographicStructureSchemeOrGeographicStructureSchemeReference;
    @XmlElements({
            @XmlElement(name = "GeographicLocationScheme", type = GeographicLocationSchemeType.class),
            @XmlElement(name = "GeographicLocationSchemeReference", namespace = "ddi:reusable:3_2", type = SchemeReferenceType.class)
    })
    protected List<Object> geographicLocationSchemeOrGeographicLocationSchemeReference;

    /**
     * A name for the ConceptualComponentModule. May be expressed in multiple languages. Repeat the element to express names with different content, for example different names for different systems.Gets the value of the conceptualComponentModuleName property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptualComponentModuleName property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptualComponentModuleName().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameType }
     */
    public List<NameType> getConceptualComponentModuleName() {
        if (conceptualComponentModuleName == null) {
            conceptualComponentModuleName = new ArrayList<NameType>();
        }
        return this.conceptualComponentModuleName;
    }

    /**
     * A display label for the ConceptualComponentModule. May be expressed in multiple languages. Repeat for labels with different content, for example, labels with differing length limitations.Gets the value of the label property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the label property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLabel().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LabelType }
     */
    public List<LabelType> getLabel() {
        if (label == null) {
            label = new ArrayList<LabelType>();
        }
        return this.label;
    }

    /**
     * A description of the ConceptualComponentModule. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Provides information about the topical, spatial, and temporal coverage of the conceptual components included in this module.
     *
     * @return possible object is
     * {@link CoverageType }
     */
    public CoverageType getCoverage() {
        return coverage;
    }

    /**
     * Sets the value of the coverage property.
     *
     * @param value allowed object is
     *              {@link CoverageType }
     */
    public void setCoverage(CoverageType value) {
        this.coverage = value;
    }

    /**
     * Provides information about external resources related to the conceptual components described in this module.Gets the value of the otherMaterial property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the otherMaterial property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOtherMaterial().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OtherMaterialType }
     */
    public List<OtherMaterialType> getOtherMaterial() {
        if (otherMaterial == null) {
            otherMaterial = new ArrayList<OtherMaterialType>();
        }
        return this.otherMaterial;
    }

    /**
     * Gets the value of the conceptSchemeOrConceptSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptSchemeOrConceptSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptSchemeOrConceptSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptSchemeType }
     * {@link SchemeReferenceType }
     */
    public List<Object> getConceptSchemeOrConceptSchemeReference() {
        if (conceptSchemeOrConceptSchemeReference == null) {
            conceptSchemeOrConceptSchemeReference = new ArrayList<Object>();
        }
        return this.conceptSchemeOrConceptSchemeReference;
    }

    /**
     * Gets the value of the universeSchemeOrUniverseSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the universeSchemeOrUniverseSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getUniverseSchemeOrUniverseSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link UniverseSchemeType }
     * {@link SchemeReferenceType }
     */
    public List<Object> getUniverseSchemeOrUniverseSchemeReference() {
        if (universeSchemeOrUniverseSchemeReference == null) {
            universeSchemeOrUniverseSchemeReference = new ArrayList<Object>();
        }
        return this.universeSchemeOrUniverseSchemeReference;
    }

    /**
     * Gets the value of the conceptualVariableSchemeOrConceptualVariableSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the conceptualVariableSchemeOrConceptualVariableSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConceptualVariableSchemeOrConceptualVariableSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConceptualVariableSchemeType }
     * {@link SchemeReferenceType }
     */
    public List<Object> getConceptualVariableSchemeOrConceptualVariableSchemeReference() {
        if (conceptualVariableSchemeOrConceptualVariableSchemeReference == null) {
            conceptualVariableSchemeOrConceptualVariableSchemeReference = new ArrayList<Object>();
        }
        return this.conceptualVariableSchemeOrConceptualVariableSchemeReference;
    }

    /**
     * Gets the value of the geographicStructureSchemeOrGeographicStructureSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicStructureSchemeOrGeographicStructureSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicStructureSchemeOrGeographicStructureSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GeographicStructureSchemeType }
     * {@link SchemeReferenceType }
     */
    public List<Object> getGeographicStructureSchemeOrGeographicStructureSchemeReference() {
        if (geographicStructureSchemeOrGeographicStructureSchemeReference == null) {
            geographicStructureSchemeOrGeographicStructureSchemeReference = new ArrayList<Object>();
        }
        return this.geographicStructureSchemeOrGeographicStructureSchemeReference;
    }

    /**
     * Gets the value of the geographicLocationSchemeOrGeographicLocationSchemeReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicLocationSchemeOrGeographicLocationSchemeReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicLocationSchemeOrGeographicLocationSchemeReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GeographicLocationSchemeType }
     * {@link SchemeReferenceType }
     */
    public List<Object> getGeographicLocationSchemeOrGeographicLocationSchemeReference() {
        if (geographicLocationSchemeOrGeographicLocationSchemeReference == null) {
            geographicLocationSchemeOrGeographicLocationSchemeReference = new ArrayList<Object>();
        }
        return this.geographicLocationSchemeOrGeographicLocationSchemeReference;
    }

}
