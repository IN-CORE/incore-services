//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.04 at 03:10:13 PM CST 
//


package Metadata.Specifications.DDI.LifeCycle.reusable;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * Describes the geographic coverage of the data documented in a particular DDI module. If subordinate to another module, this description should be a sub-set of the parent module's geographic coverage. Contains a definition for a Bounding Box used for coordinate searches, a definition of the geographic coverage, a reference to a variable that describes the geographic structure, definition of the spatial object of the data, a reference to a GeographicStructure and GeographicLocation providing further details of the coverage, and specification of the geographic summary levels for which data are provided, the top and lowest levels of geographic identification provided.
 * <p>
 * <p>Java class for GeographicCoverageType complex type.
 * <p>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;complexType name="GeographicCoverageType"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{ddi:reusable:3_2}IdentifiableType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element ref="{ddi:reusable:3_2}BoundingBox" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}Description" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}CountryCode" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}GeographyStructureVariableReference" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}SpatialObject" minOccurs="0"/&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicStructureReference"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicLevelReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;choice maxOccurs="unbounded" minOccurs="0"&gt;
 *           &lt;element ref="{ddi:reusable:3_2}GeographicLocationReference"/&gt;
 *           &lt;element ref="{ddi:reusable:3_2}LocationValueReference"/&gt;
 *         &lt;/choice&gt;
 *         &lt;element ref="{ddi:reusable:3_2}SummaryDataReference" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}TopLevelReference" minOccurs="0"/&gt;
 *         &lt;element ref="{ddi:reusable:3_2}LowestLevelReference" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GeographicCoverageType", propOrder = {
        "boundingBox",
        "description",
        "countryCode",
        "geographyStructureVariableReference",
        "spatialObject",
        "geographicStructureReferenceOrGeographicLevelReference",
        "geographicLocationReferenceOrLocationValueReference",
        "summaryDataReference",
        "topLevelReference",
        "lowestLevelReference"
})
public class GeographicCoverageType
        extends IdentifiableType {

    @XmlElement(name = "BoundingBox")
    protected BoundingBoxType boundingBox;
    @XmlElement(name = "Description")
    protected StructuredStringType description;
    @XmlElementRef(name = "CountryCode", namespace = "ddi:reusable:3_2", type = JAXBElement.class, required = false)
    protected List<JAXBElement<? extends CountryCodeType>> countryCode;
    @XmlElement(name = "GeographyStructureVariableReference")
    protected ReferenceType geographyStructureVariableReference;
    @XmlElement(name = "SpatialObject")
    @XmlSchemaType(name = "NMTOKEN")
    protected GeographicDescriptionCodeType spatialObject;
    @XmlElements({
            @XmlElement(name = "GeographicStructureReference", type = GeographicStructureReferenceType.class),
            @XmlElement(name = "GeographicLevelReference")
    })
    protected List<ReferenceType> geographicStructureReferenceOrGeographicLevelReference;
    @XmlElements({
            @XmlElement(name = "GeographicLocationReference", type = GeographicLocationReferenceType.class),
            @XmlElement(name = "LocationValueReference")
    })
    protected List<ReferenceType> geographicLocationReferenceOrLocationValueReference;
    @XmlElement(name = "SummaryDataReference")
    protected List<ReferenceType> summaryDataReference;
    @XmlElement(name = "TopLevelReference")
    protected LevelReferenceType topLevelReference;
    @XmlElement(name = "LowestLevelReference")
    protected LevelReferenceType lowestLevelReference;

    /**
     * The Bounding Box is a 'rectangle, oriented to the x and y axes, which bounds a geographic feature or a geographic dataset. It is specified by two coordinates: xmin, ymin and xmax, ymax.' [FGDC]. In the DDI, it describes the full extent of the geographic coverage, and is designed to be used by systems that search for geography by coordinates. It is compatible with the description and structure found in FGDC and other geographic metadata structures.
     *
     * @return possible object is
     * {@link BoundingBoxType }
     */
    public BoundingBoxType getBoundingBox() {
        return boundingBox;
    }

    /**
     * Sets the value of the boundingBox property.
     *
     * @param value allowed object is
     *              {@link BoundingBoxType }
     */
    public void setBoundingBox(BoundingBoxType value) {
        this.boundingBox = value;
    }

    /**
     * A summary description of the geographic (spatial) coverage of the module. It may include information on all levels of spatial coverage, in addition to the overall coverage. This field can map to Dublin Core Coverage, which does not support structured strings. Therefore, if there is intent to map to Dublin Core, the text should not be marked up with XHTML. May be expressed in multiple languages and supports the use of structured content.
     *
     * @return possible object is
     * {@link StructuredStringType }
     */
    public StructuredStringType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     *
     * @param value allowed object is
     *              {@link StructuredStringType }
     */
    public void setDescription(StructuredStringType value) {
        this.description = value;
    }

    /**
     * Serves as head of a substitution group for specifying ISO 3166 Country Codes or use of unspecified text. Use of ISO 3166 Country codes strongly recommended. Repeat for each country. If Gets the value of the countryCode property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the countryCode property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCountryCode().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link CountryCodeType }{@code >}
     * {@link JAXBElement }{@code <}{@link Country3Type }{@code >}
     * {@link JAXBElement }{@code <}{@link CountryType }{@code >}
     * {@link JAXBElement }{@code <}{@link Country2Type }{@code >}
     * {@link JAXBElement }{@code <}{@link CountryNType }{@code >}
     */
    public List<JAXBElement<? extends CountryCodeType>> getCountryCode() {
        if (countryCode == null) {
            countryCode = new ArrayList<JAXBElement<? extends CountryCodeType>>();
        }
        return this.countryCode;
    }

    /**
     * References a variable describing the geographic levels available in the data such as the variable "Summary Level" in U.S. Census data. This reference is needed for assistance in programming.
     *
     * @return possible object is
     * {@link ReferenceType }
     */
    public ReferenceType getGeographyStructureVariableReference() {
        return geographyStructureVariableReference;
    }

    /**
     * Sets the value of the geographyStructureVariableReference property.
     *
     * @param value allowed object is
     *              {@link ReferenceType }
     */
    public void setGeographyStructureVariableReference(ReferenceType value) {
        this.geographyStructureVariableReference = value;
    }

    /**
     * Contains information on the most discrete type of spatial representation to which data described by this module can be attached (point, line, polygon, linear ring). For example, a raw data file with an address attached to each case is 'point'. When the microdata file is anonymized and the geographic information is for a state or other defined area, it is 'polygon'. Some data, such as traffic or criminal incidence data may have a street range identification or 'line', and some such as communications data have a point with a radius or 'linear ring'.
     *
     * @return possible object is
     * {@link GeographicDescriptionCodeType }
     */
    public GeographicDescriptionCodeType getSpatialObject() {
        return spatialObject;
    }

    /**
     * Sets the value of the spatialObject property.
     *
     * @param value allowed object is
     *              {@link GeographicDescriptionCodeType }
     */
    public void setSpatialObject(GeographicDescriptionCodeType value) {
        this.spatialObject = value;
    }

    /**
     * Gets the value of the geographicStructureReferenceOrGeographicLevelReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicStructureReferenceOrGeographicLevelReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicStructureReferenceOrGeographicLevelReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GeographicStructureReferenceType }
     * {@link ReferenceType }
     */
    public List<ReferenceType> getGeographicStructureReferenceOrGeographicLevelReference() {
        if (geographicStructureReferenceOrGeographicLevelReference == null) {
            geographicStructureReferenceOrGeographicLevelReference = new ArrayList<ReferenceType>();
        }
        return this.geographicStructureReferenceOrGeographicLevelReference;
    }

    /**
     * Gets the value of the geographicLocationReferenceOrLocationValueReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the geographicLocationReferenceOrLocationValueReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeographicLocationReferenceOrLocationValueReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link GeographicLocationReferenceType }
     * {@link ReferenceType }
     */
    public List<ReferenceType> getGeographicLocationReferenceOrLocationValueReference() {
        if (geographicLocationReferenceOrLocationValueReference == null) {
            geographicLocationReferenceOrLocationValueReference = new ArrayList<ReferenceType>();
        }
        return this.geographicLocationReferenceOrLocationValueReference;
    }

    /**
     * May be repeated to reference each geography (geographic level) for which there is summary data. For example, person records may contain summary data on the State, County, or City in which they reside. In data collections where the individual case is a geographic location such as a County, data may be provided that summarizes State or National data. This is often true where data suppression at lower geographies makes it impossible to roll-up or aggregate the data to obtain values for the higher levels.Gets the value of the summaryDataReference property.
     * <p>
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the summaryDataReference property.
     * <p>
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSummaryDataReference().add(newItem);
     * </pre>
     * <p>
     * <p>
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReferenceType }
     */
    public List<ReferenceType> getSummaryDataReference() {
        if (summaryDataReference == null) {
            summaryDataReference = new ArrayList<ReferenceType>();
        }
        return this.summaryDataReference;
    }

    /**
     * Reference to the top or highest GeographicLevel.
     *
     * @return possible object is
     * {@link LevelReferenceType }
     */
    public LevelReferenceType getTopLevelReference() {
        return topLevelReference;
    }

    /**
     * Sets the value of the topLevelReference property.
     *
     * @param value allowed object is
     *              {@link LevelReferenceType }
     */
    public void setTopLevelReference(LevelReferenceType value) {
        this.topLevelReference = value;
    }

    /**
     * Reference to the bottom or lowest GeographicLevel.
     *
     * @return possible object is
     * {@link LevelReferenceType }
     */
    public LevelReferenceType getLowestLevelReference() {
        return lowestLevelReference;
    }

    /**
     * Sets the value of the lowestLevelReference property.
     *
     * @param value allowed object is
     *              {@link LevelReferenceType }
     */
    public void setLowestLevelReference(LevelReferenceType value) {
        this.lowestLevelReference = value;
    }

}
