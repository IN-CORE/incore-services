name: CI

on: push

jobs:
  unit_tests:
    name: Run Tests and Docker push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Branch Name Action
        id: branch-name
        uses: tj-actions/branch-names@v5

      - name: Get branch name
        run: |
          echo "Running on: ${{ steps.branch-name.outputs.current_branch }}"
          echo "Running on: ${{ steps.branch-name.outputs.ref_branch }}"

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - name: Build and Test Farm
        run: |
          java --version
#          cd server/
#          ./gradlew clean
#          ./gradlew assemble
#          ./gradlew test

      # calculate some variables that are used later
      - name: version information
        run: |
          if [ "${{ github.event.release.target_commitish }}" != "" ]; then
            BRANCH="${{ github.event.release.target_commitish }}"
          elif [[ $GITHUB_REF =~ pull ]]; then
            BRANCH="$(echo $GITHUB_REF | sed 's#refs/pull/\([0-9]*\)/merge#PR-\1#')"
          else
            BRANCH=${GITHUB_REF##*/}
          fi
          echo "GITHUB_BRANCH=${BRANCH}" >> $GITHUB_ENV
          if [ "$BRANCH" == "master" ]; then
            version=$(cat ./server/build.gradle | grep "archiveVersion" | head -1 | awk -F= "{ print $2 }" | sed "s/[archiveVersion =,',]//g")
            tags="latest"
            oldversion=""
            while [ "${oldversion}" != "${version}" ]; do
              oldversion="${version}"
              tags="${tags},${version}"
              version=${version%.*}
            done
            echo "VERSION=${version}" >> $GITHUB_ENV
            echo "TAGS=${tags}" >> $GITHUB_ENV
          elif [ "$BRANCH" == "develop" ]; then
            echo "VERSION=develop" >> $GITHUB_ENV
            echo "TAGS=develop" >> $GITHUB_ENV
          else
            echo "VERSION=testing" >> $GITHUB_ENV
            echo "TAGS=${BRANCH}" >> $GITHUB_ENV
          fi

          echo "VERSION=${VERSION}"
          echo "TAGS=${BRANCH}"